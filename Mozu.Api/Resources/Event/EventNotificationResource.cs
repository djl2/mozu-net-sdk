
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.     
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using Mozu.Api.Security;


namespace Mozu.Api.Resources.Event
{
	/// <summary>
	/// 
	/// </summary>
	public partial class EventNotificationResource  	{
		
		/// <summary>
		/// 
		/// </summary>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Event.EventCollection"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var eventnotification = new EventNotification();
		///   var eventCollection = eventnotification.GetEvents();
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.Event.EventCollection GetEvents()
		{
			return GetEvents( null,  null,  null,  null, null);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="filter"></param>
		/// <param name="pageSize"></param>
		/// <param name="sortBy"></param>
		/// <param name="startIndex"></param>
		/// <param name="authTicket">User Auth Ticket{<see cref="Mozu.Api.Security.AuthTicket"/>}. If User Token is expired, authTicket will have a new Token and expiration date.</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Event.EventCollection"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var eventnotification = new EventNotification();
		///   var eventCollection = eventnotification.GetEvents( filter,  pageSize,  sortBy,  startIndex, authTicket);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.Event.EventCollection GetEvents(string filter =  null, int? pageSize =  null, string sortBy =  null, int? startIndex =  null, AuthTicket authTicket= null)
		{
			MozuClient<Mozu.Api.Contracts.Event.EventCollection> response;
			var client = Mozu.Api.Clients.Event.EventNotificationClient.GetEventsClient( filter,  pageSize,  sortBy,  startIndex, authTicket);
			response= client.Execute();
			return response.Result();

		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="eventId"></param>
		/// <param name="authTicket">User Auth Ticket{<see cref="Mozu.Api.Security.AuthTicket"/>}. If User Token is expired, authTicket will have a new Token and expiration date.</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Event.Event"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var eventnotification = new EventNotification();
		///   var event = eventnotification.GetEvent( eventId, authTicket);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.Event.Event GetEvent(string eventId, AuthTicket authTicket= null)
		{
			MozuClient<Mozu.Api.Contracts.Event.Event> response;
			var client = Mozu.Api.Clients.Event.EventNotificationClient.GetEventClient( eventId, authTicket);
			response= client.Execute();
			return response.Result();

		}

								
	}

}


