
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.     
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using Mozu.Api.Security;


namespace Mozu.Api.Resources.Platform.Developer
{
	/// <summary>
	/// Use the Developer Accounts resource to retrieve details about the developer account a company uses to test applications and themes.
	/// </summary>
	public partial class DeveloperAccountResource  	{
		
		/// <summary>
		/// Retrieves the details of the developer account specified in the request.
		/// </summary>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.AppDev.DeveloperAccount"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var developeraccount = new DeveloperAccount();
		///   var developerAccount = developeraccount.GetDeveloperAccount();
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.AppDev.DeveloperAccount GetDeveloperAccount()
		{
			return GetDeveloperAccount( null, null);
		}

		/// <summary>
		/// Retrieves the details of the developer account specified in the request.
		/// </summary>
		/// <param name="accountId">Unique identifier of the developer account to retrieve.</param>
		/// <param name="authTicket">User Auth Ticket{<see cref="Mozu.Api.Security.AuthTicket"/>}. If User Token is expired, authTicket will have a new Token and expiration date.</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.AppDev.DeveloperAccount"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var developeraccount = new DeveloperAccount();
		///   var developerAccount = developeraccount.GetDeveloperAccount( accountId, authTicket);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.AppDev.DeveloperAccount GetDeveloperAccount(int? accountId =  null, AuthTicket authTicket= null)
		{
			MozuClient<Mozu.Api.Contracts.AppDev.DeveloperAccount> response;
			var client = Mozu.Api.Clients.Platform.Developer.DeveloperAccountClient.GetDeveloperAccountClient( accountId, authTicket);
			response= client.Execute();
			return response.Result();

		}


	}

}


