
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.     
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;

namespace Mozu.Api.Resources.Content
{
	/// <summary>
	/// Use the property types subresource to manage content properties.
	/// </summary>
	public partial class PropertyTypeResource : BaseResource 	{
				///
		/// <see cref="Mozu.Api.ApiContext"/>
		///
		private readonly ApiContext _apiContext;
		public PropertyTypeResource(ApiContext apiContext) 
		{
			_apiContext = apiContext;
		}

		
		/// <summary>
		/// Retrieves a list of the content property types.
		/// </summary>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Content.PropertyTypeCollection"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var propertytype = new PropertyType();
		///   var propertyTypeCollection = propertytype.GetList();
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.Content.PropertyTypeCollection GetList()
		{
			return GetList( null,  null);
		}

		/// <summary>
		/// Retrieves a list of the content property types.
		/// </summary>
		/// <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
		/// <param name="startIndex"></param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Content.PropertyTypeCollection"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var propertytype = new PropertyType();
		///   var propertyTypeCollection = propertytype.GetList( pageSize,  startIndex);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.Content.PropertyTypeCollection GetList(int? pageSize, int? startIndex)
		{
						MozuClient<Mozu.Api.Contracts.Content.PropertyTypeCollection> response;
			var client = Mozu.Api.Clients.Content.PropertyTypeClient.GetListClient( pageSize,  startIndex);
			SetContext(_apiContext, ref client,true);
			response= client.Execute();
			return response.Result();

		}

		/// <summary>
		/// Retrieves the details of the content property type.
		/// </summary>
		/// <param name="propertyTypeName">The name of the content property type.</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Content.PropertyType"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var propertytype = new PropertyType();
		///   var propertyType = propertytype.Get( propertyTypeName);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.Content.PropertyType Get(string propertyTypeName)
		{
						MozuClient<Mozu.Api.Contracts.Content.PropertyType> response;
			var client = Mozu.Api.Clients.Content.PropertyTypeClient.GetClient( propertyTypeName);
			SetContext(_apiContext, ref client,true);
			response= client.Execute();
			return response.Result();

		}

		/// <summary>
		/// Retrieves the value types associated with a content property.
		/// </summary>
		/// <returns>
		/// List{<see cref="Mozu.Api.Contracts.Content.PropertyValueType"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var propertytype = new PropertyType();
		///   var propertyValueType = propertytype.PropertyValueTypes();
		/// </code>
		/// </example>
		public virtual List<Mozu.Api.Contracts.Content.PropertyValueType> PropertyValueTypes()
		{
						MozuClient<List<Mozu.Api.Contracts.Content.PropertyValueType>> response;
			var client = Mozu.Api.Clients.Content.PropertyTypeClient.PropertyValueTypesClient();
			SetContext(_apiContext, ref client,true);
			response= client.Execute();
			return response.Result();

		}

								
	}

}


