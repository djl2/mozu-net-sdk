
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.     
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using Mozu.Api.Security;


namespace Mozu.Api.Resources.Content
{
	/// <summary>
	/// The DocumentTypes resource is a part of the Content Service.
	/// </summary>
	public partial class DocumentTypeResource  	{
		///
		/// <see cref="Mozu.Api.ApiContext"/>
		///
		private readonly IApiContext _apiContext;
		public DocumentTypeResource(IApiContext apiContext) 
		{
			_apiContext = apiContext;
		}

		
		/// <summary>
		/// Retrieves a paged list of DocumentTypes.
		/// </summary>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Content.DocumentTypeCollection"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var documenttype = new DocumentType();
		///   var documentTypeCollection = documenttype.List(dataViewMode);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.Content.DocumentTypeCollection List(DataViewMode dataViewMode)
		{
			return List(dataViewMode,  null,  null, null);
		}

		/// <summary>
		/// Retrieves a paged list of DocumentTypes.
		/// </summary>
		/// <param name="pageSize"></param>
		/// <param name="startIndex"></param>
		/// <param name="authTicket">User Auth Ticket{<see cref="Mozu.Api.Security.AuthTicket"/>}. If User Token is expired, authTicket will have a new Token and expiration date.</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Content.DocumentTypeCollection"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var documenttype = new DocumentType();
		///   var documentTypeCollection = documenttype.List(dataViewMode,  pageSize,  startIndex, authTicket);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.Content.DocumentTypeCollection List(DataViewMode dataViewMode, int? pageSize =  null, int? startIndex =  null, AuthTicket authTicket= null)
		{
			MozuClient<Mozu.Api.Contracts.Content.DocumentTypeCollection> response;
			var client = Mozu.Api.Clients.Content.DocumentTypeClient.ListClient(dataViewMode,  pageSize,  startIndex, authTicket);
			client.WithContext(_apiContext);
			response= client.Execute();
			return response.Result();

		}

		/// <summary>
		/// Retrieves an existing DocumentType.
		/// </summary>
		/// <param name="documentTypeName">The documentType name being retrieved.</param>
		/// <param name="authTicket">User Auth Ticket{<see cref="Mozu.Api.Security.AuthTicket"/>}. If User Token is expired, authTicket will have a new Token and expiration date.</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Content.DocumentType"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var documenttype = new DocumentType();
		///   var documentType = documenttype.Get(dataViewMode,  documentTypeName, authTicket);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.Content.DocumentType Get(DataViewMode dataViewMode, string documentTypeName, AuthTicket authTicket= null)
		{
			MozuClient<Mozu.Api.Contracts.Content.DocumentType> response;
			var client = Mozu.Api.Clients.Content.DocumentTypeClient.GetClient(dataViewMode,  documentTypeName, authTicket);
			client.WithContext(_apiContext);
			response= client.Execute();
			return response.Result();

		}


	}

}


