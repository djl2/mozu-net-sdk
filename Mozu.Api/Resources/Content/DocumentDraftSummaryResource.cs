
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.     
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using Mozu.Api.Security;


namespace Mozu.Api.Resources.Content
{
	/// <summary>
	/// Use the document publishing subresource to manage and publish document drafts in the Content service.
	/// </summary>
	public partial class DocumentDraftSummaryResource  	{
				///
		/// <see cref="Mozu.Api.ApiContext"/>
		///
		private readonly IApiContext _apiContext;
		public DocumentDraftSummaryResource(IApiContext apiContext) 
		{
			_apiContext = apiContext;
		}

		
		/// <summary>
		/// Retrieves a list of the documents currently in draft state according to any sort criteria defined.
		/// </summary>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Content.DocumentDraftSummaryPagedCollection"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var documentdraftsummary = new DocumentDraftSummary();
		///   var documentDraftSummaryPagedCollection = documentdraftsummary.ListDocumentDraftSummaries();
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.Content.DocumentDraftSummaryPagedCollection ListDocumentDraftSummaries()
		{
			return ListDocumentDraftSummaries( null,  null,  null, null);
		}

		/// <summary>
		/// Retrieves a list of the documents currently in draft state according to any sort criteria defined.
		/// </summary>
		/// <param name="documentLists">Lists that contain the document drafts.</param>
		/// <param name="pageSize">Used to create paged results from a query. Specifies the number of results to display on each page. Maximum: 200.</param>
		/// <param name="startIndex">"Used to create paged results from a query. Indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3."</param>
		/// <param name="authTicket">User Auth Ticket{<see cref="Mozu.Api.Security.AuthTicket"/>}. If User Token is expired, authTicket will have a new Token and expiration date.</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Content.DocumentDraftSummaryPagedCollection"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var documentdraftsummary = new DocumentDraftSummary();
		///   var documentDraftSummaryPagedCollection = documentdraftsummary.ListDocumentDraftSummaries( documentLists,  pageSize,  startIndex, authTicket);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.Content.DocumentDraftSummaryPagedCollection ListDocumentDraftSummaries(string documentLists =  null, int? pageSize =  null, int? startIndex =  null, AuthTicket authTicket= null)
		{
			MozuClient<Mozu.Api.Contracts.Content.DocumentDraftSummaryPagedCollection> response;
			var client = Mozu.Api.Clients.Content.DocumentDraftSummaryClient.ListDocumentDraftSummariesClient( documentLists,  pageSize,  startIndex, authTicket);
			client.WithContext(_apiContext);
			response= client.Execute();
			return response.Result();

		}

						/// <summary>
		/// Publish one or more document drafts to live content on the site.
		/// </summary>
		/// <param name="documentIds">List of unique identifiers of the document drafts to publish.</param>
		/// <returns>
		/// 
		/// </returns>
		/// <example>
		/// <code>
		///   var documentdraftsummary = new DocumentDraftSummary();
		///   documentdraftsummary.PublishDocuments( documentIds);
		/// </code>
		/// </example>
		public virtual void PublishDocuments(List<string> documentIds)
		{
			PublishDocuments( documentIds,  null, null);
		}

		/// <summary>
		/// Publish one or more document drafts to live content on the site.
		/// </summary>
		/// <param name="documentLists">List of document lists that contain documents to publish.</param>
		/// <param name="authTicket">User Auth Ticket{<see cref="Mozu.Api.Security.AuthTicket"/>}. If User Token is expired, authTicket will have a new Token and expiration date.</param>
		/// <param name="documentIds">List of unique identifiers of the document drafts to publish.</param>
		/// <returns>
		/// 
		/// </returns>
		/// <example>
		/// <code>
		///   var documentdraftsummary = new DocumentDraftSummary();
		///   documentdraftsummary.PublishDocuments( documentIds,  documentLists, authTicket);
		/// </code>
		/// </example>
		public virtual void PublishDocuments(List<string> documentIds, string documentLists =  null, AuthTicket authTicket= null)
		{
			MozuClient response;
			var client = Mozu.Api.Clients.Content.DocumentDraftSummaryClient.PublishDocumentsClient( documentIds,  documentLists, authTicket);
			client.WithContext(_apiContext);
			response= client.Execute();

		}

				/// <summary>
		/// Deletes the drafts of the specified documents. Published documents cannot be deleted.
		/// </summary>
		/// <param name="documentIds">Unique identifiers of the documents to delete.</param>
		/// <returns>
		/// 
		/// </returns>
		/// <example>
		/// <code>
		///   var documentdraftsummary = new DocumentDraftSummary();
		///   documentdraftsummary.DeleteDocumentDrafts( documentIds);
		/// </code>
		/// </example>
		public virtual void DeleteDocumentDrafts(string documentIds)
		{
			DeleteDocumentDrafts( documentIds,  null, null);
		}

		/// <summary>
		/// Deletes the drafts of the specified documents. Published documents cannot be deleted.
		/// </summary>
		/// <param name="documentIds">Unique identifiers of the documents to delete.</param>
		/// <param name="documentLists">List of document lists that contain documents to delete.</param>
		/// <param name="authTicket">User Auth Ticket{<see cref="Mozu.Api.Security.AuthTicket"/>}. If User Token is expired, authTicket will have a new Token and expiration date.</param>
		/// <returns>
		/// 
		/// </returns>
		/// <example>
		/// <code>
		///   var documentdraftsummary = new DocumentDraftSummary();
		///   documentdraftsummary.DeleteDocumentDrafts( documentIds,  documentLists, authTicket);
		/// </code>
		/// </example>
		public virtual void DeleteDocumentDrafts(string documentIds, string documentLists =  null, AuthTicket authTicket= null)
		{
			MozuClient response;
			var client = Mozu.Api.Clients.Content.DocumentDraftSummaryClient.DeleteDocumentDraftsClient( documentIds,  documentLists, authTicket);
			client.WithContext(_apiContext);
			response= client.Execute();

		}

		
	}

}


