
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.     
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Mozu.Api.Resources.Platform;


namespace Mozu.Api.Resources
{
    public class BaseResource
    {
        protected static void SetContext(ApiContext apiContext, ref MozuClient client, bool useTenantUrl)
        {

            ValidateContext(useTenantUrl, apiContext);
            var url = apiContext.BaseUrl;

            if (useTenantUrl)
                url = apiContext.TenantUrl;

            client.WithBaseAddress(url)
                .WithContext(apiContext.TenantId, apiContext.SiteGroupId, apiContext.SiteId);

			if (!string.IsNullOrEmpty(apiContext.AppAuthTicket))
                client.AddHeader(Headers.X_VOL_APP_CLAIMS, apiContext.AppAuthTicket);
        }

        protected static void SetContext<TResult>(ApiContext apiContext, ref MozuClient<TResult> client, bool useTenantUrl)
        {
            ValidateContext(useTenantUrl, apiContext);
            var url = apiContext.BaseUrl;

            if (useTenantUrl)
                url = apiContext.TenantUrl;

            client.WithBaseAddress(url)
                   .WithContext(apiContext.TenantId, apiContext.SiteGroupId, apiContext.SiteId);
			
			if (!string.IsNullOrEmpty(apiContext.AppAuthTicket))
                client.AddHeader(Headers.X_VOL_APP_CLAIMS, apiContext.AppAuthTicket);
        }

       
        private static void ValidateContext(bool useTenantUrl, ApiContext context)
        {
            if (useTenantUrl)
            {
                if (context.TenantId <= 0)
                    throw new ApiException("TenantId is missing");

                if (string.IsNullOrEmpty(context.TenantUrl))
                {
                    var tenantResource = new TenantResource(context);
                    var tenant = tenantResource.GetTenant(context.TenantId);

                    if (tenant == null)
                        throw new ApiException("Tenant "+context.TenantId+" Not found");
                    context.SetContext(tenant);
                }
            }
            else
            {
                if (string.IsNullOrEmpty(context.BaseUrl))
                    throw new ApiException("Base Url is missing");
            }
        }
    }
}