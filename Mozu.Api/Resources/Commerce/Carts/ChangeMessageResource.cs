
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.     
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;

namespace Mozu.Api.Resources.Commerce.Carts
{
	/// <summary>
	/// System messages for live carts to notify the shopper about a product price or inventory change. System-supplied and read-only. For example: Product price is reduced due to a buy one, get one 50% off (BOGO) sale. A message may appear if the product is out of stock during the cart shopping process.
	/// </summary>
	public partial class ChangeMessageResource : BaseResource 	{
				///
		/// <see cref="Mozu.Api.ApiContext"/>
		///
		private readonly ApiContext _apiContext;
		public ChangeMessageResource(ApiContext apiContext) 
		{
			_apiContext = apiContext;
		}

		
		/// <summary>
		/// Retrieves messages to and from the current shopper. These are messages supplied by the system to notify the shopper of price increases or decreases or product unavailability.
		/// </summary>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.CommerceRuntime.Carts.CartChangeMessageCollection"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var changemessage = new ChangeMessage();
		///   var cartChangeMessageCollection = changemessage.GetMessages();
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.CommerceRuntime.Carts.CartChangeMessageCollection GetMessages()
		{
						MozuClient<Mozu.Api.Contracts.CommerceRuntime.Carts.CartChangeMessageCollection> response;
			var client = Mozu.Api.Clients.Commerce.Carts.ChangeMessageClient.GetMessagesClient();
			SetContext(_apiContext, ref client,true);
			response= client.Execute();
			return response.Result();

		}

								/// <summary>
		/// Deletes all messages associated with the cart of the current shopper.
		/// </summary>
		/// <returns>
		/// 
		/// </returns>
		/// <example>
		/// <code>
		///   var changemessage = new ChangeMessage();
		///   changemessage.RemoveAllMessages();
		/// </code>
		/// </example>
		public virtual void RemoveAllMessages()
		{
						MozuClient response;
			var client = Mozu.Api.Clients.Commerce.Carts.ChangeMessageClient.RemoveAllMessagesClient();
			SetContext(_apiContext, ref client,true);
			response= client.Execute();

		}

		/// <summary>
		/// Removes a single message associated with the cart of the current shopper.
		/// </summary>
		/// <param name="messageId">Identifier of the message to remove from the cart.</param>
		/// <returns>
		/// 
		/// </returns>
		/// <example>
		/// <code>
		///   var changemessage = new ChangeMessage();
		///   changemessage.RemoveMessage( messageId);
		/// </code>
		/// </example>
		public virtual void RemoveMessage(string messageId)
		{
						MozuClient response;
			var client = Mozu.Api.Clients.Commerce.Carts.ChangeMessageClient.RemoveMessageClient( messageId);
			SetContext(_apiContext, ref client,true);
			response= client.Execute();

		}

		
	}

}


