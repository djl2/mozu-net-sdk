
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.     
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using Mozu.Api.Security;


namespace Mozu.Api.Resources.Commerce.Settings
{
	/// <summary>
	/// 
	/// </summary>
	public partial class LocationUsageResource  	{
				///
		/// <see cref="Mozu.Api.ApiContext"/>
		///
		private readonly IApiContext _apiContext;
		public LocationUsageResource(IApiContext apiContext) 
		{
			_apiContext = apiContext;
		}

		
		/// <summary>
		/// 
		/// </summary>
		/// <param name="authTicket">User Auth Ticket{<see cref="Mozu.Api.Security.AuthTicket"/>}. If User Token is expired, authTicket will have a new Token and expiration date.</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Location.LocationUsageCollection"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var locationusage = new LocationUsage();
		///   var locationUsageCollection = locationusage.GetLocationUsages(authTicket);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.Location.LocationUsageCollection GetLocationUsages(AuthTicket authTicket= null)
		{
			MozuClient<Mozu.Api.Contracts.Location.LocationUsageCollection> response;
			var client = Mozu.Api.Clients.Commerce.Settings.LocationUsageClient.GetLocationUsagesClient(authTicket);
			client.WithContext(_apiContext);
			response= client.Execute();
			return response.Result();

		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="code"></param>
		/// <param name="authTicket">User Auth Ticket{<see cref="Mozu.Api.Security.AuthTicket"/>}. If User Token is expired, authTicket will have a new Token and expiration date.</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Location.LocationUsage"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var locationusage = new LocationUsage();
		///   var locationUsage = locationusage.GetLocationUsage( code, authTicket);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.Location.LocationUsage GetLocationUsage(string code, AuthTicket authTicket= null)
		{
			MozuClient<Mozu.Api.Contracts.Location.LocationUsage> response;
			var client = Mozu.Api.Clients.Commerce.Settings.LocationUsageClient.GetLocationUsageClient( code, authTicket);
			client.WithContext(_apiContext);
			response= client.Execute();
			return response.Result();

		}

						/// <summary>
		/// 
		/// </summary>
		/// <param name="code"></param>
		/// <param name="authTicket">User Auth Ticket{<see cref="Mozu.Api.Security.AuthTicket"/>}. If User Token is expired, authTicket will have a new Token and expiration date.</param>
		/// <param name="usage"></param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Location.LocationUsage"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var locationusage = new LocationUsage();
		///   var locationUsage = locationusage.UpdateLocationUsage( usage,  code, authTicket);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.Location.LocationUsage UpdateLocationUsage(Mozu.Api.Contracts.Location.LocationUsage usage, string code, AuthTicket authTicket= null)
		{
			MozuClient<Mozu.Api.Contracts.Location.LocationUsage> response;
			var client = Mozu.Api.Clients.Commerce.Settings.LocationUsageClient.UpdateLocationUsageClient( usage,  code, authTicket);
			client.WithContext(_apiContext);
			response= client.Execute();
			return response.Result();

		}

				
	}

}


