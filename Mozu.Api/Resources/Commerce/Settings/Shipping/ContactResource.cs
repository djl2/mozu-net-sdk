
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.     
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using Mozu.Api.Security;


namespace Mozu.Api.Resources.Commerce.Settings.Shipping
{
	/// <summary>
	/// Use this subresource to manage the physical address from which shipments for this site will originate.
	/// </summary>
	public partial class ContactResource  	{
				///
		/// <see cref="Mozu.Api.ApiContext"/>
		///
		private readonly IApiContext _apiContext;
		public ContactResource(IApiContext apiContext) 
		{
			_apiContext = apiContext;
		}

		
		/// <summary>
		/// Retrieves the physical address from which shipments originate from the site's shipping settings.
		/// </summary>
		/// <param name="authTicket">User Auth Ticket{<see cref="Mozu.Api.Security.AuthTicket"/>}. If User Token is expired, authTicket will have a new Token and expiration date.</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Core.Contact"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var contact = new Contact();
		///   var contact = contact.GetShippingOriginAddress(authTicket);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.Core.Contact GetShippingOriginAddress(AuthTicket authTicket= null)
		{
			MozuClient<Mozu.Api.Contracts.Core.Contact> response;
			var client = Mozu.Api.Clients.Commerce.Settings.Shipping.ContactClient.GetShippingOriginAddressClient(authTicket);
			client.WithContext(_apiContext);
			response= client.Execute();
			return response.Result();

		}

				/// <summary>
		/// Creates the site's shipping origin address as it appears in shipping settings.
		/// </summary>
		/// <param name="authTicket">User Auth Ticket{<see cref="Mozu.Api.Security.AuthTicket"/>}. If User Token is expired, authTicket will have a new Token and expiration date.</param>
		/// <param name="siteShippingOriginAddress">New shipping origin address to create. Required properties: SiteShippingOriginAddress.Sender Name, .Address1, .CityOrTown, .StateOrProvince, .PostalOrZipCode, .Country.</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Core.Contact"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var contact = new Contact();
		///   var contact = contact.CreateShippingOriginAddress( siteShippingOriginAddress, authTicket);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.Core.Contact CreateShippingOriginAddress(Mozu.Api.Contracts.Core.Contact siteShippingOriginAddress, AuthTicket authTicket= null)
		{
			MozuClient<Mozu.Api.Contracts.Core.Contact> response;
			var client = Mozu.Api.Clients.Commerce.Settings.Shipping.ContactClient.CreateShippingOriginAddressClient( siteShippingOriginAddress, authTicket);
			client.WithContext(_apiContext);
			response= client.Execute();
			return response.Result();

		}

				/// <summary>
		/// Updates the site's shipping origin address as it appears in shipping settings.
		/// </summary>
		/// <param name="authTicket">User Auth Ticket{<see cref="Mozu.Api.Security.AuthTicket"/>}. If User Token is expired, authTicket will have a new Token and expiration date.</param>
		/// <param name="siteShippingOriginAddress">Properties of the site's shipping origin address. Required properties: SiteShippingOriginAddress.Sender Name, .Address1, .CityOrTown, .StateOrProvince, .PostalOrZipCode, .Country.</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Core.Contact"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var contact = new Contact();
		///   var contact = contact.UpdateShippingOriginAddress( siteShippingOriginAddress, authTicket);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.Core.Contact UpdateShippingOriginAddress(Mozu.Api.Contracts.Core.Contact siteShippingOriginAddress, AuthTicket authTicket= null)
		{
			MozuClient<Mozu.Api.Contracts.Core.Contact> response;
			var client = Mozu.Api.Clients.Commerce.Settings.Shipping.ContactClient.UpdateShippingOriginAddressClient( siteShippingOriginAddress, authTicket);
			client.WithContext(_apiContext);
			response= client.Execute();
			return response.Result();

		}

				
	}

}


