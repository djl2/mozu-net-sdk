
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.     
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using Mozu.Api.Security;


namespace Mozu.Api.Resources.Commerce.Settings.Shipping
{
	/// <summary>
	/// Use the site shipping regions subresource to manage the territories to which the site will ship products. Currently, only domestic shipping is supported.
	/// </summary>
	public partial class SiteShippingRegionResource  	{
				///
		/// <see cref="Mozu.Api.ApiContext"/>
		///
		private readonly IApiContext _apiContext;
		public SiteShippingRegionResource(IApiContext apiContext) 
		{
			_apiContext = apiContext;
		}

		
		/// <summary>
		/// Retrieves a list of the shipping regions configured for the site.
		/// </summary>
		/// <param name="authTicket">User Auth Ticket{<see cref="Mozu.Api.Security.AuthTicket"/>}. If User Token is expired, authTicket will have a new Token and expiration date.</param>
		/// <returns>
		/// List{<see cref="Mozu.Api.Contracts.SiteSettings.Shipping.SiteShippingRegion"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var siteshippingregion = new SiteShippingRegion();
		///   var siteShippingRegion = siteshippingregion.GetShippingRegions(authTicket);
		/// </code>
		/// </example>
		public virtual List<Mozu.Api.Contracts.SiteSettings.Shipping.SiteShippingRegion> GetShippingRegions(AuthTicket authTicket= null)
		{
			MozuClient<List<Mozu.Api.Contracts.SiteSettings.Shipping.SiteShippingRegion>> response;
			var client = Mozu.Api.Clients.Commerce.Settings.Shipping.SiteShippingRegionClient.GetShippingRegionsClient(authTicket);
			client.WithContext(_apiContext);
			response= client.Execute();
			return response.Result();

		}

						/// <summary>
		/// Updates the shipping regions configured for a site.
		/// </summary>
		/// <param name="authTicket">User Auth Ticket{<see cref="Mozu.Api.Security.AuthTicket"/>}. If User Token is expired, authTicket will have a new Token and expiration date.</param>
		/// <param name="siteShippingRegions">Properties of the shipping region configured for this site.</param>
		/// <returns>
		/// List{<see cref="Mozu.Api.Contracts.SiteSettings.Shipping.SiteShippingRegion"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var siteshippingregion = new SiteShippingRegion();
		///   var siteShippingRegion = siteshippingregion.UpdateShippingRegions( siteShippingRegions, authTicket);
		/// </code>
		/// </example>
		public virtual List<Mozu.Api.Contracts.SiteSettings.Shipping.SiteShippingRegion> UpdateShippingRegions(List<Mozu.Api.Contracts.SiteSettings.Shipping.SiteShippingRegion> siteShippingRegions, AuthTicket authTicket= null)
		{
			MozuClient<List<Mozu.Api.Contracts.SiteSettings.Shipping.SiteShippingRegion>> response;
			var client = Mozu.Api.Clients.Commerce.Settings.Shipping.SiteShippingRegionClient.UpdateShippingRegionsClient( siteShippingRegions, authTicket);
			client.WithContext(_apiContext);
			response= client.Execute();
			return response.Result();

		}

				/// <summary>
		/// Deletes the shipping regions configured for this site.
		/// </summary>
		/// <param name="authTicket">User Auth Ticket{<see cref="Mozu.Api.Security.AuthTicket"/>}. If User Token is expired, authTicket will have a new Token and expiration date.</param>
		/// <returns>
		/// 
		/// </returns>
		/// <example>
		/// <code>
		///   var siteshippingregion = new SiteShippingRegion();
		///   siteshippingregion.DeleteShippingRegions(authTicket);
		/// </code>
		/// </example>
		public virtual void DeleteShippingRegions(AuthTicket authTicket= null)
		{
			MozuClient response;
			var client = Mozu.Api.Clients.Commerce.Settings.Shipping.SiteShippingRegionClient.DeleteShippingRegionsClient(authTicket);
			client.WithContext(_apiContext);
			response= client.Execute();

		}

		
	}

}


