
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.     
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;

namespace Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Producttypes
{
	/// <summary>
	/// Use the Extras subresource to define how a product attribute classified as an "extra" is used for a specific product type. Product attribute defintions are unique for each associated product type.
	/// </summary>
	public partial class ProductTypeExtraResource : BaseResource 	{
				///
		/// <see cref="Mozu.Api.ApiContext"/>
		///
		private readonly ApiContext _apiContext;
		public ProductTypeExtraResource(ApiContext apiContext) 
		{
			_apiContext = apiContext;
		}

		
		/// <summary>
		/// Retrieves a list of extra attributes defined for the specified product type.
		/// </summary>
		/// <param name="productTypeId">Identifier of the product type.</param>
		/// <returns>
		/// List{<see cref="Mozu.Api.Contracts.ProductAdmin.AttributeInProductType"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var producttypeextra = new ProductTypeExtra();
		///   var attributeInProductType = producttypeextra.GetExtras( productTypeId);
		/// </code>
		/// </example>
		public virtual List<Mozu.Api.Contracts.ProductAdmin.AttributeInProductType> GetExtras(int productTypeId)
		{
						MozuClient<List<Mozu.Api.Contracts.ProductAdmin.AttributeInProductType>> response;
			var client = Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeExtraClient.GetExtrasClient( productTypeId);
			SetContext(_apiContext, ref client,true);
			response= client.Execute();
			return response.Result();

		}

		/// <summary>
		/// Retrieves the details of an extra attribute definition for the specified product type.
		/// </summary>
		/// <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
		/// <param name="productTypeId">Identifier of the product type whose extra is being retrieved.</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.ProductAdmin.AttributeInProductType"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var producttypeextra = new ProductTypeExtra();
		///   var attributeInProductType = producttypeextra.GetExtra( attributeFQN,  productTypeId);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.ProductAdmin.AttributeInProductType GetExtra(string attributeFQN, int productTypeId)
		{
						MozuClient<Mozu.Api.Contracts.ProductAdmin.AttributeInProductType> response;
			var client = Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeExtraClient.GetExtraClient( attributeFQN,  productTypeId);
			SetContext(_apiContext, ref client,true);
			response= client.Execute();
			return response.Result();

		}

				/// <summary>
		/// Assigns a defined extra attribute to the product type based on the information supplied in the request.
		/// </summary>
		/// <param name="productTypeId">Identifier of the product type.</param>
		/// <param name="attributeInProductType">The properties of the extra attribute definition for this product type assignment.</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.ProductAdmin.AttributeInProductType"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var producttypeextra = new ProductTypeExtra();
		///   var attributeInProductType = producttypeextra.AddExtra( productTypeId,  attributeInProductType);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.ProductAdmin.AttributeInProductType AddExtra(int productTypeId, Mozu.Api.Contracts.ProductAdmin.AttributeInProductType attributeInProductType)
		{
						MozuClient<Mozu.Api.Contracts.ProductAdmin.AttributeInProductType> response;
			var client = Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeExtraClient.AddExtraClient( productTypeId,  attributeInProductType);
			SetContext(_apiContext, ref client,true);
			response= client.Execute();
			return response.Result();

		}

				/// <summary>
		/// Update the definition of an extra attribute for the specified product type.
		/// </summary>
		/// <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
		/// <param name="productTypeId">Identifier of the product type.</param>
		/// <param name="attributeInProductType">The properties of the extra attribute definition to update for the product type.</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.ProductAdmin.AttributeInProductType"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var producttypeextra = new ProductTypeExtra();
		///   var attributeInProductType = producttypeextra.UpdateExtra( attributeFQN,  productTypeId,  attributeInProductType);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.ProductAdmin.AttributeInProductType UpdateExtra(string attributeFQN, int productTypeId, Mozu.Api.Contracts.ProductAdmin.AttributeInProductType attributeInProductType)
		{
						MozuClient<Mozu.Api.Contracts.ProductAdmin.AttributeInProductType> response;
			var client = Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeExtraClient.UpdateExtraClient( attributeFQN,  productTypeId,  attributeInProductType);
			SetContext(_apiContext, ref client,true);
			response= client.Execute();
			return response.Result();

		}

				/// <summary>
		/// Removes an extra attribute definition from the specified product type.
		/// </summary>
		/// <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
		/// <param name="productTypeId">Identifier of the product type.</param>
		/// <returns>
		/// 
		/// </returns>
		/// <example>
		/// <code>
		///   var producttypeextra = new ProductTypeExtra();
		///   producttypeextra.DeleteExtra( attributeFQN,  productTypeId);
		/// </code>
		/// </example>
		public virtual void DeleteExtra(string attributeFQN, int productTypeId)
		{
						MozuClient response;
			var client = Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeExtraClient.DeleteExtraClient( attributeFQN,  productTypeId);
			SetContext(_apiContext, ref client,true);
			response= client.Execute();

		}

		
	}

}


