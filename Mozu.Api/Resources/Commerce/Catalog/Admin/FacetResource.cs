
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.     
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using Mozu.Api.Security;


namespace Mozu.Api.Resources.Commerce.Catalog.Admin
{
	/// <summary>
	/// 
	/// </summary>
	public partial class FacetResource  	{
				///
		/// <see cref="Mozu.Api.ApiContext"/>
		///
		private readonly IApiContext _apiContext;
		public FacetResource(IApiContext apiContext) 
		{
			_apiContext = apiContext;
		}

		
		/// <summary>
		/// 
		/// </summary>
		/// <param name="facetId"></param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.ProductAdmin.Facet"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var facet = new Facet();
		///   var facet = facet.GetFacet(dataViewMode,  facetId);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.ProductAdmin.Facet GetFacet(DataViewMode dataViewMode, int facetId)
		{
			return GetFacet(dataViewMode,  facetId,  null, null);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="facetId"></param>
		/// <param name="validate"></param>
		/// <param name="authTicket">User Auth Ticket{<see cref="Mozu.Api.Security.AuthTicket"/>}. If User Token is expired, authTicket will have a new Token and expiration date.</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.ProductAdmin.Facet"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var facet = new Facet();
		///   var facet = facet.GetFacet(dataViewMode,  facetId,  validate, authTicket);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.ProductAdmin.Facet GetFacet(DataViewMode dataViewMode, int facetId, bool? validate =  null, AuthTicket authTicket= null)
		{
			MozuClient<Mozu.Api.Contracts.ProductAdmin.Facet> response;
			var client = Mozu.Api.Clients.Commerce.Catalog.Admin.FacetClient.GetFacetClient(dataViewMode,  facetId,  validate, authTicket);
			client.WithContext(_apiContext);
			response= client.Execute();
			return response.Result();

		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="categoryId"></param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.ProductAdmin.FacetSet"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var facet = new Facet();
		///   var facetSet = facet.GetFacetCategoryList(dataViewMode,  categoryId);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.ProductAdmin.FacetSet GetFacetCategoryList(DataViewMode dataViewMode, int categoryId)
		{
			return GetFacetCategoryList(dataViewMode,  categoryId,  null,  null, null);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="categoryId"></param>
		/// <param name="includeAvailable"></param>
		/// <param name="validate"></param>
		/// <param name="authTicket">User Auth Ticket{<see cref="Mozu.Api.Security.AuthTicket"/>}. If User Token is expired, authTicket will have a new Token and expiration date.</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.ProductAdmin.FacetSet"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var facet = new Facet();
		///   var facetSet = facet.GetFacetCategoryList(dataViewMode,  categoryId,  includeAvailable,  validate, authTicket);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.ProductAdmin.FacetSet GetFacetCategoryList(DataViewMode dataViewMode, int categoryId, bool? includeAvailable =  null, bool? validate =  null, AuthTicket authTicket= null)
		{
			MozuClient<Mozu.Api.Contracts.ProductAdmin.FacetSet> response;
			var client = Mozu.Api.Clients.Commerce.Catalog.Admin.FacetClient.GetFacetCategoryListClient(dataViewMode,  categoryId,  includeAvailable,  validate, authTicket);
			client.WithContext(_apiContext);
			response= client.Execute();
			return response.Result();

		}

				/// <summary>
		/// 
		/// </summary>
		/// <param name="authTicket">User Auth Ticket{<see cref="Mozu.Api.Security.AuthTicket"/>}. If User Token is expired, authTicket will have a new Token and expiration date.</param>
		/// <param name="facet"></param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.ProductAdmin.Facet"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var facet = new Facet();
		///   var facet = facet.AddFacet(dataViewMode,  facet, authTicket);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.ProductAdmin.Facet AddFacet(DataViewMode dataViewMode, Mozu.Api.Contracts.ProductAdmin.Facet facet, AuthTicket authTicket= null)
		{
			MozuClient<Mozu.Api.Contracts.ProductAdmin.Facet> response;
			var client = Mozu.Api.Clients.Commerce.Catalog.Admin.FacetClient.AddFacetClient(dataViewMode,  facet, authTicket);
			client.WithContext(_apiContext);
			response= client.Execute();
			return response.Result();

		}

				/// <summary>
		/// 
		/// </summary>
		/// <param name="facetId"></param>
		/// <param name="authTicket">User Auth Ticket{<see cref="Mozu.Api.Security.AuthTicket"/>}. If User Token is expired, authTicket will have a new Token and expiration date.</param>
		/// <param name="facet"></param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.ProductAdmin.Facet"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var facet = new Facet();
		///   var facet = facet.UpdateFacet(dataViewMode,  facet,  facetId, authTicket);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.ProductAdmin.Facet UpdateFacet(DataViewMode dataViewMode, Mozu.Api.Contracts.ProductAdmin.Facet facet, int facetId, AuthTicket authTicket= null)
		{
			MozuClient<Mozu.Api.Contracts.ProductAdmin.Facet> response;
			var client = Mozu.Api.Clients.Commerce.Catalog.Admin.FacetClient.UpdateFacetClient(dataViewMode,  facet,  facetId, authTicket);
			client.WithContext(_apiContext);
			response= client.Execute();
			return response.Result();

		}

				/// <summary>
		/// 
		/// </summary>
		/// <param name="facetId"></param>
		/// <param name="authTicket">User Auth Ticket{<see cref="Mozu.Api.Security.AuthTicket"/>}. If User Token is expired, authTicket will have a new Token and expiration date.</param>
		/// <returns>
		/// 
		/// </returns>
		/// <example>
		/// <code>
		///   var facet = new Facet();
		///   facet.DeleteFacetById(dataViewMode,  facetId, authTicket);
		/// </code>
		/// </example>
		public virtual void DeleteFacetById(DataViewMode dataViewMode, int facetId, AuthTicket authTicket= null)
		{
			MozuClient response;
			var client = Mozu.Api.Clients.Commerce.Catalog.Admin.FacetClient.DeleteFacetByIdClient(dataViewMode,  facetId, authTicket);
			client.WithContext(_apiContext);
			response= client.Execute();

		}

		
	}

}


