
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.     
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;

namespace Mozu.Api.Resources.Commerce.Catalog.Admin
{
	/// <summary>
	/// Define and manage discounts to apply to products, product categories, or orders. The discounts can be a specified amount off the price, percentage off the price, or for free shipping. Create a coupon code that shoppers can use to redeem the discount.
	/// </summary>
	public partial class DiscountResource : BaseResource 	{
				///
		/// <see cref="Mozu.Api.ApiContext"/>
		///
		private readonly ApiContext _apiContext;
		public DiscountResource(ApiContext apiContext) 
		{
			_apiContext = apiContext;
		}

		
		/// <summary>
		/// Retrieves a list of discounts according to any specified filter criteria and sort options.
		/// </summary>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.ProductAdmin.DiscountCollection"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var discount = new Discount();
		///   var discountCollection = discount.GetDiscounts();
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.ProductAdmin.DiscountCollection GetDiscounts()
		{
			return GetDiscounts( null,  null,  null,  null);
		}

		/// <summary>
		/// Retrieves a list of discounts according to any specified filter criteria and sort options.
		/// </summary>
		/// <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
		/// <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
		/// <param name="sortBy"></param>
		/// <param name="startIndex"></param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.ProductAdmin.DiscountCollection"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var discount = new Discount();
		///   var discountCollection = discount.GetDiscounts( filter,  pageSize,  sortBy,  startIndex);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.ProductAdmin.DiscountCollection GetDiscounts(string filter, int? pageSize, string sortBy, int? startIndex)
		{
						MozuClient<Mozu.Api.Contracts.ProductAdmin.DiscountCollection> response;
			var client = Mozu.Api.Clients.Commerce.Catalog.Admin.DiscountClient.GetDiscountsClient( filter,  pageSize,  sortBy,  startIndex);
			SetContext(_apiContext, ref client,true);
			response= client.Execute();
			return response.Result();

		}

		/// <summary>
		/// Retrieves the details of a single discount.
		/// </summary>
		/// <param name="discountId">Unique identifier of the discount. System-supplied and read-only.</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.ProductAdmin.Discount"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var discount = new Discount();
		///   var discount = discount.GetDiscount( discountId);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.ProductAdmin.Discount GetDiscount(int discountId)
		{
						MozuClient<Mozu.Api.Contracts.ProductAdmin.Discount> response;
			var client = Mozu.Api.Clients.Commerce.Catalog.Admin.DiscountClient.GetDiscountClient( discountId);
			SetContext(_apiContext, ref client,true);
			response= client.Execute();
			return response.Result();

		}

		/// <summary>
		/// Retrieves the localized content specified for the specified discount.
		/// </summary>
		/// <param name="discountId">Unique identifier of the discount. System-supplied and read-only.</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.ProductAdmin.DiscountLocalizedContent"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var discount = new Discount();
		///   var discountLocalizedContent = discount.GetDiscountContent( discountId);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.ProductAdmin.DiscountLocalizedContent GetDiscountContent(int discountId)
		{
						MozuClient<Mozu.Api.Contracts.ProductAdmin.DiscountLocalizedContent> response;
			var client = Mozu.Api.Clients.Commerce.Catalog.Admin.DiscountClient.GetDiscountContentClient( discountId);
			SetContext(_apiContext, ref client,true);
			response= client.Execute();
			return response.Result();

		}

		/// <summary>
		/// Generates a random code for a coupon.
		/// </summary>
		/// <returns>
		/// string
		/// </returns>
		/// <example>
		/// <code>
		///   var discount = new Discount();
		///   var string = discount.GenerateRandomCoupon();
		/// </code>
		/// </example>
		public virtual string GenerateRandomCoupon()
		{
						MozuClient<string> response;
			var client = Mozu.Api.Clients.Commerce.Catalog.Admin.DiscountClient.GenerateRandomCouponClient();
			SetContext(_apiContext, ref client,true);
			response= client.Execute();
			return response.Result();

		}

				/// <summary>
		/// Creates a discount.
		/// </summary>
		/// <param name="discount">Properties of the discount to create. Required properties: Content.Name, AmountType, StartDate, and Target.Type.</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.ProductAdmin.Discount"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var discount = new Discount();
		///   var discount = discount.CreateDiscount( discount);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.ProductAdmin.Discount CreateDiscount(Mozu.Api.Contracts.ProductAdmin.Discount discount)
		{
						MozuClient<Mozu.Api.Contracts.ProductAdmin.Discount> response;
			var client = Mozu.Api.Clients.Commerce.Catalog.Admin.DiscountClient.CreateDiscountClient( discount);
			SetContext(_apiContext, ref client,true);
			response= client.Execute();
			return response.Result();

		}

		/// <summary>
		/// Redeems a discount configured in the product admin.
		/// </summary>
		/// <param name="redemption">Properties of the product discount redemption.</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.ProductAdmin.Discounts.Redemption"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var discount = new Discount();
		///   var redemption = discount.RedeemDiscount( redemption);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.ProductAdmin.Discounts.Redemption RedeemDiscount(Mozu.Api.Contracts.ProductAdmin.Discounts.Redemption redemption)
		{
						MozuClient<Mozu.Api.Contracts.ProductAdmin.Discounts.Redemption> response;
			var client = Mozu.Api.Clients.Commerce.Catalog.Admin.DiscountClient.RedeemDiscountClient( redemption);
			SetContext(_apiContext, ref client,true);
			response= client.Execute();
			return response.Result();

		}

				/// <summary>
		/// Modifies a discount.
		/// </summary>
		/// <param name="discountId">Unique identifier of the discount. System-supplied and read-only.</param>
		/// <param name="discount">Properties of the discount to update. Required properties: Content.Name, AmountType, StartDate, and Target.Type. Any unspecified properties are set to null and boolean variables are set to false.</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.ProductAdmin.Discount"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var discount = new Discount();
		///   var discount = discount.UpdateDiscount( discountId,  discount);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.ProductAdmin.Discount UpdateDiscount(int discountId, Mozu.Api.Contracts.ProductAdmin.Discount discount)
		{
						MozuClient<Mozu.Api.Contracts.ProductAdmin.Discount> response;
			var client = Mozu.Api.Clients.Commerce.Catalog.Admin.DiscountClient.UpdateDiscountClient( discountId,  discount);
			SetContext(_apiContext, ref client,true);
			response= client.Execute();
			return response.Result();

		}

		/// <summary>
		/// Modifies the localized content for the specified discount. Rename the discount without modifying any other discount properties.
		/// </summary>
		/// <param name="discountId">Unique identifier of the discount. System-supplied and read-only.</param>
		/// <param name="content">New Name and/or LocaleCode. Properties of the content to update. Required property: Name.</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.ProductAdmin.DiscountLocalizedContent"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var discount = new Discount();
		///   var discountLocalizedContent = discount.UpdateDiscountContent( discountId,  content);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.ProductAdmin.DiscountLocalizedContent UpdateDiscountContent(int discountId, Mozu.Api.Contracts.ProductAdmin.DiscountLocalizedContent content)
		{
						MozuClient<Mozu.Api.Contracts.ProductAdmin.DiscountLocalizedContent> response;
			var client = Mozu.Api.Clients.Commerce.Catalog.Admin.DiscountClient.UpdateDiscountContentClient( discountId,  content);
			SetContext(_apiContext, ref client,true);
			response= client.Execute();
			return response.Result();

		}

				/// <summary>
		/// Deletes a discount specified by its discount ID.
		/// </summary>
		/// <param name="discountId">Unique identifier of the discount. System-supplied and read-only.</param>
		/// <returns>
		/// 
		/// </returns>
		/// <example>
		/// <code>
		///   var discount = new Discount();
		///   discount.DeleteDiscount( discountId);
		/// </code>
		/// </example>
		public virtual void DeleteDiscount(int discountId)
		{
						MozuClient response;
			var client = Mozu.Api.Clients.Commerce.Catalog.Admin.DiscountClient.DeleteDiscountClient( discountId);
			SetContext(_apiContext, ref client,true);
			response= client.Execute();

		}

		/// <summary>
		/// Deletes a previous discount redemption from an order.
		/// </summary>
		/// <returns>
		/// 
		/// </returns>
		/// <example>
		/// <code>
		///   var discount = new Discount();
		///   discount.UnRedeemDiscount();
		/// </code>
		/// </example>
		public virtual void UnRedeemDiscount()
		{
			UnRedeemDiscount( null,  null);
		}

		/// <summary>
		/// Deletes a previous discount redemption from an order.
		/// </summary>
		/// <param name="discountId">Unique identifier of the previously redeemed discount. System-supplied and read only.</param>
		/// <param name="orderNumber">The number of the order associated with the redeemed product discount.</param>
		/// <returns>
		/// 
		/// </returns>
		/// <example>
		/// <code>
		///   var discount = new Discount();
		///   discount.UnRedeemDiscount( discountId,  orderNumber);
		/// </code>
		/// </example>
		public virtual void UnRedeemDiscount(int? discountId, int? orderNumber)
		{
						MozuClient response;
			var client = Mozu.Api.Clients.Commerce.Catalog.Admin.DiscountClient.UnRedeemDiscountClient( discountId,  orderNumber);
			SetContext(_apiContext, ref client,true);
			response= client.Execute();

		}

		
	}

}


