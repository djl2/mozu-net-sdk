
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.     
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;

namespace Mozu.Api.Resources.Commerce.Orders.Attributedefinition
{
	/// <summary>
	/// A grouping of related orders attributes.
	/// </summary>
	public partial class AttributeSetResource : BaseResource 	{
				///
		/// <see cref="Mozu.Api.ApiContext"/>
		///
		private readonly ApiContext _apiContext;
		public AttributeSetResource(ApiContext apiContext) 
		{
			_apiContext = apiContext;
		}

		
		/// <summary>
		/// Retrieves the attribute set by providing the name and namespace.
		/// </summary>
		/// <param name="fqn">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Core.Extensible.AttributeSet"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var attributeset = new AttributeSet();
		///   var attributeSet = attributeset.GetAttributeSetByName( fqn);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.Core.Extensible.AttributeSet GetAttributeSetByName(string fqn)
		{
						MozuClient<Mozu.Api.Contracts.Core.Extensible.AttributeSet> response;
			var client = Mozu.Api.Clients.Commerce.Orders.Attributedefinition.AttributeSetClient.GetAttributeSetByNameClient( fqn);
			SetContext(_apiContext, ref client,true);
			response= client.Execute();
			return response.Result();

		}

		/// <summary>
		/// Retrieves a list of attribute sets according to any filter criteria or sort options.
		/// </summary>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Core.Extensible.AttributeSetCollection"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var attributeset = new AttributeSet();
		///   var attributeSetCollection = attributeset.GetAttributeSets();
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.Core.Extensible.AttributeSetCollection GetAttributeSets()
		{
			return GetAttributeSets( null,  null,  null,  null);
		}

		/// <summary>
		/// Retrieves a list of attribute sets according to any filter criteria or sort options.
		/// </summary>
		/// <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
		/// <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
		/// <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
		/// <param name="startIndex">Indicates the zero-based offset in the complete result set where the returned entities begin, when creating paged results from a query. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Core.Extensible.AttributeSetCollection"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var attributeset = new AttributeSet();
		///   var attributeSetCollection = attributeset.GetAttributeSets( filter,  pageSize,  sortBy,  startIndex);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.Core.Extensible.AttributeSetCollection GetAttributeSets(string filter, int? pageSize, string sortBy, int? startIndex)
		{
						MozuClient<Mozu.Api.Contracts.Core.Extensible.AttributeSetCollection> response;
			var client = Mozu.Api.Clients.Commerce.Orders.Attributedefinition.AttributeSetClient.GetAttributeSetsClient( filter,  pageSize,  sortBy,  startIndex);
			SetContext(_apiContext, ref client,true);
			response= client.Execute();
			return response.Result();

		}

		/// <summary>
		/// Retrieves a specific attribute set by providing the attribute set ID.
		/// </summary>
		/// <param name="attributeSetId">Identifier of the attribute set being retrieved.</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Core.Extensible.AttributeSet"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var attributeset = new AttributeSet();
		///   var attributeSet = attributeset.GetAttributeSet( attributeSetId);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.Core.Extensible.AttributeSet GetAttributeSet(int attributeSetId)
		{
						MozuClient<Mozu.Api.Contracts.Core.Extensible.AttributeSet> response;
			var client = Mozu.Api.Clients.Commerce.Orders.Attributedefinition.AttributeSetClient.GetAttributeSetClient( attributeSetId);
			SetContext(_apiContext, ref client,true);
			response= client.Execute();
			return response.Result();

		}

				/// <summary>
		/// Create new attribute set to provide order extensibility.
		/// </summary>
		/// <param name="attributeSet">The properties of the orders attribute set being created.</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Core.Extensible.AttributeSet"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var attributeset = new AttributeSet();
		///   var attributeSet = attributeset.CreateAttributeSet( attributeSet);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.Core.Extensible.AttributeSet CreateAttributeSet(Mozu.Api.Contracts.Core.Extensible.AttributeSet attributeSet)
		{
						MozuClient<Mozu.Api.Contracts.Core.Extensible.AttributeSet> response;
			var client = Mozu.Api.Clients.Commerce.Orders.Attributedefinition.AttributeSetClient.CreateAttributeSetClient( attributeSet);
			SetContext(_apiContext, ref client,true);
			response= client.Execute();
			return response.Result();

		}

				/// <summary>
		/// Update an existing attribute set by providing the attribute set ID.
		/// </summary>
		/// <param name="attributeSetId">Identifier of the attribute set being updated.</param>
		/// <param name="attributeSet">The properties of the attribute set being updated.</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Core.Extensible.AttributeSet"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var attributeset = new AttributeSet();
		///   var attributeSet = attributeset.UpdateAttributeSet( attributeSetId,  attributeSet);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.Core.Extensible.AttributeSet UpdateAttributeSet(int attributeSetId, Mozu.Api.Contracts.Core.Extensible.AttributeSet attributeSet)
		{
						MozuClient<Mozu.Api.Contracts.Core.Extensible.AttributeSet> response;
			var client = Mozu.Api.Clients.Commerce.Orders.Attributedefinition.AttributeSetClient.UpdateAttributeSetClient( attributeSetId,  attributeSet);
			SetContext(_apiContext, ref client,true);
			response= client.Execute();
			return response.Result();

		}

		/// <summary>
		/// Associate an attribute with an attribute set.
		/// </summary>
		/// <param name="assignment">Properties of the attribute set assignment.</param>
		/// <returns>
		/// 
		/// </returns>
		/// <example>
		/// <code>
		///   var attributeset = new AttributeSet();
		///   attributeset.UpsertAttributeSetAssignment( assignment);
		/// </code>
		/// </example>
		public virtual void UpsertAttributeSetAssignment(Mozu.Api.Contracts.Core.Extensible.AttributeSetAssignment assignment)
		{
						MozuClient response;
			var client = Mozu.Api.Clients.Commerce.Orders.Attributedefinition.AttributeSetClient.UpsertAttributeSetAssignmentClient( assignment);
			SetContext(_apiContext, ref client,true);
			response= client.Execute();

		}

				/// <summary>
		/// Delete a specific attribute set by providing the attribute set ID.
		/// </summary>
		/// <param name="attributeSetId">Identifier of the attribute set being deleted.</param>
		/// <returns>
		/// 
		/// </returns>
		/// <example>
		/// <code>
		///   var attributeset = new AttributeSet();
		///   attributeset.DeleteAttributeSet( attributeSetId);
		/// </code>
		/// </example>
		public virtual void DeleteAttributeSet(int attributeSetId)
		{
						MozuClient response;
			var client = Mozu.Api.Clients.Commerce.Orders.Attributedefinition.AttributeSetClient.DeleteAttributeSetClient( attributeSetId);
			SetContext(_apiContext, ref client,true);
			response= client.Execute();

		}

		/// <summary>
		/// Removes the attribute from its assigned attribute set.
		/// </summary>
		/// <param name="attributeSetId">Identifier of the attribute set.</param>
		/// <param name="locationId">Identifier of the location. Locations describe where in the application the attribute set definition will be rendered (such as a page).</param>
		/// <returns>
		/// 
		/// </returns>
		/// <example>
		/// <code>
		///   var attributeset = new AttributeSet();
		///   attributeset.RemoveAttributeSetAssignment( attributeSetId,  locationId);
		/// </code>
		/// </example>
		public virtual void RemoveAttributeSetAssignment(int attributeSetId, int locationId)
		{
						MozuClient response;
			var client = Mozu.Api.Clients.Commerce.Orders.Attributedefinition.AttributeSetClient.RemoveAttributeSetAssignmentClient( attributeSetId,  locationId);
			SetContext(_apiContext, ref client,true);
			response= client.Execute();

		}

		/// <summary>
		/// Delete a specific attribute set by providing the fully qualified name.
		/// </summary>
		/// <param name="fqn">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
		/// <returns>
		/// 
		/// </returns>
		/// <example>
		/// <code>
		///   var attributeset = new AttributeSet();
		///   attributeset.DeleteAttributeSetByName( fqn);
		/// </code>
		/// </example>
		public virtual void DeleteAttributeSetByName(string fqn)
		{
						MozuClient response;
			var client = Mozu.Api.Clients.Commerce.Orders.Attributedefinition.AttributeSetClient.DeleteAttributeSetByNameClient( fqn);
			SetContext(_apiContext, ref client,true);
			response= client.Execute();

		}

		
	}

}


