
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.     
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;

namespace Mozu.Api.Resources.Commerce.Orders.Attributedefinition
{
	/// <summary>
	/// Attributes for orders creates extensibility for the way we describe orders.
	/// </summary>
	public partial class AttributeResource : BaseResource 	{
				///
		/// <see cref="Mozu.Api.ApiContext"/>
		///
		private readonly ApiContext _apiContext;
		public AttributeResource(ApiContext apiContext) 
		{
			_apiContext = apiContext;
		}

		
		/// <summary>
		/// Retrieves an existing order attribute by providing the name and namespace.
		/// </summary>
		/// <param name="fqn">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Core.Extensible.Attribute"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var attribute = new Attribute();
		///   var attribute = attribute.GetAttributeByName( fqn);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.Core.Extensible.Attribute GetAttributeByName(string fqn)
		{
						MozuClient<Mozu.Api.Contracts.Core.Extensible.Attribute> response;
			var client = Mozu.Api.Clients.Commerce.Orders.Attributedefinition.AttributeClient.GetAttributeByNameClient( fqn);
			SetContext(_apiContext, ref client,true);
			response= client.Execute();
			return response.Result();

		}

		/// <summary>
		/// Retrieves a list of order attributes according to any filter criteria or sort options.
		/// </summary>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Core.Extensible.AttributeCollection"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var attribute = new Attribute();
		///   var attributeCollection = attribute.GetAttributes();
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.Core.Extensible.AttributeCollection GetAttributes()
		{
			return GetAttributes( null,  null,  null,  null);
		}

		/// <summary>
		/// Retrieves a list of order attributes according to any filter criteria or sort options.
		/// </summary>
		/// <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
		/// <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
		/// <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
		/// <param name="startIndex">Indicates the zero-based offset in the complete result set where the returned entities begin, when creating paged results from a query. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Core.Extensible.AttributeCollection"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var attribute = new Attribute();
		///   var attributeCollection = attribute.GetAttributes( filter,  pageSize,  sortBy,  startIndex);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.Core.Extensible.AttributeCollection GetAttributes(string filter, int? pageSize, string sortBy, int? startIndex)
		{
						MozuClient<Mozu.Api.Contracts.Core.Extensible.AttributeCollection> response;
			var client = Mozu.Api.Clients.Commerce.Orders.Attributedefinition.AttributeClient.GetAttributesClient( filter,  pageSize,  sortBy,  startIndex);
			SetContext(_apiContext, ref client,true);
			response= client.Execute();
			return response.Result();

		}

		/// <summary>
		/// Retrieves a single existing order attribute.
		/// </summary>
		/// <param name="attributeId">Identifier of the single order attribute to retrieve.</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Core.Extensible.Attribute"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var attribute = new Attribute();
		///   var attribute = attribute.GetAttribute( attributeId);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.Core.Extensible.Attribute GetAttribute(int attributeId)
		{
						MozuClient<Mozu.Api.Contracts.Core.Extensible.Attribute> response;
			var client = Mozu.Api.Clients.Commerce.Orders.Attributedefinition.AttributeClient.GetAttributeClient( attributeId);
			SetContext(_apiContext, ref client,true);
			response= client.Execute();
			return response.Result();

		}

				/// <summary>
		/// Create a new attribute to associate with an order.
		/// </summary>
		/// <param name="attribute">The properties of the order attribute to create.</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Core.Extensible.Attribute"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var attribute = new Attribute();
		///   var attribute = attribute.CreateAttribute( attribute);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.Core.Extensible.Attribute CreateAttribute(Mozu.Api.Contracts.Core.Extensible.Attribute attribute)
		{
						MozuClient<Mozu.Api.Contracts.Core.Extensible.Attribute> response;
			var client = Mozu.Api.Clients.Commerce.Orders.Attributedefinition.AttributeClient.CreateAttributeClient( attribute);
			SetContext(_apiContext, ref client,true);
			response= client.Execute();
			return response.Result();

		}

				/// <summary>
		/// Update an existing order attribute.
		/// </summary>
		/// <param name="attributeId">Unique identifier of the attribute.</param>
		/// <param name="attribute">The properties of the order attribute being updated.</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Core.Extensible.Attribute"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var attribute = new Attribute();
		///   var attribute = attribute.UpdateAttribute( attributeId,  attribute);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.Core.Extensible.Attribute UpdateAttribute(int attributeId, Mozu.Api.Contracts.Core.Extensible.Attribute attribute)
		{
						MozuClient<Mozu.Api.Contracts.Core.Extensible.Attribute> response;
			var client = Mozu.Api.Clients.Commerce.Orders.Attributedefinition.AttributeClient.UpdateAttributeClient( attributeId,  attribute);
			SetContext(_apiContext, ref client,true);
			response= client.Execute();
			return response.Result();

		}

				/// <summary>
		/// Delete an existing order attribute.
		/// </summary>
		/// <param name="attributeId">Unique identifier of the attribute.</param>
		/// <returns>
		/// 
		/// </returns>
		/// <example>
		/// <code>
		///   var attribute = new Attribute();
		///   attribute.DeleteAttribute( attributeId);
		/// </code>
		/// </example>
		public virtual void DeleteAttribute(int attributeId)
		{
						MozuClient response;
			var client = Mozu.Api.Clients.Commerce.Orders.Attributedefinition.AttributeClient.DeleteAttributeClient( attributeId);
			SetContext(_apiContext, ref client,true);
			response= client.Execute();

		}

		/// <summary>
		/// Deletes an order attribute by specifying the fully qualified name of the attribute.
		/// </summary>
		/// <param name="fqn">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
		/// <returns>
		/// 
		/// </returns>
		/// <example>
		/// <code>
		///   var attribute = new Attribute();
		///   attribute.DeleteAttributeByName( fqn);
		/// </code>
		/// </example>
		public virtual void DeleteAttributeByName(string fqn)
		{
						MozuClient response;
			var client = Mozu.Api.Clients.Commerce.Orders.Attributedefinition.AttributeClient.DeleteAttributeByNameClient( fqn);
			SetContext(_apiContext, ref client,true);
			response= client.Execute();

		}

		
	}

}


