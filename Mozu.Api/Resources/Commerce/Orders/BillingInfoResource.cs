
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.     
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;

namespace Mozu.Api.Resources.Commerce.Orders
{
	/// <summary>
	/// Use the Billing Info subresource to manage the billing information stored for an order.
	/// </summary>
	public partial class BillingInfoResource : BaseResource 	{
				///
		/// <see cref="Mozu.Api.ApiContext"/>
		///
		private readonly ApiContext _apiContext;
		public BillingInfoResource(ApiContext apiContext) 
		{
			_apiContext = apiContext;
		}

		
		/// <summary>
		/// Retrieves the billing information associated with an order.
		/// </summary>
		/// <param name="orderId">Unique identifier of the order.</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.CommerceRuntime.Payments.BillingInfo"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var billinginfo = new BillingInfo();
		///   var billingInfo = billinginfo.GetBillingInfo( orderId);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.CommerceRuntime.Payments.BillingInfo GetBillingInfo(string orderId)
		{
			return GetBillingInfo( null,  orderId);
		}

		/// <summary>
		/// Retrieves the billing information associated with an order.
		/// </summary>
		/// <param name="draft">If true, retrieve the draft version of the order billing information, which might include uncommitted changes.</param>
		/// <param name="orderId">Unique identifier of the order.</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.CommerceRuntime.Payments.BillingInfo"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var billinginfo = new BillingInfo();
		///   var billingInfo = billinginfo.GetBillingInfo( draft,  orderId);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.CommerceRuntime.Payments.BillingInfo GetBillingInfo(bool? draft, string orderId)
		{
						MozuClient<Mozu.Api.Contracts.CommerceRuntime.Payments.BillingInfo> response;
			var client = Mozu.Api.Clients.Commerce.Orders.BillingInfoClient.GetBillingInfoClient( draft,  orderId);
			SetContext(_apiContext, ref client,true);
			response= client.Execute();
			return response.Result();

		}

						/// <summary>
		/// Updates the billing information supplied for an order.
		/// </summary>
		/// <param name="orderId">Unique identifier of the order.</param>
		/// <param name="billingInfo">The properties of the order billing information to update.</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.CommerceRuntime.Payments.BillingInfo"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var billinginfo = new BillingInfo();
		///   var billingInfo = billinginfo.SetBillingInfo( orderId,  billingInfo);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.CommerceRuntime.Payments.BillingInfo SetBillingInfo(string orderId, Mozu.Api.Contracts.CommerceRuntime.Payments.BillingInfo billingInfo)
		{
			return SetBillingInfo( orderId,  null,  null,  billingInfo);
		}

		/// <summary>
		/// Updates the billing information supplied for an order.
		/// </summary>
		/// <param name="orderId">Unique identifier of the order.</param>
		/// <param name="updateMode">Specifies whether to set the billing information by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal", "ApplyToDraft", or "ApplyAndCommit".</param>
		/// <param name="version">If applicable, the version of the order or draft for which to set the billing information.</param>
		/// <param name="billingInfo">The properties of the order billing information to update.</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.CommerceRuntime.Payments.BillingInfo"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var billinginfo = new BillingInfo();
		///   var billingInfo = billinginfo.SetBillingInfo( orderId,  updateMode,  version,  billingInfo);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.CommerceRuntime.Payments.BillingInfo SetBillingInfo(string orderId, string updateMode, string version, Mozu.Api.Contracts.CommerceRuntime.Payments.BillingInfo billingInfo)
		{
						MozuClient<Mozu.Api.Contracts.CommerceRuntime.Payments.BillingInfo> response;
			var client = Mozu.Api.Clients.Commerce.Orders.BillingInfoClient.SetBillingInfoClient( orderId,  updateMode,  version,  billingInfo);
			SetContext(_apiContext, ref client,true);
			response= client.Execute();
			return response.Result();

		}

				
	}

}


