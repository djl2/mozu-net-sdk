
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.     
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using Mozu.Api.Security;


namespace Mozu.Api.Resources.Commerce.Customer
{
	/// <summary>
	/// 
	/// </summary>
	public partial class VisitResource  	{
				///
		/// <see cref="Mozu.Api.ApiContext"/>
		///
		private readonly IApiContext _apiContext;
		public VisitResource(IApiContext apiContext) 
		{
			_apiContext = apiContext;
		}

		
		/// <summary>
		/// 
		/// </summary>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Customer.VisitCollection"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var visit = new Visit();
		///   var visitCollection = visit.GetVisits();
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.Customer.VisitCollection GetVisits()
		{
			return GetVisits( null,  null,  null,  null, null);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="filter"></param>
		/// <param name="pageSize"></param>
		/// <param name="sortBy"></param>
		/// <param name="startIndex"></param>
		/// <param name="authTicket">User Auth Ticket{<see cref="Mozu.Api.Security.AuthTicket"/>}. If User Token is expired, authTicket will have a new Token and expiration date.</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Customer.VisitCollection"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var visit = new Visit();
		///   var visitCollection = visit.GetVisits( filter,  pageSize,  sortBy,  startIndex, authTicket);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.Customer.VisitCollection GetVisits(string filter =  null, int? pageSize =  null, string sortBy =  null, int? startIndex =  null, AuthTicket authTicket= null)
		{
			MozuClient<Mozu.Api.Contracts.Customer.VisitCollection> response;
			var client = Mozu.Api.Clients.Commerce.Customer.VisitClient.GetVisitsClient( filter,  pageSize,  sortBy,  startIndex, authTicket);
			client.WithContext(_apiContext);
			response= client.Execute();
			return response.Result();

		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="visitId"></param>
		/// <param name="authTicket">User Auth Ticket{<see cref="Mozu.Api.Security.AuthTicket"/>}. If User Token is expired, authTicket will have a new Token and expiration date.</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Customer.Visit"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var visit = new Visit();
		///   var visit = visit.GetVisit( visitId, authTicket);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.Customer.Visit GetVisit(string visitId, AuthTicket authTicket= null)
		{
			MozuClient<Mozu.Api.Contracts.Customer.Visit> response;
			var client = Mozu.Api.Clients.Commerce.Customer.VisitClient.GetVisitClient( visitId, authTicket);
			client.WithContext(_apiContext);
			response= client.Execute();
			return response.Result();

		}

				/// <summary>
		/// 
		/// </summary>
		/// <param name="authTicket">User Auth Ticket{<see cref="Mozu.Api.Security.AuthTicket"/>}. If User Token is expired, authTicket will have a new Token and expiration date.</param>
		/// <param name="visit"></param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Customer.Visit"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var visit = new Visit();
		///   var visit = visit.AddVisit( visit, authTicket);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.Customer.Visit AddVisit(Mozu.Api.Contracts.Customer.Visit visit, AuthTicket authTicket= null)
		{
			MozuClient<Mozu.Api.Contracts.Customer.Visit> response;
			var client = Mozu.Api.Clients.Commerce.Customer.VisitClient.AddVisitClient( visit, authTicket);
			client.WithContext(_apiContext);
			response= client.Execute();
			return response.Result();

		}

				/// <summary>
		/// 
		/// </summary>
		/// <param name="visitId"></param>
		/// <param name="authTicket">User Auth Ticket{<see cref="Mozu.Api.Security.AuthTicket"/>}. If User Token is expired, authTicket will have a new Token and expiration date.</param>
		/// <param name="visit"></param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Customer.Visit"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var visit = new Visit();
		///   var visit = visit.UpdateVisit( visit,  visitId, authTicket);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.Customer.Visit UpdateVisit(Mozu.Api.Contracts.Customer.Visit visit, string visitId, AuthTicket authTicket= null)
		{
			MozuClient<Mozu.Api.Contracts.Customer.Visit> response;
			var client = Mozu.Api.Clients.Commerce.Customer.VisitClient.UpdateVisitClient( visit,  visitId, authTicket);
			client.WithContext(_apiContext);
			response= client.Execute();
			return response.Result();

		}

				
	}

}


