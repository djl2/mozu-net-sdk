
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.     
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;

namespace Mozu.Api.Resources.Commerce.Customer.Accounts
{
	/// <summary>
	/// Use the Cards subresource to manage stored credit cards for customer accounts. Mozu stores limited card data in the Customer service for expedited ordering purposes; however, the complete card data is stored in the Payment service.
	/// </summary>
	public partial class CardResource : BaseResource 	{
				///
		/// <see cref="Mozu.Api.ApiContext"/>
		///
		private readonly ApiContext _apiContext;
		public CardResource(ApiContext apiContext) 
		{
			_apiContext = apiContext;
		}

		
		/// <summary>
		/// Retrieves all stored credit cards for the customer account.
		/// </summary>
		/// <param name="accountId">Unique identifier of the customer account.</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Customer.CardCollection"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var card = new Card();
		///   var cardCollection = card.GetAccountCards( accountId);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.Customer.CardCollection GetAccountCards(int accountId)
		{
						MozuClient<Mozu.Api.Contracts.Customer.CardCollection> response;
			var client = Mozu.Api.Clients.Commerce.Customer.Accounts.CardClient.GetAccountCardsClient( accountId);
			SetContext(_apiContext, ref client,true);
			response= client.Execute();
			return response.Result();

		}

				/// <summary>
		/// Creates a new credit card record and stores it for the customer account.
		/// </summary>
		/// <param name="accountId">Unique identifier of the customer account.</param>
		/// <param name="card">Properties of the customer credit card to add to the account.</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Customer.Card"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var card = new Card();
		///   var card = card.AddAccountCard( accountId,  card);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.Customer.Card AddAccountCard(int accountId, Mozu.Api.Contracts.Customer.Card card)
		{
						MozuClient<Mozu.Api.Contracts.Customer.Card> response;
			var client = Mozu.Api.Clients.Commerce.Customer.Accounts.CardClient.AddAccountCardClient( accountId,  card);
			SetContext(_apiContext, ref client,true);
			response= client.Execute();
			return response.Result();

		}

				/// <summary>
		/// Update one or more properties of a credit card defined for a customer account.
		/// </summary>
		/// <param name="accountId">Unique identifier of the customer account.</param>
		/// <param name="card">Properties of the customer account credit card to update.</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Customer.Card"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var card = new Card();
		///   var card = card.UpdateAccountCard( accountId,  card);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.Customer.Card UpdateAccountCard(int accountId, Mozu.Api.Contracts.Customer.Card card)
		{
						MozuClient<Mozu.Api.Contracts.Customer.Card> response;
			var client = Mozu.Api.Clients.Commerce.Customer.Accounts.CardClient.UpdateAccountCardClient( accountId,  card);
			SetContext(_apiContext, ref client,true);
			response= client.Execute();
			return response.Result();

		}

				/// <summary>
		/// Removes a stored credit card from a customer account.
		/// </summary>
		/// <param name="accountId">Unique identifier of the customer account.</param>
		/// <param name="cardId">Unique identifier of the credit card to delete.</param>
		/// <returns>
		/// 
		/// </returns>
		/// <example>
		/// <code>
		///   var card = new Card();
		///   card.DeleteAccountCard( accountId,  cardId);
		/// </code>
		/// </example>
		public virtual void DeleteAccountCard(int accountId, string cardId)
		{
						MozuClient response;
			var client = Mozu.Api.Clients.Commerce.Customer.Accounts.CardClient.DeleteAccountCardClient( accountId,  cardId);
			SetContext(_apiContext, ref client,true);
			response= client.Execute();

		}

		
	}

}


