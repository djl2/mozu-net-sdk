
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.     
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;

namespace Mozu.Api.Resources.Commerce.Customer.Accounts
{
	/// <summary>
	/// Use the groups subresource to manage customer accounts in groups. The groups are useful to manage sets of customers. A customer account can belong to several groups or none at all.
	/// </summary>
	public partial class CustomerGroupResource : BaseResource 	{
				///
		/// <see cref="Mozu.Api.ApiContext"/>
		///
		private readonly ApiContext _apiContext;
		public CustomerGroupResource(ApiContext apiContext) 
		{
			_apiContext = apiContext;
		}

		
		/// <summary>
		/// Retrieve a list of customer groups associated with the customer account.
		/// </summary>
		/// <param name="accountId">Unique identifier of the customer account.</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Customer.CustomerGroupCollection"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var customergroup = new CustomerGroup();
		///   var customerGroupCollection = customergroup.GetAccountGroups( accountId);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.Customer.CustomerGroupCollection GetAccountGroups(int accountId)
		{
			return GetAccountGroups( accountId,  null,  null,  null,  null);
		}

		/// <summary>
		/// Retrieve a list of customer groups associated with the customer account.
		/// </summary>
		/// <param name="accountId">Unique identifier of the customer account.</param>
		/// <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
		/// <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
		/// <param name="sortBy"></param>
		/// <param name="startIndex"></param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Customer.CustomerGroupCollection"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var customergroup = new CustomerGroup();
		///   var customerGroupCollection = customergroup.GetAccountGroups( accountId,  filter,  pageSize,  sortBy,  startIndex);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.Customer.CustomerGroupCollection GetAccountGroups(int accountId, string filter, int? pageSize, string sortBy, int? startIndex)
		{
						MozuClient<Mozu.Api.Contracts.Customer.CustomerGroupCollection> response;
			var client = Mozu.Api.Clients.Commerce.Customer.Accounts.CustomerGroupClient.GetAccountGroupsClient( accountId,  filter,  pageSize,  sortBy,  startIndex);
			SetContext(_apiContext, ref client,true);
			response= client.Execute();
			return response.Result();

		}

		/// <summary>
		/// Retrieves details of a customer account in a group.
		/// </summary>
		/// <param name="accountId">Unique identifier of the customer account.</param>
		/// <param name="groupId">Unique identifier of the customer group.</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Customer.CustomerGroup"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var customergroup = new CustomerGroup();
		///   var customerGroup = customergroup.GetAccountGroup( accountId,  groupId);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.Customer.CustomerGroup GetAccountGroup(int accountId, int groupId)
		{
						MozuClient<Mozu.Api.Contracts.Customer.CustomerGroup> response;
			var client = Mozu.Api.Clients.Commerce.Customer.Accounts.CustomerGroupClient.GetAccountGroupClient( accountId,  groupId);
			SetContext(_apiContext, ref client,true);
			response= client.Execute();
			return response.Result();

		}

				/// <summary>
		/// Adds a customer account to a group.
		/// </summary>
		/// <param name="accountId">Unique identifier of the customer account to add to a group.</param>
		/// <param name="groupId">Unique identifier of the customer group to add the customer to.</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Customer.CustomerGroup"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var customergroup = new CustomerGroup();
		///   var customerGroup = customergroup.AddAccountGroup( accountId,  groupId);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.Customer.CustomerGroup AddAccountGroup(int accountId, int groupId)
		{
						MozuClient<Mozu.Api.Contracts.Customer.CustomerGroup> response;
			var client = Mozu.Api.Clients.Commerce.Customer.Accounts.CustomerGroupClient.AddAccountGroupClient( accountId,  groupId);
			SetContext(_apiContext, ref client,true);
			response= client.Execute();
			return response.Result();

		}

						/// <summary>
		/// Removes a customer account from a group.
		/// </summary>
		/// <param name="accountId">Unique identifier of the customer account to remove from the group.</param>
		/// <param name="groupId">Unique identifier of the customer group.</param>
		/// <returns>
		/// 
		/// </returns>
		/// <example>
		/// <code>
		///   var customergroup = new CustomerGroup();
		///   customergroup.DeleteAccountGroup( accountId,  groupId);
		/// </code>
		/// </example>
		public virtual void DeleteAccountGroup(int accountId, int groupId)
		{
						MozuClient response;
			var client = Mozu.Api.Clients.Commerce.Customer.Accounts.CustomerGroupClient.DeleteAccountGroupClient( accountId,  groupId);
			SetContext(_apiContext, ref client,true);
			response= client.Execute();

		}

		
	}

}


