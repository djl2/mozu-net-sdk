
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.     
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;

namespace Mozu.Api.Resources.Commerce.Customer
{
	/// <summary>
	/// List of locations where customer pages exist. Examples: Customer Welcome Page, Customer Information Page.
	/// </summary>
	public partial class LocationResource : BaseResource 	{
				///
		/// <see cref="Mozu.Api.ApiContext"/>
		///
		private readonly ApiContext _apiContext;
		public LocationResource(ApiContext apiContext) 
		{
			_apiContext = apiContext;
		}

		
		/// <summary>
		/// Retrieves the location of a customer by providing a location ID.
		/// </summary>
		/// <param name="locationId">Identifier of the location being retrieved.</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Core.Extensible.Location"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var location = new Location();
		///   var location = location.GetLocation( locationId);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.Core.Extensible.Location GetLocation(int locationId)
		{
						MozuClient<Mozu.Api.Contracts.Core.Extensible.Location> response;
			var client = Mozu.Api.Clients.Commerce.Customer.LocationClient.GetLocationClient( locationId);
			SetContext(_apiContext, ref client,true);
			response= client.Execute();
			return response.Result();

		}

		/// <summary>
		/// Retrieves the location by providing a name to query by.
		/// </summary>
		/// <param name="name">The name of the location.</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Core.Extensible.Location"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var location = new Location();
		///   var location = location.GetLocationByName( name);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.Core.Extensible.Location GetLocationByName(string name)
		{
						MozuClient<Mozu.Api.Contracts.Core.Extensible.Location> response;
			var client = Mozu.Api.Clients.Commerce.Customer.LocationClient.GetLocationByNameClient( name);
			SetContext(_apiContext, ref client,true);
			response= client.Execute();
			return response.Result();

		}

		/// <summary>
		/// Retrieves a list of locations for this particular customer.
		/// </summary>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Core.Extensible.LocationCollection"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var location = new Location();
		///   var locationCollection = location.GetLocations();
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.Core.Extensible.LocationCollection GetLocations()
		{
			return GetLocations( null,  null,  null,  null);
		}

		/// <summary>
		/// Retrieves a list of locations for this particular customer.
		/// </summary>
		/// <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
		/// <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
		/// <param name="sortBy"></param>
		/// <param name="startIndex"></param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Core.Extensible.LocationCollection"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var location = new Location();
		///   var locationCollection = location.GetLocations( filter,  pageSize,  sortBy,  startIndex);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.Core.Extensible.LocationCollection GetLocations(string filter, int? pageSize, string sortBy, int? startIndex)
		{
						MozuClient<Mozu.Api.Contracts.Core.Extensible.LocationCollection> response;
			var client = Mozu.Api.Clients.Commerce.Customer.LocationClient.GetLocationsClient( filter,  pageSize,  sortBy,  startIndex);
			SetContext(_apiContext, ref client,true);
			response= client.Execute();
			return response.Result();

		}

								
	}

}


