
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.     
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;

namespace Mozu.Api.Clients.Commerce.Orders
{
	/// <summary>
	/// Locations associated with orders are geographical and provide context for shipping and taxes.
	/// </summary>
	public partial class LocationClient 	{
		
		/// <summary>
		/// Retrieves the order location by providing the location ID.
		/// </summary>
		/// <param name="locationId">Identifier of the location specified in the order.</param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />{<see cref="Mozu.Api.Contracts.Core.Extensible.Location"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=GetLocation( locationId);
		///   var locationClient = mozuClient.WithBaseAddress(url).Execute().Result();
		/// </code>
		/// </example>
		public static MozuClient<Mozu.Api.Contracts.Core.Extensible.Location> GetLocationClient(int locationId)
		{
			var url = Mozu.Api.Urls.Commerce.Orders.LocationUrl.GetLocationUrl(locationId);
			const string verb = "GET";
			var mozuClient = new MozuClient<Mozu.Api.Contracts.Core.Extensible.Location>().WithVerb(verb).WithResourceUrl(url);
		return mozuClient;

		}

		/// <summary>
		/// Retrieves an order location by providing the name.
		/// </summary>
		/// <param name="name">Location name provided in the request.</param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />{<see cref="Mozu.Api.Contracts.Core.Extensible.Location"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=GetLocationByName( name);
		///   var locationClient = mozuClient.WithBaseAddress(url).Execute().Result();
		/// </code>
		/// </example>
		public static MozuClient<Mozu.Api.Contracts.Core.Extensible.Location> GetLocationByNameClient(string name)
		{
			var url = Mozu.Api.Urls.Commerce.Orders.LocationUrl.GetLocationByNameUrl(name);
			const string verb = "GET";
			var mozuClient = new MozuClient<Mozu.Api.Contracts.Core.Extensible.Location>().WithVerb(verb).WithResourceUrl(url);
		return mozuClient;

		}

		/// <summary>
		/// Retrieves a list of locations associated with the orders.
		/// </summary>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />{<see cref="Mozu.Api.Contracts.Core.Extensible.LocationCollection"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=GetLocations();
		///   var locationCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
		/// </code>
		/// </example>
		public static MozuClient<Mozu.Api.Contracts.Core.Extensible.LocationCollection> GetLocationsClient()
		{
			return GetLocationsClient( null,  null,  null,  null);
		}

		/// <summary>
		/// Retrieves a list of locations associated with the orders.
		/// </summary>
		/// <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
		/// <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
		/// <param name="sortBy"></param>
		/// <param name="startIndex"></param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />{<see cref="Mozu.Api.Contracts.Core.Extensible.LocationCollection"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=GetLocations( filter,  pageSize,  sortBy,  startIndex);
		///   var locationCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
		/// </code>
		/// </example>
		public static MozuClient<Mozu.Api.Contracts.Core.Extensible.LocationCollection> GetLocationsClient(string filter, int? pageSize, string sortBy, int? startIndex)
		{
			var url = Mozu.Api.Urls.Commerce.Orders.LocationUrl.GetLocationsUrl(filter, pageSize, sortBy, startIndex);
			const string verb = "GET";
			var mozuClient = new MozuClient<Mozu.Api.Contracts.Core.Extensible.LocationCollection>().WithVerb(verb).WithResourceUrl(url);
		return mozuClient;

		}

								
	}

}


