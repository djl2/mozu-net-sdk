
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.     
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;

namespace Mozu.Api.Clients.Commerce.Orders.Attributedefinition
{
	/// <summary>
	/// A grouping of related orders attributes.
	/// </summary>
	public partial class AttributeSetClient 	{
		
		/// <summary>
		/// Retrieves the attribute set by providing the name and namespace.
		/// </summary>
		/// <param name="fqn">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />{<see cref="Mozu.Api.Contracts.Core.Extensible.AttributeSet"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=GetAttributeSetByName( fqn);
		///   var attributeSetClient = mozuClient.WithBaseAddress(url).Execute().Result();
		/// </code>
		/// </example>
		public static MozuClient<Mozu.Api.Contracts.Core.Extensible.AttributeSet> GetAttributeSetByNameClient(string fqn)
		{
			var url = Mozu.Api.Urls.Commerce.Orders.Attributedefinition.AttributeSetUrl.GetAttributeSetByNameUrl(fqn);
			const string verb = "GET";
			var mozuClient = new MozuClient<Mozu.Api.Contracts.Core.Extensible.AttributeSet>().WithVerb(verb).WithResourceUrl(url);
		return mozuClient;

		}

		/// <summary>
		/// Retrieves a list of attribute sets according to any filter criteria or sort options.
		/// </summary>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />{<see cref="Mozu.Api.Contracts.Core.Extensible.AttributeSetCollection"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=GetAttributeSets();
		///   var attributeSetCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
		/// </code>
		/// </example>
		public static MozuClient<Mozu.Api.Contracts.Core.Extensible.AttributeSetCollection> GetAttributeSetsClient()
		{
			return GetAttributeSetsClient( null,  null,  null,  null);
		}

		/// <summary>
		/// Retrieves a list of attribute sets according to any filter criteria or sort options.
		/// </summary>
		/// <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
		/// <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
		/// <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
		/// <param name="startIndex">Indicates the zero-based offset in the complete result set where the returned entities begin, when creating paged results from a query. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />{<see cref="Mozu.Api.Contracts.Core.Extensible.AttributeSetCollection"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=GetAttributeSets( filter,  pageSize,  sortBy,  startIndex);
		///   var attributeSetCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
		/// </code>
		/// </example>
		public static MozuClient<Mozu.Api.Contracts.Core.Extensible.AttributeSetCollection> GetAttributeSetsClient(string filter, int? pageSize, string sortBy, int? startIndex)
		{
			var url = Mozu.Api.Urls.Commerce.Orders.Attributedefinition.AttributeSetUrl.GetAttributeSetsUrl(filter, pageSize, sortBy, startIndex);
			const string verb = "GET";
			var mozuClient = new MozuClient<Mozu.Api.Contracts.Core.Extensible.AttributeSetCollection>().WithVerb(verb).WithResourceUrl(url);
		return mozuClient;

		}

		/// <summary>
		/// Retrieves a specific attribute set by providing the attribute set ID.
		/// </summary>
		/// <param name="attributeSetId">Identifier of the attribute set being retrieved.</param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />{<see cref="Mozu.Api.Contracts.Core.Extensible.AttributeSet"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=GetAttributeSet( attributeSetId);
		///   var attributeSetClient = mozuClient.WithBaseAddress(url).Execute().Result();
		/// </code>
		/// </example>
		public static MozuClient<Mozu.Api.Contracts.Core.Extensible.AttributeSet> GetAttributeSetClient(int attributeSetId)
		{
			var url = Mozu.Api.Urls.Commerce.Orders.Attributedefinition.AttributeSetUrl.GetAttributeSetUrl(attributeSetId);
			const string verb = "GET";
			var mozuClient = new MozuClient<Mozu.Api.Contracts.Core.Extensible.AttributeSet>().WithVerb(verb).WithResourceUrl(url);
		return mozuClient;

		}

				/// <summary>
		/// Create new attribute set to provide order extensibility.
		/// </summary>
		/// <param name="attributeSet">The properties of the orders attribute set being created.</param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />{<see cref="Mozu.Api.Contracts.Core.Extensible.AttributeSet"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=CreateAttributeSet( attributeSet);
		///   var attributeSetClient = mozuClient.WithBaseAddress(url).Execute().Result();
		/// </code>
		/// </example>
		public static MozuClient<Mozu.Api.Contracts.Core.Extensible.AttributeSet> CreateAttributeSetClient(Mozu.Api.Contracts.Core.Extensible.AttributeSet attributeSet)
		{
			var url = Mozu.Api.Urls.Commerce.Orders.Attributedefinition.AttributeSetUrl.CreateAttributeSetUrl();
			const string verb = "POST";
			var mozuClient = new MozuClient<Mozu.Api.Contracts.Core.Extensible.AttributeSet>().WithVerb(verb).WithResourceUrl(url).WithBody<Mozu.Api.Contracts.Core.Extensible.AttributeSet>(attributeSet);
		return mozuClient;

		}

				/// <summary>
		/// Update an existing attribute set by providing the attribute set ID.
		/// </summary>
		/// <param name="attributeSetId">Identifier of the attribute set being updated.</param>
		/// <param name="attributeSet">The properties of the attribute set being updated.</param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />{<see cref="Mozu.Api.Contracts.Core.Extensible.AttributeSet"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=UpdateAttributeSet( attributeSetId,  attributeSet);
		///   var attributeSetClient = mozuClient.WithBaseAddress(url).Execute().Result();
		/// </code>
		/// </example>
		public static MozuClient<Mozu.Api.Contracts.Core.Extensible.AttributeSet> UpdateAttributeSetClient(int attributeSetId, Mozu.Api.Contracts.Core.Extensible.AttributeSet attributeSet)
		{
			var url = Mozu.Api.Urls.Commerce.Orders.Attributedefinition.AttributeSetUrl.UpdateAttributeSetUrl(attributeSetId);
			const string verb = "PUT";
			var mozuClient = new MozuClient<Mozu.Api.Contracts.Core.Extensible.AttributeSet>().WithVerb(verb).WithResourceUrl(url).WithBody<Mozu.Api.Contracts.Core.Extensible.AttributeSet>(attributeSet);
		return mozuClient;

		}

		/// <summary>
		/// Associate an attribute with an attribute set.
		/// </summary>
		/// <param name="assignment">Properties of the attribute set assignment.</param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=UpsertAttributeSetAssignment( assignment);
		///mozuClient.WithBaseAddress(url).Execute();
		/// </code>
		/// </example>
		public static MozuClient UpsertAttributeSetAssignmentClient(Mozu.Api.Contracts.Core.Extensible.AttributeSetAssignment assignment)
		{
			var url = Mozu.Api.Urls.Commerce.Orders.Attributedefinition.AttributeSetUrl.UpsertAttributeSetAssignmentUrl();
			const string verb = "PUT";
			var mozuClient = new MozuClient().WithVerb(verb).WithResourceUrl(url).WithBody<Mozu.Api.Contracts.Core.Extensible.AttributeSetAssignment>(assignment);
		return mozuClient;

		}

				/// <summary>
		/// Delete a specific attribute set by providing the attribute set ID.
		/// </summary>
		/// <param name="attributeSetId">Identifier of the attribute set being deleted.</param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=DeleteAttributeSet( attributeSetId);
		///mozuClient.WithBaseAddress(url).Execute();
		/// </code>
		/// </example>
		public static MozuClient DeleteAttributeSetClient(int attributeSetId)
		{
			var url = Mozu.Api.Urls.Commerce.Orders.Attributedefinition.AttributeSetUrl.DeleteAttributeSetUrl(attributeSetId);
			const string verb = "DELETE";
			var mozuClient = new MozuClient().WithVerb(verb).WithResourceUrl(url);
		return mozuClient;

		}

		/// <summary>
		/// Removes the attribute from its assigned attribute set.
		/// </summary>
		/// <param name="attributeSetId">Identifier of the attribute set.</param>
		/// <param name="locationId">Identifier of the location. Locations describe where in the application the attribute set definition will be rendered (such as a page).</param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=RemoveAttributeSetAssignment( attributeSetId,  locationId);
		///mozuClient.WithBaseAddress(url).Execute();
		/// </code>
		/// </example>
		public static MozuClient RemoveAttributeSetAssignmentClient(int attributeSetId, int locationId)
		{
			var url = Mozu.Api.Urls.Commerce.Orders.Attributedefinition.AttributeSetUrl.RemoveAttributeSetAssignmentUrl(attributeSetId, locationId);
			const string verb = "DELETE";
			var mozuClient = new MozuClient().WithVerb(verb).WithResourceUrl(url);
		return mozuClient;

		}

		/// <summary>
		/// Delete a specific attribute set by providing the fully qualified name.
		/// </summary>
		/// <param name="fqn">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=DeleteAttributeSetByName( fqn);
		///mozuClient.WithBaseAddress(url).Execute();
		/// </code>
		/// </example>
		public static MozuClient DeleteAttributeSetByNameClient(string fqn)
		{
			var url = Mozu.Api.Urls.Commerce.Orders.Attributedefinition.AttributeSetUrl.DeleteAttributeSetByNameUrl(fqn);
			const string verb = "DELETE";
			var mozuClient = new MozuClient().WithVerb(verb).WithResourceUrl(url);
		return mozuClient;

		}

		
	}

}


