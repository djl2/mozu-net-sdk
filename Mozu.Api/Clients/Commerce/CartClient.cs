
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.     
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;

namespace Mozu.Api.Clients.Commerce
{
	/// <summary>
	/// Use the Carts resource to manage storefront shopping carts as items are added and removed. Each time a shopper's cart is modified, the Carts resource updates estimated prices, discounts, tax, and shipping.
	/// </summary>
	public partial class CartClient 	{
		
		/// <summary>
		/// Retrieve a cart specified by its cart ID.
		/// </summary>
		/// <param name="cartId">Identifier of the cart being retrieved.</param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />{<see cref="Mozu.Api.Contracts.CommerceRuntime.Carts.Cart"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=GetCart( cartId);
		///   var cartClient = mozuClient.WithBaseAddress(url).Execute().Result();
		/// </code>
		/// </example>
		public static MozuClient<Mozu.Api.Contracts.CommerceRuntime.Carts.Cart> GetCartClient(string cartId)
		{
			var url = Mozu.Api.Urls.Commerce.CartUrl.GetCartUrl(cartId);
			const string verb = "GET";
			var mozuClient = new MozuClient<Mozu.Api.Contracts.CommerceRuntime.Carts.Cart>().WithVerb(verb).WithResourceUrl(url);
		return mozuClient;

		}

		/// <summary>
		/// Retrieves a cart's contents for the current shopper. If the shopper does not have an active cart on the site, the service creates one.
		/// </summary>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />{<see cref="Mozu.Api.Contracts.CommerceRuntime.Carts.Cart"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=GetOrCreateCart();
		///   var cartClient = mozuClient.WithBaseAddress(url).Execute().Result();
		/// </code>
		/// </example>
		public static MozuClient<Mozu.Api.Contracts.CommerceRuntime.Carts.Cart> GetOrCreateCartClient()
		{
			var url = Mozu.Api.Urls.Commerce.CartUrl.GetOrCreateCartUrl();
			const string verb = "GET";
			var mozuClient = new MozuClient<Mozu.Api.Contracts.CommerceRuntime.Carts.Cart>().WithVerb(verb).WithResourceUrl(url);
		return mozuClient;

		}

		/// <summary>
		/// Retrieves the number of items in the active cart and the status of the cart such as whether or not it has expired. Only an anonymous user's cart (guest that does not log in) that is emptied and idle will expire after 14 days. Note that the expiration counter is renewed each time action is made to the cart. For shoppers or users that are logged in, the cart does not expire.
		/// </summary>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />{<see cref="Mozu.Api.Contracts.CommerceRuntime.Carts.CartSummary"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=GetCartSummary();
		///   var cartSummaryClient = mozuClient.WithBaseAddress(url).Execute().Result();
		/// </code>
		/// </example>
		public static MozuClient<Mozu.Api.Contracts.CommerceRuntime.Carts.CartSummary> GetCartSummaryClient()
		{
			var url = Mozu.Api.Urls.Commerce.CartUrl.GetCartSummaryUrl();
			const string verb = "GET";
			var mozuClient = new MozuClient<Mozu.Api.Contracts.CommerceRuntime.Carts.CartSummary>().WithVerb(verb).WithResourceUrl(url);
		return mozuClient;

		}

		/// <summary>
		/// Retrieve a user's cart by specifying the user ID.
		/// </summary>
		/// <param name="userId">Unique identifier of the user whose cart you want to retrieve.</param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />{<see cref="Mozu.Api.Contracts.CommerceRuntime.Carts.Cart"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=GetUserCart( userId);
		///   var cartClient = mozuClient.WithBaseAddress(url).Execute().Result();
		/// </code>
		/// </example>
		public static MozuClient<Mozu.Api.Contracts.CommerceRuntime.Carts.Cart> GetUserCartClient(string userId)
		{
			var url = Mozu.Api.Urls.Commerce.CartUrl.GetUserCartUrl(userId);
			const string verb = "GET";
			var mozuClient = new MozuClient<Mozu.Api.Contracts.CommerceRuntime.Carts.Cart>().WithVerb(verb).WithResourceUrl(url);
		return mozuClient;

		}

		/// <summary>
		/// Retrieves the current status of the specified user's cart, including the number of items in the active cart.
		/// </summary>
		/// <param name="userId">Unique identifier of the user whose cart details you want to retrieve.</param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />{<see cref="Mozu.Api.Contracts.CommerceRuntime.Carts.CartSummary"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=GetUserCartSummary( userId);
		///   var cartSummaryClient = mozuClient.WithBaseAddress(url).Execute().Result();
		/// </code>
		/// </example>
		public static MozuClient<Mozu.Api.Contracts.CommerceRuntime.Carts.CartSummary> GetUserCartSummaryClient(string userId)
		{
			var url = Mozu.Api.Urls.Commerce.CartUrl.GetUserCartSummaryUrl(userId);
			const string verb = "GET";
			var mozuClient = new MozuClient<Mozu.Api.Contracts.CommerceRuntime.Carts.CartSummary>().WithVerb(verb).WithResourceUrl(url);
		return mozuClient;

		}

						/// <summary>
		/// Update the current shopper's cart.
		/// </summary>
		/// <param name="cart">All of the properties of the cart to update. The product code is required.</param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />{<see cref="Mozu.Api.Contracts.CommerceRuntime.Carts.Cart"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=UpdateCart( cart);
		///   var cartClient = mozuClient.WithBaseAddress(url).Execute().Result();
		/// </code>
		/// </example>
		public static MozuClient<Mozu.Api.Contracts.CommerceRuntime.Carts.Cart> UpdateCartClient(Mozu.Api.Contracts.CommerceRuntime.Carts.Cart cart)
		{
			var url = Mozu.Api.Urls.Commerce.CartUrl.UpdateCartUrl();
			const string verb = "PUT";
			var mozuClient = new MozuClient<Mozu.Api.Contracts.CommerceRuntime.Carts.Cart>().WithVerb(verb).WithResourceUrl(url).WithBody<Mozu.Api.Contracts.CommerceRuntime.Carts.Cart>(cart);
		return mozuClient;

		}

				/// <summary>
		/// Delete the cart specified by its cart ID.
		/// </summary>
		/// <param name="cartId">Identifier of the cart being deleted.</param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=DeleteCart( cartId);
		///mozuClient.WithBaseAddress(url).Execute();
		/// </code>
		/// </example>
		public static MozuClient DeleteCartClient(string cartId)
		{
			var url = Mozu.Api.Urls.Commerce.CartUrl.DeleteCartUrl(cartId);
			const string verb = "DELETE";
			var mozuClient = new MozuClient().WithVerb(verb).WithResourceUrl(url);
		return mozuClient;

		}

		/// <summary>
		/// Deletes the cart of the currently active shopper.
		/// </summary>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=DeleteCurrentCart();
		///mozuClient.WithBaseAddress(url).Execute();
		/// </code>
		/// </example>
		public static MozuClient DeleteCurrentCartClient()
		{
			var url = Mozu.Api.Urls.Commerce.CartUrl.DeleteCurrentCartUrl();
			const string verb = "DELETE";
			var mozuClient = new MozuClient().WithVerb(verb).WithResourceUrl(url);
		return mozuClient;

		}

		
	}

}


