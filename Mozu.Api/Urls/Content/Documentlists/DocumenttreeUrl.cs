
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.     
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;


namespace Mozu.Api.Urls.Content.Documentlists
{
	public partial class DocumentTreeUrl : BaseUrl
	{

		/// <summary>
        /// Get Resource Url for GetTreeDocumentContent
        /// </summary>
        /// <param name="documentListName">The name of the document list associated with the document.</param>
        /// <param name="documentName">The name of the document, which is unique within its folder.</param>
        /// <param name="folderId">If applicable, the unique identifier of the folder that contains the document.</param>
        /// <param name="folderPath">If applicable, the path of the folder hierarchy location associated with the document.</param>
        /// <param name="publishState">The current state of the document, which is Active, Draft, or Latest. Active documents are published and cannot be deleted. Querying Latest returns the most recent version of the document, regardless of whether it is published or a draft.</param>
        /// <returns>
        /// String - Resource Url
        /// </returns>
        public static string GetTreeDocumentContentUrl(string documentListName, string documentName, string folderId, string folderPath, string publishState)
		{
			var url = "/api/content/documentlists/{documentListName}/documentTree/{documentName}/content?folderPath={folderPath}&folderId={folderId}&publishState={publishState}";
			FormatUrl( ref url, "documentListName", documentListName);
			FormatUrl( ref url, "documentName", documentName);
			FormatUrl( ref url, "folderId", folderId);
			FormatUrl( ref url, "folderPath", folderPath);
			FormatUrl( ref url, "publishState", publishState);
			return url;
		}

		/// <summary>
        /// Get Resource Url for GetTreeDocument
        /// </summary>
        /// <param name="documentListName">The name of the document list associated with the document.</param>
        /// <param name="documentName">The name of the document, which is unique within its folder.</param>
        /// <param name="folderId">If applicable, the unique identifier of the folder that contains the document.</param>
        /// <param name="folderPath">If applicable, the path of the folder hierarchy location that contains the document.</param>
        /// <param name="publishState">The current state of the document, which is Active, Draft, or Latest. Active documents are published and cannot be deleted. Querying Latest returns the most recent version of the document, regardless of whether it is published or a draft.</param>
        /// <returns>
        /// String - Resource Url
        /// </returns>
        public static string GetTreeDocumentUrl(string documentListName, string documentName, string folderId, string folderPath, string publishState)
		{
			var url = "/api/content/documentlists/{documentListName}/documentTree/{documentName}?folderPath={folderPath}&folderId={folderId}&publishState={publishState}";
			FormatUrl( ref url, "documentListName", documentListName);
			FormatUrl( ref url, "documentName", documentName);
			FormatUrl( ref url, "folderId", folderId);
			FormatUrl( ref url, "folderPath", folderPath);
			FormatUrl( ref url, "publishState", publishState);
			return url;
		}

						/// <summary>
        /// Get Resource Url for UpdateTreeDocumentContent
        /// </summary>
        /// <param name="documentListName">The name of the document list associated with the document.</param>
        /// <param name="documentName">The name of the document, which is unique within its folder.</param>
        /// <param name="folderId">If applicable, the unique identifier of the folder that contains the document.</param>
        /// <param name="folderPath">If applicable, the path of the folder hierarchy location associated with the document.</param>
        /// <returns>
        /// String - Resource Url
        /// </returns>
        public static string UpdateTreeDocumentContentUrl(string documentListName, string documentName, string folderId, string folderPath)
		{
			var url = "/api/content/documentlists/{documentListName}/documentTree/{documentName}/content?folderPath={folderPath}&folderId={folderId}";
			FormatUrl( ref url, "documentListName", documentListName);
			FormatUrl( ref url, "documentName", documentName);
			FormatUrl( ref url, "folderId", folderId);
			FormatUrl( ref url, "folderPath", folderPath);
			return url;
		}

				/// <summary>
        /// Get Resource Url for DeleteTreeDocumentContent
        /// </summary>
        /// <param name="documentListName">The name of the document list associated with the document.</param>
        /// <param name="documentName">The name of the document, which is unique within its folder.</param>
        /// <param name="folderId">If applicable, the unique identifier of the folder that contains the document.</param>
        /// <param name="folderPath">If applicable, the path of the folder hierarchy location associated with the document.</param>
        /// <returns>
        /// String - Resource Url
        /// </returns>
        public static string DeleteTreeDocumentContentUrl(string documentListName, string documentName, string folderId, string folderPath)
		{
			var url = "/api/content/documentlists/{documentListName}/documentTree/{documentName}/content?folderPath={folderPath}&folderId={folderId}";
			FormatUrl( ref url, "documentListName", documentListName);
			FormatUrl( ref url, "documentName", documentName);
			FormatUrl( ref url, "folderId", folderId);
			FormatUrl( ref url, "folderPath", folderPath);
			return url;
		}

		
	}
}

