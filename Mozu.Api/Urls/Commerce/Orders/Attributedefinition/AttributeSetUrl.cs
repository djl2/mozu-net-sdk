
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.     
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;


namespace Mozu.Api.Urls.Commerce.Orders.Attributedefinition
{
	public partial class AttributeSetUrl : BaseUrl
	{

		/// <summary>
        /// Get Resource Url for GetAttributeSetByName
        /// </summary>
        /// <param name="fqn">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
        /// <returns>
        /// String - Resource Url
        /// </returns>
        public static string GetAttributeSetByNameUrl(string fqn)
		{
			var url = "/api/commerce/orders/attributedefinition/attributesets/?fqn={fqn}&";
			FormatUrl( ref url, "fqn", fqn);
			return url;
		}

		/// <summary>
        /// Get Resource Url for GetAttributeSets
        /// </summary>
        /// <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
        /// <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
        /// <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
        /// <param name="startIndex">Indicates the zero-based offset in the complete result set where the returned entities begin, when creating paged results from a query. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
        /// <returns>
        /// String - Resource Url
        /// </returns>
        public static string GetAttributeSetsUrl(string filter, int? pageSize, string sortBy, int? startIndex)
		{
			var url = "/api/commerce/orders/attributedefinition/attributesets/?startIndex={startIndex}&pageSize={pageSize}&sortBy={sortBy}&&filter={filter}";
			FormatUrl( ref url, "filter", filter);
			FormatUrl( ref url, "pageSize", pageSize);
			FormatUrl( ref url, "sortBy", sortBy);
			FormatUrl( ref url, "startIndex", startIndex);
			return url;
		}

		/// <summary>
        /// Get Resource Url for GetAttributeSet
        /// </summary>
        /// <param name="attributeSetId">Identifier of the attribute set being retrieved.</param>
        /// <returns>
        /// String - Resource Url
        /// </returns>
        public static string GetAttributeSetUrl(int attributeSetId)
		{
			var url = "/api/commerce/orders/attributedefinition/attributesets/{attributeSetId}";
			FormatUrl( ref url, "attributeSetId", attributeSetId);
			return url;
		}

				/// <summary>
        /// Get Resource Url for CreateAttributeSet
        /// </summary>
        /// <returns>
        /// String - Resource Url
        /// </returns>
        public static string CreateAttributeSetUrl()
		{
			var url = "/api/commerce/orders/attributedefinition/attributesets/";
			return url;
		}

				/// <summary>
        /// Get Resource Url for UpdateAttributeSet
        /// </summary>
        /// <param name="attributeSetId">Identifier of the attribute set being updated.</param>
        /// <returns>
        /// String - Resource Url
        /// </returns>
        public static string UpdateAttributeSetUrl(int attributeSetId)
		{
			var url = "/api/commerce/orders/attributedefinition/attributesets/{attributeSetId}";
			FormatUrl( ref url, "attributeSetId", attributeSetId);
			return url;
		}

		/// <summary>
        /// Get Resource Url for UpsertAttributeSetAssignment
        /// </summary>
        /// <returns>
        /// String - Resource Url
        /// </returns>
        public static string UpsertAttributeSetAssignmentUrl()
		{
			var url = "/api/commerce/orders/attributedefinition/attributesets/locations";
			return url;
		}

				/// <summary>
        /// Get Resource Url for DeleteAttributeSet
        /// </summary>
        /// <param name="attributeSetId">Identifier of the attribute set being deleted.</param>
        /// <returns>
        /// String - Resource Url
        /// </returns>
        public static string DeleteAttributeSetUrl(int attributeSetId)
		{
			var url = "/api/commerce/orders/attributedefinition/attributesets/{attributeSetId}";
			FormatUrl( ref url, "attributeSetId", attributeSetId);
			return url;
		}

		/// <summary>
        /// Get Resource Url for RemoveAttributeSetAssignment
        /// </summary>
        /// <param name="attributeSetId">Identifier of the attribute set.</param>
        /// <param name="locationId">Identifier of the location. Locations describe where in the application the attribute set definition will be rendered (such as a page).</param>
        /// <returns>
        /// String - Resource Url
        /// </returns>
        public static string RemoveAttributeSetAssignmentUrl(int attributeSetId, int locationId)
		{
			var url = "/api/commerce/orders/attributedefinition/attributesets/{attributesetid}/locations/{locationId}";
			FormatUrl( ref url, "attributeSetId", attributeSetId);
			FormatUrl( ref url, "locationId", locationId);
			return url;
		}

		/// <summary>
        /// Get Resource Url for DeleteAttributeSetByName
        /// </summary>
        /// <param name="fqn">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
        /// <returns>
        /// String - Resource Url
        /// </returns>
        public static string DeleteAttributeSetByNameUrl(string fqn)
		{
			var url = "/api/commerce/orders/attributedefinition/attributesets/{fqn}";
			FormatUrl( ref url, "fqn", fqn);
			return url;
		}

		
	}
}

