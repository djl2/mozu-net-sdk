
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.     
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;


namespace Mozu.Api.Urls.Commerce.Catalog.Admin
{
	public partial class ProductUrl : BaseUrl
	{

		/// <summary>
        /// Get Resource Url for GetProducts
        /// </summary>
        /// <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
        /// <param name="noCount">If true, the operation does not return the TotalCount number of results.</param>
        /// <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
        /// <param name="q">A list of product search terms to use in the query when searching across product code and product name. Separate multiple search terms with a space character.</param>
        /// <param name="qLimit">The maximum number of search results to return in the response. You can limit any range between 1-100.</param>
        /// <param name="sortBy"></param>
        /// <param name="startIndex"></param>
        /// <returns>
        /// String - Resource Url
        /// </returns>
        public static string GetProductsUrl(string filter, bool? noCount, int? pageSize, string q, int? qLimit, string sortBy, int? startIndex)
		{
			var url = "/api/commerce/catalog/admin/products/?startIndex={startIndex}&pageSize={pageSize}&sortBy={sortBy}&&filter={filter}&q={q}&qLimit={qLimit}&noCount={noCount}";
			FormatUrl( ref url, "filter", filter);
			FormatUrl( ref url, "noCount", noCount);
			FormatUrl( ref url, "pageSize", pageSize);
			FormatUrl( ref url, "q", q);
			FormatUrl( ref url, "qLimit", qLimit);
			FormatUrl( ref url, "sortBy", sortBy);
			FormatUrl( ref url, "startIndex", startIndex);
			return url;
		}

		/// <summary>
        /// Get Resource Url for GetProduct
        /// </summary>
        /// <param name="productCode">Merchant-created code associated with the product such as a SKU. Max length: 30. Accepts a to z, A to Z, Ãƒâ€¹-ÃƒËœ, 0 to 9, #, semicolon, commas, apostrophes, and Spaces, but no punctuation or other characters.</param>
        /// <returns>
        /// String - Resource Url
        /// </returns>
        public static string GetProductUrl(string productCode)
		{
			var url = "/api/commerce/catalog/admin/products/{productCode}";
			FormatUrl( ref url, "productCode", productCode);
			return url;
		}

		/// <summary>
        /// Get Resource Url for GetProductInSites
        /// </summary>
        /// <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
        /// <returns>
        /// String - Resource Url
        /// </returns>
        public static string GetProductInSitesUrl(string productCode)
		{
			var url = "/api/commerce/catalog/admin/products/{productCode}/ProductInSites";
			FormatUrl( ref url, "productCode", productCode);
			return url;
		}

		/// <summary>
        /// Get Resource Url for GetProductInSite
        /// </summary>
        /// <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
        /// <param name="siteId"></param>
        /// <returns>
        /// String - Resource Url
        /// </returns>
        public static string GetProductInSiteUrl(string productCode, int siteId)
		{
			var url = "/api/commerce/catalog/admin/products/{productCode}/ProductInSites/{siteId}";
			FormatUrl( ref url, "productCode", productCode);
			FormatUrl( ref url, "siteId", siteId);
			return url;
		}

				/// <summary>
        /// Get Resource Url for AddProduct
        /// </summary>
        /// <returns>
        /// String - Resource Url
        /// </returns>
        public static string AddProductUrl()
		{
			var url = "/api/commerce/catalog/admin/products/";
			return url;
		}

		/// <summary>
        /// Get Resource Url for AddProductInSite
        /// </summary>
        /// <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
        /// <returns>
        /// String - Resource Url
        /// </returns>
        public static string AddProductInSiteUrl(string productCode)
		{
			var url = "/api/commerce/catalog/admin/products/{productCode}/ProductInSites";
			FormatUrl( ref url, "productCode", productCode);
			return url;
		}

		/// <summary>
        /// Get Resource Url for UpdateProductStock
        /// </summary>
        /// <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
        /// <returns>
        /// String - Resource Url
        /// </returns>
        public static string UpdateProductStockUrl(string productCode)
		{
			var url = "/api/commerce/catalog/admin/products/{productCode}/StockOnHandAdjustment";
			FormatUrl( ref url, "productCode", productCode);
			return url;
		}

				/// <summary>
        /// Get Resource Url for UpdateProduct
        /// </summary>
        /// <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
        /// <returns>
        /// String - Resource Url
        /// </returns>
        public static string UpdateProductUrl(string productCode)
		{
			var url = "/api/commerce/catalog/admin/products/{productCode}";
			FormatUrl( ref url, "productCode", productCode);
			return url;
		}

		/// <summary>
        /// Get Resource Url for UpdateProductInSites
        /// </summary>
        /// <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
        /// <returns>
        /// String - Resource Url
        /// </returns>
        public static string UpdateProductInSitesUrl(string productCode)
		{
			var url = "/api/commerce/catalog/admin/products/{productCode}/ProductInSites";
			FormatUrl( ref url, "productCode", productCode);
			return url;
		}

		/// <summary>
        /// Get Resource Url for UpdateProductInSite
        /// </summary>
        /// <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
        /// <param name="siteId"></param>
        /// <returns>
        /// String - Resource Url
        /// </returns>
        public static string UpdateProductInSiteUrl(string productCode, int siteId)
		{
			var url = "/api/commerce/catalog/admin/products/{productCode}/ProductInSites/{siteId}";
			FormatUrl( ref url, "productCode", productCode);
			FormatUrl( ref url, "siteId", siteId);
			return url;
		}

				/// <summary>
        /// Get Resource Url for DeleteProduct
        /// </summary>
        /// <param name="productCode">Merchant-created code associated with the product such as a SKU.</param>
        /// <returns>
        /// String - Resource Url
        /// </returns>
        public static string DeleteProductUrl(string productCode)
		{
			var url = "/api/commerce/catalog/admin/products/{productCode}";
			FormatUrl( ref url, "productCode", productCode);
			return url;
		}

		/// <summary>
        /// Get Resource Url for DeleteProductInSite
        /// </summary>
        /// <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
        /// <param name="siteId"></param>
        /// <returns>
        /// String - Resource Url
        /// </returns>
        public static string DeleteProductInSiteUrl(string productCode, int siteId)
		{
			var url = "/api/commerce/catalog/admin/products/{productCode}/ProductInSites/{siteId}";
			FormatUrl( ref url, "productCode", productCode);
			FormatUrl( ref url, "siteId", siteId);
			return url;
		}

		
	}
}

