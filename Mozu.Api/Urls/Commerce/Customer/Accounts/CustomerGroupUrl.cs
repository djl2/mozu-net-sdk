
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.     
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;


namespace Mozu.Api.Urls.Commerce.Customer.Accounts
{
	public partial class CustomerGroupUrl : MozuUrl
	{

		/// <summary>
        /// Get Resource Url for GetAccountGroups
        /// </summary>
        /// <param name="accountId">Unique identifier of the customer account.</param>
        /// <param name="filter">"A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - ""filter=IsDisplayed+eq+true"""</param>
        /// <param name="pageSize">Used to create paged results from a query. Specifies the number of results to display on each page. Maximum: 200.</param>
        /// <param name="sortBy"></param>
        /// <param name="startIndex"></param>
        /// <returns>
        /// String - Resource Url
        /// </returns>
        public static MozuUrl GetAccountGroupsUrl(int accountId, string filter, int? pageSize, string sortBy, int? startIndex)
		{
			var url = "/api/commerce/customer/accounts/{accountId}/groups/?startIndex={startIndex}&pageSize={pageSize}&sortBy={sortBy}&filter={filter}";
			FormatUrl( ref url, "accountId", accountId);
			FormatUrl( ref url, "filter", filter);
			FormatUrl( ref url, "pageSize", pageSize);
			FormatUrl( ref url, "sortBy", sortBy);
			FormatUrl( ref url, "startIndex", startIndex);
			return new MozuUrl(url, MozuUrl.UrlLocation.TENANT_POD) ;
		}

		/// <summary>
        /// Get Resource Url for GetAccountGroup
        /// </summary>
        /// <param name="accountId">Unique identifier of the customer account.</param>
        /// <param name="groupId">Unique identifier of the customer group.</param>
        /// <returns>
        /// String - Resource Url
        /// </returns>
        public static MozuUrl GetAccountGroupUrl(int accountId, int groupId)
		{
			var url = "/api/commerce/customer/accounts/{accountId}/groups/{groupId}";
			FormatUrl( ref url, "accountId", accountId);
			FormatUrl( ref url, "groupId", groupId);
			return new MozuUrl(url, MozuUrl.UrlLocation.TENANT_POD) ;
		}

				/// <summary>
        /// Get Resource Url for AddAccountGroup
        /// </summary>
        /// <param name="accountId">Unique identifier of the customer account to add to a group.</param>
        /// <param name="groupId">Unique identifier of the customer group to add the customer to.</param>
        /// <returns>
        /// String - Resource Url
        /// </returns>
        public static MozuUrl AddAccountGroupUrl(int accountId, int groupId)
		{
			var url = "/api/commerce/customer/accounts/{accountId}/groups/{groupId}";
			FormatUrl( ref url, "accountId", accountId);
			FormatUrl( ref url, "groupId", groupId);
			return new MozuUrl(url, MozuUrl.UrlLocation.TENANT_POD) ;
		}

						/// <summary>
        /// Get Resource Url for DeleteAccountGroup
        /// </summary>
        /// <param name="accountId">Unique identifier of the customer account to remove from the group.</param>
        /// <param name="groupId">Unique identifier of the customer group.</param>
        /// <returns>
        /// String - Resource Url
        /// </returns>
        public static MozuUrl DeleteAccountGroupUrl(int accountId, int groupId)
		{
			var url = "/api/commerce/customer/accounts/{accountId}/groups/{groupId}";
			FormatUrl( ref url, "accountId", accountId);
			FormatUrl( ref url, "groupId", groupId);
			return new MozuUrl(url, MozuUrl.UrlLocation.TENANT_POD) ;
		}

		
	}
}

