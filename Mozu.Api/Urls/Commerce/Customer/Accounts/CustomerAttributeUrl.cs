
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.     
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;


namespace Mozu.Api.Urls.Commerce.Customer.Accounts
{
	public partial class CustomerAttributeUrl : BaseUrl
	{

		/// <summary>
        /// Get Resource Url for GetAccountAttribute
        /// </summary>
        /// <param name="accountId">Identifier of the customer account associated with the attribute to retrieve.</param>
        /// <param name="attributeId">Identifier of the customer account attribute to retrieve.</param>
        /// <returns>
        /// String - Resource Url
        /// </returns>
        public static string GetAccountAttributeUrl(int accountId, int attributeId)
		{
			var url = "/api/commerce/customer/accounts/{accountId}/attributes/{attributeId}";
			FormatUrl( ref url, "accountId", accountId);
			FormatUrl( ref url, "attributeId", attributeId);
			return url;
		}

		/// <summary>
        /// Get Resource Url for GetAccountAttributes
        /// </summary>
        /// <param name="accountId">Identifier of the customer account associated with the attributes to retrieve.</param>
        /// <param name="filter"></param>
        /// <param name="pageSize"></param>
        /// <param name="sortBy"></param>
        /// <param name="startIndex"></param>
        /// <returns>
        /// String - Resource Url
        /// </returns>
        public static string GetAccountAttributesUrl(int accountId, string filter, int? pageSize, string sortBy, int? startIndex)
		{
			var url = "/api/commerce/customer/accounts/{accountId}/attributes?startIndex={startIndex}&pageSize={pageSize}&sortBy={sortBy}&filter={filter}";
			FormatUrl( ref url, "accountId", accountId);
			FormatUrl( ref url, "filter", filter);
			FormatUrl( ref url, "pageSize", pageSize);
			FormatUrl( ref url, "sortBy", sortBy);
			FormatUrl( ref url, "startIndex", startIndex);
			return url;
		}

				/// <summary>
        /// Get Resource Url for AddAccountAttributes
        /// </summary>
        /// <param name="accountId">Identifier of the customer account associated with the new attribute.</param>
        /// <returns>
        /// String - Resource Url
        /// </returns>
        public static string AddAccountAttributesUrl(int accountId)
		{
			var url = "/api/commerce/customer/accounts/{accountId}/attributes";
			FormatUrl( ref url, "accountId", accountId);
			return url;
		}

				/// <summary>
        /// Get Resource Url for UpdateAccountAttribute
        /// </summary>
        /// <param name="accountId">Identifier of the customer account associated with the attribute.</param>
        /// <param name="removeMissing">If true, remove the items missing from the collection. If false, do not remove items missing from the collection.</param>
        /// <returns>
        /// String - Resource Url
        /// </returns>
        public static string UpdateAccountAttributeUrl(int accountId, bool? removeMissing)
		{
			var url = "/api/commerce/customer/accounts/{accountId}/attributes?removeMissing={removeMissing}";
			FormatUrl( ref url, "accountId", accountId);
			FormatUrl( ref url, "removeMissing", removeMissing);
			return url;
		}

				
	}
}

