<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Mozu.Api</name>
    </assembly>
    <members>
        <member name="T:Mozu.Api.Events.HttpHandler">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mozu.Api.Security.UserAuthentication._apiContext">
            <summary>
            The base URL of the Mozu application authentication service
            </summary>
        </member>
        <member name="F:Mozu.Api.Security.UserAuthentication._tanantAuthTicket">
            <summary>
            The application authentication ticket
            </summary>
        </member>
        <member name="M:Mozu.Api.Security.UserAuthentication.#ctor(Mozu.Api.Contracts.Core.UserAuthInfo,System.String,Mozu.Api.Security.RefreshInterval)">
            <summary>
            This contructor does application authentication and setups up the necessary timers to keep the app auth ticket valid.
            </summary>
            <param name="appId">The application version's app id</param>
            <param name="sharedSecret">The application version's shared secret</param>
            <param name="baseAppAuthUrl">The base URL of the Mozu application authentication service</param>
        </member>
        <member name="M:Mozu.Api.Security.UserAuthentication.AuthenticateUser(System.Nullable{System.Int32})">
            <summary>
            Do application authentication
            </summary>
        </member>
        <member name="M:Mozu.Api.Security.UserAuthentication.RefreshUserAuthTicket(System.Nullable{System.Int32})">
            <summary>
            Refresh the application auth ticket using the refresh token
            </summary>
        </member>
        <member name="M:Mozu.Api.Security.UserAuthentication.EnsureAuthTicket">
            <summary>
            Ensure that the auth ticket is valid.  If not, then make it so.  Will be used when not using timers to keep the auth ticket alive (i.e. "on demand" mode).
            </summary>
        </member>
        <member name="M:Mozu.Api.Security.UserAuthentication.AddUserAuthHeader(System.Net.Http.HttpClient)">
            <summary>
            This method adds the necessary user claims header to a http client to allow authorized calls to Mozu services
            </summary>
            <param name="client">The http client for which to add the header</param>
        </member>
        <member name="P:Mozu.Api.Security.UserAuthentication.UserAuthTicket">
            <summary>
            The application auth ticket
            </summary>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.CartClient">
            <summary>
            Use the Carts resource to manage storefront shopping carts as items are added and removed. Each time a shopper's cart is modified, the Carts resource updates estimated prices, discounts, tax, and shipping.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.CartClient.GetCartClient(System.String)">
            <summary>
            Retrieve a cart specified by its cart ID.
            </summary>
            <param name="cartId">Identifier of the cart being retrieved.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetCart( cartId);
              var cartClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.CartClient.GetOrCreateCartClient">
            <summary>
            Retrieves a cart's contents for the current shopper. If the shopper does not have an active cart on the site, the service creates one.
            </summary>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetOrCreateCart();
              var cartClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.CartClient.GetCartSummaryClient">
            <summary>
            Retrieves the number of items in the active cart and the status of the cart such as whether or not it has expired. Only an anonymous user's cart (guest that does not log in) that is emptied and idle will expire after 14 days. Note that the expiration counter is renewed each time action is made to the cart. For shoppers or users that are logged in, the cart does not expire.
            </summary>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.CartSummary"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetCartSummary();
              var cartSummaryClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.CartClient.GetUserCartClient(System.String)">
            <summary>
            Retrieve a user's cart by specifying the user ID.
            </summary>
            <param name="userId">Unique identifier of the user whose cart you want to retrieve.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetUserCart( userId);
              var cartClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.CartClient.GetUserCartSummaryClient(System.String)">
            <summary>
            Retrieves the current status of the specified user's cart, including the number of items in the active cart.
            </summary>
            <param name="userId">Unique identifier of the user whose cart details you want to retrieve.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.CartSummary"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetUserCartSummary( userId);
              var cartSummaryClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.CartClient.UpdateCartClient(Mozu.Api.Contracts.CommerceRuntime.Carts.Cart)">
            <summary>
            Update the current shopper's cart.
            </summary>
            <param name="cart">All of the properties of the cart to update. The product code is required.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateCart( cart);
              var cartClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.CartClient.DeleteCartClient(System.String)">
             <summary>
             Delete the cart specified by its cart ID.
             </summary>
             <param name="cartId">Identifier of the cart being deleted.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteCart( cartId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.CartClient.DeleteCurrentCartClient">
             <summary>
             Deletes the cart of the currently active shopper.
             </summary>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteCurrentCart();
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Carts.CartItemClient">
            <summary>
            Use the cart items subresource to manage a collection of items in an active shopping cart.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Carts.CartItemClient.GetCartItemsClient">
            <summary>
            Retrieves a list of cart items including the total number of items in the cart.
            </summary>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItemCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetCartItems();
              var cartItemCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Carts.CartItemClient.GetCartItemClient(System.String)">
            <summary>
            Retrieves a particular cart item by providing the cart item ID.
            </summary>
            <param name="cartItemId">Identifier of the cart item to retrieve.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetCartItem( cartItemId);
              var cartItemClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Carts.CartItemClient.AddItemToCartClient(Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem)">
            <summary>
            Adds an item such as product to the current shopper's cart.
            </summary>
            <param name="cartItem">All properties of the new cart item. The product code is required.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddItemToCart( cartItem);
              var cartItemClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Carts.CartItemClient.UpdateCartItemClient(System.String,Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem)">
            <summary>
            Update properties of a specific cart item.
            </summary>
            <param name="cartItemId">Identifier of the cart item to update.</param>
            <param name="cartItem">The properties of the cart item to update.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateCartItem( cartItemId,  cartItem);
              var cartItemClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Carts.CartItemClient.UpdateCartItemQuantityClient(System.String,System.Int32)">
            <summary>
            Update the quantity of an individual cart item in the cart of a current shopper.
            </summary>
            <param name="cartItemId">Identifier of the cart item to update quantity.</param>
            <param name="quantity">The number of cart items in the shopper's active cart.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateCartItemQuantity( cartItemId,  quantity);
              var cartItemClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Carts.CartItemClient.RemoveAllCartItemsClient">
            <summary>
            Removes all cart items in the shopper's active cart.
            </summary>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart"/>}
            </returns>
            <example>
            <code>
              var mozuClient=RemoveAllCartItems();
              var cartClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Carts.CartItemClient.DeleteCartItemClient(System.String)">
             <summary>
             Delete a specific cart item by providing the cart item ID.
             </summary>
             <param name="cartItemId">Identifier of the cart item to delete.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteCartItem( cartItemId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Carts.ChangeMessageClient">
            <summary>
            System messages for live carts to notify the shopper about a product price or inventory change. System-supplied and read-only. For example: Product price is reduced due to a buy one, get one 50% off (BOGO) sale. A message may appear if the product is out of stock during the cart shopping process.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Carts.ChangeMessageClient.GetMessagesClient">
            <summary>
            Retrieves messages to and from the current shopper. These are messages supplied by the system to notify the shopper of price increases or decreases or product unavailability.
            </summary>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.CartChangeMessageCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetMessages();
              var cartChangeMessageCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Carts.ChangeMessageClient.RemoveAllMessagesClient">
             <summary>
             Deletes all messages associated with the cart of the current shopper.
             </summary>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=RemoveAllMessages();
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Carts.ChangeMessageClient.RemoveMessageClient(System.String)">
             <summary>
             Removes a single message associated with the cart of the current shopper.
             </summary>
             <param name="messageId">Identifier of the message to remove from the cart.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=RemoveMessage( messageId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.AttributeClient">
            <summary>
            Use the Attribute Definition resource to manage the properties, options, and extras that uniquely describe products of a specific type. Attributes can be associated with a product type, assigned values by a merchant or shopper, and added as faceted search filters for a product category.Options are product attributes that describe unique configurations made by the shopper, such as size or color, and generate a new product variation (or unique SKU).Properties are product attributes that describe aspects of the product that do not represent an option configurable by the shopper, such as screen resolution or brand.Extras are product attributes that describe add-on configurations made by the shopper that do not represent a product variation, such as a monogram.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.AttributeClient.GetAttributesClient">
            <summary>
            Retrieves a paged list of attributes according to any specified filter criteria and sort options.
            </summary>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetAttributes();
              var attributeCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.AttributeClient.GetAttributesClient(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Retrieves a paged list of attributes according to any specified filter criteria and sort options.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetAttributes( filter,  pageSize,  sortBy,  startIndex);
              var attributeCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.AttributeClient.GetAttributeClient(System.String)">
            <summary>
            Retrieves the details of the specified product attribute.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.Attribute"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetAttribute( attributeFQN);
              var attributeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.AttributeClient.AddAttributeClient(Mozu.Api.Contracts.ProductAdmin.Attribute)">
            <summary>
            Creates a new attribute to describe one aspect of a product such as color or size, based on its defined product type. The attribute name, attribute type, input type, and data type are required.
            </summary>
            <param name="attribute">Properties of the new product attribute to create.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.Attribute"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddAttribute( attribute);
              var attributeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.AttributeClient.UpdateAttributeClient(System.String,Mozu.Api.Contracts.ProductAdmin.Attribute)">
            <summary>
            Updates an existing attribute with attribute properties to set.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="attribute">Any properties of the attribute that to update.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.Attribute"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateAttribute( attributeFQN,  attribute);
              var attributeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.AttributeClient.DeleteAttributeClient(System.String)">
             <summary>
             Deletes a defined product attribute. You cannot delete an attribute assigned a value for a product.
             </summary>
             <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteAttribute( attributeFQN);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeTypeRuleClient">
            <summary>
            Type rules are subresources of product attributes which could be specifications that can be shared across products in a store or assigned to specific products. Attribute type rules provide definitions of how attribute types will appear on the user interface.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeTypeRuleClient.GetAttributeTypeRulesClient">
            <summary>
            Retrieves a list of attribute type rules according to optional filter criteria and sort options. Attribute type rules help drive the behavior of attributes on a storefront page.
            </summary>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeTypeRuleCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetAttributeTypeRules();
              var attributeTypeRuleCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeTypeRuleClient.GetAttributeTypeRulesClient(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Retrieves a list of attribute type rules according to optional filter criteria and sort options. Attribute type rules help drive the behavior of attributes on a storefront page.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeTypeRuleCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetAttributeTypeRules( filter,  pageSize,  sortBy,  startIndex);
              var attributeTypeRuleCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueClient">
            <summary>
            Vocabulary values are predefined for an attribute.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueClient.GetAttributeVocabularyValuesClient(System.String)">
            <summary>
            Retrieves a list of attribute vocabulary values. To target a query, use one or several valid optional response groups.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValue"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=GetAttributeVocabularyValues( attributeFQN);
              var attributeVocabularyValueClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueClient.GetAttributeVocabularyValueClient(System.String,System.String)">
            <summary>
            Retrieves an attribute vocabulary value by providing the attribute FQN and value.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="value">The actual unique value of the attribute vocabulary to retrieve. A single attribute must have a unique value and match the attribute's data type. If a string value returns null, the system will generate a value. The actual string content displayed shoud be stored as "Content" and actual content is required for string values.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValue"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetAttributeVocabularyValue( attributeFQN,  value);
              var attributeVocabularyValueClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueClient.AddAttributeVocabularyValueClient(System.String,Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValue)">
            <summary>
            Adds a new attribute vocabulary value.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="attributeVocabularyValue">The predefined vocabulary value to add to the attribute content.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValue"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddAttributeVocabularyValue( attributeFQN,  attributeVocabularyValue);
              var attributeVocabularyValueClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueClient.UpdateAttributeVocabularyValuesClient(System.String,System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValue})">
            <summary>
            Update existing vocabulary values for an attribute.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="vocabularyValues">The actual vocabulary values for the attribute being updated.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValue"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateAttributeVocabularyValues( attributeFQN,  vocabularyValues);
              var attributeVocabularyValueClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueClient.UpdateAttributeVocabularyValueClient(System.String,System.String,Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValue)">
            <summary>
            Updates existing attribute vocabulary values.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="value">The actual unique value of the attribute vocabulary value to update. A single attribute must have a unique value and match the attribute's data type. If a string value returns null, the system will generate a value. The actual string content displayed shoud be stored as "Content" and actual content is required for string values.</param>
            <param name="attributeVocabularyValue">The predefined vocabulary value to add to the attribute content to update.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValue"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateAttributeVocabularyValue( attributeFQN,  value,  attributeVocabularyValue);
              var attributeVocabularyValueClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueClient.DeleteAttributeVocabularyValueClient(System.String,System.String)">
             <summary>
             Deletes an attribute's vocabulary value.
             </summary>
             <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
             <param name="value">The actual unique value of the attribute vocabulary to delete. A single attribute must have a unique value and match the attribute's data type. If a string value returns null, the system will generate a value. The actual string content displayed shoud be stored as "Content" and actual content is required for string values.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteAttributeVocabularyValue( attributeFQN,  value);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.ProductTypeClient">
            <summary>
            Use the Product Types resource to manage the types for your product catalog. Product types act as configuration templates, which store a set of attributes common to all products associated with that type. Unlike categories, products can only be associated with a single product type.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.ProductTypeClient.GetProductTypesClient">
            <summary>
            Retrieves a list of product types according to any specified filter criteria and sort options.
            </summary>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductTypeCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetProductTypes();
              var productTypeCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.ProductTypeClient.GetProductTypesClient(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Retrieves a list of product types according to any specified filter criteria and sort options.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. You can filter product type search results by any of its properties. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=Name+cont+shoes"</param>
            <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductTypeCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetProductTypes( filter,  pageSize,  sortBy,  startIndex);
              var productTypeCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.ProductTypeClient.GetProductTypeClient(System.Int32)">
            <summary>
            Retrieves the details of the product type specified in the request.
            </summary>
            <param name="productTypeId">Identifier of the product type to retrieve.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductType"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetProductType( productTypeId);
              var productTypeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.ProductTypeClient.AddProductTypeClient(Mozu.Api.Contracts.ProductAdmin.ProductType)">
            <summary>
            Creates a new product type based on the information supplied in the request.
            </summary>
            <param name="productType">Properties of the product type to create.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductType"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddProductType( productType);
              var productTypeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.ProductTypeClient.UpdateProductTypeClient(System.Int32,Mozu.Api.Contracts.ProductAdmin.ProductType)">
            <summary>
            Updates one or more properties of a product type.
            </summary>
            <param name="productTypeId">Identifier of the product type to update.</param>
            <param name="productType">The details of the product type to update.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductType"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateProductType( productTypeId,  productType);
              var productTypeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.ProductTypeClient.DeleteProductTypeClient(System.Int32)">
             <summary>
             Deletes the product type by providing the product type ID.
             </summary>
             <param name="productTypeId">Identifier of the product type to delete.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteProductType( productTypeId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeExtraClient">
            <summary>
            Use the Extras subresource to define how a product attribute classified as an "extra" is used for a specific product type. Product attribute defintions are unique for each associated product type.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeExtraClient.GetExtrasClient(System.Int32)">
            <summary>
            Retrieves a list of extra attributes defined for the specified product type.
            </summary>
            <param name="productTypeId">Identifier of the product type.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=GetExtras( productTypeId);
              var attributeInProductTypeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeExtraClient.GetExtraClient(System.String,System.Int32)">
            <summary>
            Retrieves the details of an extra attribute definition for the specified product type.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productTypeId">Identifier of the product type whose extra is being retrieved.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetExtra( attributeFQN,  productTypeId);
              var attributeInProductTypeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeExtraClient.AddExtraClient(System.Int32,Mozu.Api.Contracts.ProductAdmin.AttributeInProductType)">
            <summary>
            Assigns a defined extra attribute to the product type based on the information supplied in the request.
            </summary>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="attributeInProductType">The properties of the extra attribute definition for this product type assignment.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddExtra( productTypeId,  attributeInProductType);
              var attributeInProductTypeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeExtraClient.UpdateExtraClient(System.String,System.Int32,Mozu.Api.Contracts.ProductAdmin.AttributeInProductType)">
            <summary>
            Update the definition of an extra attribute for the specified product type.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="attributeInProductType">The properties of the extra attribute definition to update for the product type.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateExtra( attributeFQN,  productTypeId,  attributeInProductType);
              var attributeInProductTypeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeExtraClient.DeleteExtraClient(System.String,System.Int32)">
             <summary>
             Removes an extra attribute definition from the specified product type.
             </summary>
             <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
             <param name="productTypeId">Identifier of the product type.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteExtra( attributeFQN,  productTypeId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeOptionClient">
            <summary>
            Use the Options subresource to define how an option attribute is used for a specific product type. Product attribute definitions are unique for each associated product type.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeOptionClient.GetOptionsClient(System.Int32)">
            <summary>
            Retrieves a list of option product attributes defined for the specified product type.
            </summary>
            <param name="productTypeId">Identifier of the product type to retrieve.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=GetOptions( productTypeId);
              var attributeInProductTypeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeOptionClient.GetOptionClient(System.String,System.Int32)">
            <summary>
            Retrieves the details of an option attribute defined for the specified product type.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productTypeId">The identifier of the product type.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetOption( attributeFQN,  productTypeId);
              var attributeInProductTypeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeOptionClient.AddOptionClient(System.Int32,Mozu.Api.Contracts.ProductAdmin.AttributeInProductType)">
            <summary>
            Assigns an option attribute to the product type based on the information supplied in the request.
            </summary>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="attributeInProductType">Properties of the option attribute to define for the specified product type.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddOption( productTypeId,  attributeInProductType);
              var attributeInProductTypeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeOptionClient.UpdateOptionClient(System.String,System.Int32,Mozu.Api.Contracts.ProductAdmin.AttributeInProductType)">
            <summary>
            Updates an option attribute definition for the specified product type.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="attributeInProductType">Properties of the option product attribute to define for the specified product type.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateOption( attributeFQN,  productTypeId,  attributeInProductType);
              var attributeInProductTypeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeOptionClient.DeleteOptionClient(System.String,System.Int32)">
             <summary>
             Removes an option attribute definition for the specified product type.
             </summary>
             <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
             <param name="productTypeId">Identifier of the product type.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteOption( attributeFQN,  productTypeId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypePropertyClient">
            <summary>
            Use the Properties subresource to define how property product attributes are used for a specific product type. Product attribute definitions are unique for each associated product type.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypePropertyClient.GetPropertiesClient(System.Int32)">
            <summary>
            Retrieves a list of product property attributes defined for a product type.
            </summary>
            <param name="productTypeId">Identifier of the product type.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=GetProperties( productTypeId);
              var attributeInProductTypeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypePropertyClient.GetPropertyClient(System.String,System.Int32)">
            <summary>
            Retrieves a product property attribute definition for the specified product type.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productTypeId">Identifier of the product type.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetProperty( attributeFQN,  productTypeId);
              var attributeInProductTypeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypePropertyClient.AddPropertyClient(System.Int32,Mozu.Api.Contracts.ProductAdmin.AttributeInProductType)">
            <summary>
            Assigns a property attribute to the specified product type, according to the information defined in the request.
            </summary>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="attributeInProductType">Properties of the property attribute to define for the specified product type.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddProperty( productTypeId,  attributeInProductType);
              var attributeInProductTypeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypePropertyClient.UpdatePropertyClient(System.String,System.Int32,Mozu.Api.Contracts.ProductAdmin.AttributeInProductType)">
            <summary>
            Updates the definition of a property attribute for the specified product type.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="attributeInProductType">Properties of the property attribute to define for the product type.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateProperty( attributeFQN,  productTypeId,  attributeInProductType);
              var attributeInProductTypeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypePropertyClient.DeletePropertyClient(System.String,System.Int32)">
             <summary>
             Removes a property attribute previously defined for the specified product type.
             </summary>
             <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
             <param name="productTypeId">Identifier of the product type.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteProperty( attributeFQN,  productTypeId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeVariationClient">
            <summary>
            Use the variations resource to preview possible product variations for a specific product type based on the option attributes defined for the product type, such as size or color.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeVariationClient.GenerateProductVariationsClient(System.Int32,System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.ProductOption})">
            <summary>
            Generates the variations possible for a product associated with the product type based on the option values supplied in the request.
            </summary>
            <param name="productTypeId">Unique identifier of the product type.</param>
            <param name="productOptionsIn">The product option attributes configured for this product type.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductVariationPagedCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GenerateProductVariations( productTypeId,  productOptionsIn);
              var productVariationPagedCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeVariationClient.GenerateProductVariationsClient(System.String,System.Nullable{System.Int32},System.String,System.Int32,System.String,System.Nullable{System.Int32},System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.ProductOption})">
            <summary>
            Generates the variations possible for a product associated with the product type based on the option values supplied in the request.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="productCode"></param>
            <param name="productTypeId">Unique identifier of the product type.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">Indicates the zero-based offset in the complete result set where the returned entities begin, when creating paged results from a query. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <param name="productOptionsIn">The product option attributes configured for this product type.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductVariationPagedCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GenerateProductVariations( filter,  pageSize,  productCode,  productTypeId,  sortBy,  startIndex,  productOptionsIn);
              var productVariationPagedCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Catalog.Admin.CategoryClient">
            <summary>
            Use the Categories resource to organize products and control where they appear on the storefront. Create and maintain a hierarchy of categories and subcategories where the site will store properties.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.CategoryClient.GetCategoriesClient">
            <summary>
            Retrieves a list of categories according to any specified filter criteria and sort options.
            </summary>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.CategoryPagedCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetCategories();
              var categoryPagedCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.CategoryClient.GetCategoriesClient(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Retrieves a list of categories according to any specified filter criteria and sort options.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. You can filter product category search results by any of its properties, including its position in the category hierarchy. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.CategoryPagedCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetCategories( filter,  pageSize,  sortBy,  startIndex);
              var categoryPagedCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.CategoryClient.GetCategoryClient(System.Int32)">
            <summary>
            Retrieves the details of a single category.
            </summary>
            <param name="categoryId">Unique identifier of the category to retrieve.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.Category"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetCategory( categoryId);
              var categoryClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.CategoryClient.GetChildCategoriesClient(System.Int32)">
            <summary>
            Retrieves the subcategories of a category. This is a list of subcategories at the same level (siblings). Use a list of siblings, for example, to display the categories in a horizontal list.
            </summary>
            <param name="categoryId">Unique identifier of the category whose subcategories are retrieved.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.CategoryCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetChildCategories( categoryId);
              var categoryCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.CategoryClient.AddCategoryClient(Mozu.Api.Contracts.ProductAdmin.Category)">
            <summary>
            Adds a new category to the site's category hierarchy. Specify a ParentCategoryID to determine where to locate the category in the hierarchy. If a ParentCategoryID is not specified, the new category becomes a top-level category.
            </summary>
            <param name="category">Properties of the new category. Required properties: ParentCategoryID and Content.Name.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.Category"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddCategory( category);
              var categoryClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.CategoryClient.UpdateCategoryClient(System.Int32,Mozu.Api.Contracts.ProductAdmin.Category)">
            <summary>
            Modifies a category such as moving it to another location in the category tree, or changing whether it is visible on the storefront. This PUT replaces the existing resource, so be sure to include all the information to maintain for the category.
            </summary>
            <param name="categoryId">Unique identifier of the category to modify.</param>
            <param name="category">Properties of the category to modify.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.Category"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateCategory( categoryId,  category);
              var categoryClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.CategoryClient.UpdateCategoryClient(System.Nullable{System.Boolean},System.Int32,Mozu.Api.Contracts.ProductAdmin.Category)">
            <summary>
            Modifies a category such as moving it to another location in the category tree, or changing whether it is visible on the storefront. This PUT replaces the existing resource, so be sure to include all the information to maintain for the category.
            </summary>
            <param name="cascadeVisibility">If true, when changing the display option for the category, change it for all subcategories also. Default: False.</param>
            <param name="categoryId">Unique identifier of the category to modify.</param>
            <param name="category">Properties of the category to modify.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.Category"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateCategory( cascadeVisibility,  categoryId,  category);
              var categoryClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.CategoryClient.DeleteCategoryByIdClient(System.Int32)">
             <summary>
             Deletes the category specified by its category ID.
             </summary>
             <param name="categoryId">Unique identifier of the category to delete.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteCategoryById( categoryId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.CategoryClient.DeleteCategoryByIdClient(System.Nullable{System.Boolean},System.Int32)">
             <summary>
             Deletes the category specified by its category ID.
             </summary>
             <param name="cascadeDelete">If true, any subcategories of a category are deleted when this category is deleted. Default: False.</param>
             <param name="categoryId">Unique identifier of the category to delete.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteCategoryById( cascadeDelete,  categoryId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Catalog.Admin.DiscountClient">
            <summary>
            Define and manage discounts to apply to products, product categories, or orders. The discounts can be a specified amount off the price, percentage off the price, or for free shipping. Create a coupon code that shoppers can use to redeem the discount.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.DiscountClient.GetDiscountsClient">
            <summary>
            Retrieves a list of discounts according to any specified filter criteria and sort options.
            </summary>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.DiscountCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetDiscounts();
              var discountCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.DiscountClient.GetDiscountsClient(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Retrieves a list of discounts according to any specified filter criteria and sort options.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.DiscountCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetDiscounts( filter,  pageSize,  sortBy,  startIndex);
              var discountCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.DiscountClient.GetDiscountClient(System.Int32)">
            <summary>
            Retrieves the details of a single discount.
            </summary>
            <param name="discountId">Unique identifier of the discount. System-supplied and read-only.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.Discount"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetDiscount( discountId);
              var discountClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.DiscountClient.GetDiscountContentClient(System.Int32)">
            <summary>
            Retrieves the localized content specified for the specified discount.
            </summary>
            <param name="discountId">Unique identifier of the discount. System-supplied and read-only.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.DiscountLocalizedContent"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetDiscountContent( discountId);
              var discountLocalizedContentClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.DiscountClient.GenerateRandomCouponClient">
            <summary>
            Generates a random code for a coupon.
            </summary>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{string}
            </returns>
            <example>
            <code>
              var mozuClient=GenerateRandomCoupon();
              var stringClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.DiscountClient.CreateDiscountClient(Mozu.Api.Contracts.ProductAdmin.Discount)">
            <summary>
            Creates a discount.
            </summary>
            <param name="discount">Properties of the discount to create. Required properties: Content.Name, AmountType, StartDate, and Target.Type.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.Discount"/>}
            </returns>
            <example>
            <code>
              var mozuClient=CreateDiscount( discount);
              var discountClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.DiscountClient.RedeemDiscountClient(Mozu.Api.Contracts.ProductAdmin.Discounts.Redemption)">
            <summary>
            Redeems a discount configured in the product admin.
            </summary>
            <param name="redemption">Properties of the product discount redemption.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.Discounts.Redemption"/>}
            </returns>
            <example>
            <code>
              var mozuClient=RedeemDiscount( redemption);
              var redemptionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.DiscountClient.UpdateDiscountClient(System.Int32,Mozu.Api.Contracts.ProductAdmin.Discount)">
            <summary>
            Modifies a discount.
            </summary>
            <param name="discountId">Unique identifier of the discount. System-supplied and read-only.</param>
            <param name="discount">Properties of the discount to update. Required properties: Content.Name, AmountType, StartDate, and Target.Type. Any unspecified properties are set to null and boolean variables are set to false.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.Discount"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateDiscount( discountId,  discount);
              var discountClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.DiscountClient.UpdateDiscountContentClient(System.Int32,Mozu.Api.Contracts.ProductAdmin.DiscountLocalizedContent)">
            <summary>
            Modifies the localized content for the specified discount. Rename the discount without modifying any other discount properties.
            </summary>
            <param name="discountId">Unique identifier of the discount. System-supplied and read-only.</param>
            <param name="content">New Name and/or LocaleCode. Properties of the content to update. Required property: Name.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.DiscountLocalizedContent"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateDiscountContent( discountId,  content);
              var discountLocalizedContentClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.DiscountClient.DeleteDiscountClient(System.Int32)">
             <summary>
             Deletes a discount specified by its discount ID.
             </summary>
             <param name="discountId">Unique identifier of the discount. System-supplied and read-only.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteDiscount( discountId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.DiscountClient.UnRedeemDiscountClient">
             <summary>
             Deletes a previous discount redemption from an order.
             </summary>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=UnRedeemDiscount();
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.DiscountClient.UnRedeemDiscountClient(System.Nullable{System.Int32},System.Nullable{System.Int32})">
             <summary>
             Deletes a previous discount redemption from an order.
             </summary>
             <param name="discountId">Unique identifier of the previously redeemed discount. System-supplied and read only.</param>
             <param name="orderNumber">The number of the order associated with the redeemed product discount.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=UnRedeemDiscount( discountId,  orderNumber);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Catalog.Admin.Discounts.DiscountTargetClient">
            <summary>
            Retrieves and modifies the products, categories, and shipping methods eligible for discounts in the form of a fixed dollar amount, percentage off a product price, or free shipping.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Discounts.DiscountTargetClient.GetDiscountTargetClient(System.Int32)">
            <summary>
            Retrieves the discount target, that is which products, categories, or shipping methods are eligible for the discount.
            </summary>
            <param name="discountId"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.DiscountTarget"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetDiscountTarget( discountId);
              var discountTargetClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Discounts.DiscountTargetClient.UpdateDiscountTargetClient(System.Int32,Mozu.Api.Contracts.ProductAdmin.DiscountTarget)">
            <summary>
            Modifies properties of the discount target, for example, the dollar amount, or precentage off the price.
            </summary>
            <param name="discountId">Unique identifier of the discount. System-supplied and read-only.</param>
            <param name="discountTarget">Properties of the discount target to modify. Required properties: Target.Type. Any unspecified properties are set to null and boolean variables to false.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.DiscountTarget"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateDiscountTarget( discountId,  discountTarget);
              var discountTargetClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Catalog.Admin.FacetClient">
            <summary>
            Use the Facets resource to manage the facets shoppers use to filter product display results on a storefront. Facets can include categories, product attributes, or prices, and use either a range of values or discrete values.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.FacetClient.GetFacetClient(System.Int32)">
            <summary>
            Retrieves a facet specified by its unique identifier and displays its properties.
            </summary>
            <param name="facetId">Unique identifier of the facet to retrieve.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.Facet"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetFacet( facetId);
              var facetClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.FacetClient.GetFacetClient(System.Int32,System.Nullable{System.Boolean})">
            <summary>
            Retrieves a facet specified by its unique identifier and displays its properties.
            </summary>
            <param name="facetId">Unique identifier of the facet to retrieve.</param>
            <param name="validate">Validates that the product category associated with a facet is active. System-supplied and read only.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.Facet"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetFacet( facetId,  validate);
              var facetClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.FacetClient.GetFacetCategoryListClient(System.Int32)">
            <summary>
            Retrieves a list of the facets defined for the specified category.
            </summary>
            <param name="categoryId">Unique identifier of the category associated with the facets to retrieve.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.FacetSet"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetFacetCategoryList( categoryId);
              var facetSetClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.FacetClient.GetFacetCategoryListClient(System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Retrieves a list of the facets defined for the specified category.
            </summary>
            <param name="categoryId">Unique identifier of the category associated with the facets to retrieve.</param>
            <param name="includeAvailable">If true, returns a list of the attributes and categories associated with a product type that have not been defined as a facet for the category.</param>
            <param name="validate">Validates that the product category associated with a facet is active. System-supplied and read only.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.FacetSet"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetFacetCategoryList( categoryId,  includeAvailable,  validate);
              var facetSetClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.FacetClient.AddFacetClient(Mozu.Api.Contracts.ProductAdmin.Facet)">
            <summary>
            Creates a new category, price, or attribute facet. Supply the category or attribute source to use for the facet values.
            </summary>
            <param name="facet">Properties of the new facet to create. Required properties: Source, FacetType, IsHidden, and CategoryId.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.Facet"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddFacet( facet);
              var facetClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.FacetClient.UpdateFacetClient(System.Int32,Mozu.Api.Contracts.ProductAdmin.Facet)">
            <summary>
            Modifies one or more properties of a defined facet.
            </summary>
            <param name="facetId">Unique identifier of the facet to modify.</param>
            <param name="facet">Properties of the defined facet to modify. Required properties: Source, FacetType, IsHidden, and CategoryId.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.Facet"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateFacet( facetId,  facet);
              var facetClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.FacetClient.DeleteFacetByIdClient(System.Int32)">
             <summary>
             Deletes the facet specified by its unique identifier.
             </summary>
             <param name="facetId">Unique identifier of the facet to delete.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteFacetById( facetId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Catalog.Admin.ProductClient">
            <summary>
            Use this resource to create products, view the attributes associated with existing products, and determine which sites feature a specific product.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.ProductClient.GetProductsClient">
            <summary>
            Retrieves a list of products according to any specified facets, filter criteria, and sort options.
            </summary>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetProducts();
              var productCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.ProductClient.GetProductsClient(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Retrieves a list of products according to any specified facets, filter criteria, and sort options.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="noCount">If true, the operation does not return the TotalCount number of results.</param>
            <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="q">A list of product search terms to use in the query when searching across product code and product name. Separate multiple search terms with a space character.</param>
            <param name="qLimit">The maximum number of search results to return in the response. You can limit any range between 1-100.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetProducts( filter,  noCount,  pageSize,  q,  qLimit,  sortBy,  startIndex);
              var productCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.ProductClient.GetProductClient(System.String)">
            <summary>
            Retrieves an existing product.
            </summary>
            <param name="productCode">Merchant-created code associated with the product such as a SKU. Max length: 30. Accepts a to z, A to Z, Ãƒâ€¹-ÃƒËœ, 0 to 9, #, semicolon, commas, apostrophes, and Spaces, but no punctuation or other characters.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.Product"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetProduct( productCode);
              var productClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.ProductClient.GetProductInSitesClient(System.String)">
            <summary>
            Retrieves a product that is associated with more than one specific site.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductInSiteInfo"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=GetProductInSites( productCode);
              var productInSiteInfoClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.ProductClient.GetProductInSiteClient(System.String,System.Int32)">
            <summary>
            Retrieves a product that is associated with a specific site ID.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="siteId"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductInSiteInfo"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetProductInSite( productCode,  siteId);
              var productInSiteInfoClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.ProductClient.AddProductClient(Mozu.Api.Contracts.ProductAdmin.Product)">
            <summary>
            Creates a new product. Supply a product name, product code, price and other product characteristics such as its attributes, categories where the product belongs, whether the product has configurable options, stand-alone options, and so on.
            </summary>
            <param name="product">Properties of the new product. Required properties: ProductCode, Content.ProductName, and Price.ListPrice.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.Product"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddProduct( product);
              var productClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.ProductClient.AddProductInSiteClient(System.String,Mozu.Api.Contracts.ProductAdmin.ProductInSiteInfo)">
            <summary>
            Creates a new product and assigns it to a specific site.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="productInSiteInfoIn">Creates a new product to associate with a site by updating the properties of that product by product ID.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductInSiteInfo"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddProductInSite( productCode,  productInSiteInfoIn);
              var productInSiteInfoClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.ProductClient.UpdateProductStockClient(System.String,Mozu.Api.Contracts.ProductAdmin.StockOnHandAdjustment)">
            <summary>
            Updates the inventory for an existing product. The inventory or stock adjustment value is either an absolute number (number of items in stock) or Delta (the number to subtract from or add to the current number of items in stock).
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="stockAdjustment">Inventory adjustment for the product. Must supply Type (either Absolute or Delta) and Value (number of items to adjust). If Delta, specify a negative number to subtract inventory.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.Product"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateProductStock( productCode,  stockAdjustment);
              var productClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.ProductClient.UpdateProductClient(System.String,Mozu.Api.Contracts.ProductAdmin.Product)">
            <summary>
            Modifies an existing product.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="product">Properties of the product to update. Required properties: ProductCode, Content.ProductName, and Price.ListPrice.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.Product"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateProduct( productCode,  product);
              var productClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.ProductClient.UpdateProductInSitesClient(System.String,System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.ProductInSiteInfo})">
            <summary>
            Modifies an existing product that is associated with more than one specific site. For example, to link an existing product that is already associated to a site to another site, use this operation to create that association.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="productInSitesIn">Modifies an existing product associated with more than one site by updating the properties of that product by product ID.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductInSiteInfo"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateProductInSites( productCode,  productInSitesIn);
              var productInSiteInfoClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.ProductClient.UpdateProductInSiteClient(System.String,System.Int32,Mozu.Api.Contracts.ProductAdmin.ProductInSiteInfo)">
            <summary>
            Modifies an existing product associated with a specific site ID.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="siteId"></param>
            <param name="productInSiteInfoIn">Modifies an existing product associated with a site by updating the properties of that product by product ID.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductInSiteInfo"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateProductInSite( productCode,  siteId,  productInSiteInfoIn);
              var productInSiteInfoClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.ProductClient.DeleteProductClient(System.String)">
             <summary>
             Deletes the product specified by its product code.
             </summary>
             <param name="productCode">Merchant-created code associated with the product such as a SKU.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteProduct( productCode);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.ProductClient.DeleteProductInSiteClient(System.String,System.Int32)">
             <summary>
             Deletes the product specified by its product code and based on the site it has been associated with.
             </summary>
             <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
             <param name="siteId"></param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteProductInSite( productCode,  siteId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Catalog.Admin.ProductReservationClient">
            <summary>
            Temporarily hold a product from inventory while a shopper is filling out payment information. Create a product reservation when a shopper proceeds to check out and then release the reservation when the order process is complete.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.ProductReservationClient.GetProductReservationsClient">
            <summary>
            Retrieves a list of product reservations according to any specified filter criteria and sort options.
            </summary>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductReservationCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetProductReservations();
              var productReservationCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.ProductReservationClient.GetProductReservationsClient(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Retrieves a list of product reservations according to any specified filter criteria and sort options.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductReservationCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetProductReservations( filter,  pageSize,  sortBy,  startIndex);
              var productReservationCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.ProductReservationClient.GetProductReservationClient(System.Int32)">
            <summary>
            Retrieves the details of a product reservation.
            </summary>
            <param name="productReservationId">Unique identifier of the product reservation.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductReservation"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetProductReservation( productReservationId);
              var productReservationClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.ProductReservationClient.AddProductReservationClient(Mozu.Api.Contracts.ProductAdmin.ProductReservation)">
            <summary>
            Creates a new product reservation for a product. This action places a hold on the product inventory for the quantity specified during the ordering process.
            </summary>
            <param name="productReservation">Properties of the product reservation.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductReservation"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddProductReservation( productReservation);
              var productReservationClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.ProductReservationClient.CommitReservationClient(System.Int32,System.Int32)">
             <summary>
             Commits a product reservation to decrement the product's inventory by the quantity specified then release the reservation once the order process completed successfully.
             </summary>
             <param name="productReservationId">Unique identifier of the reservation.</param>
             <param name="qty">Number of product items to remove from inventory.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=CommitReservation( productReservationId,  qty);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.ProductReservationClient.UpdateProductReservationClient(System.Int32,Mozu.Api.Contracts.ProductAdmin.ProductReservation)">
            <summary>
            Updates an existing product reservation for a product. 
            </summary>
            <param name="productReservationId">Unique identifier of the product reservation to update. </param>
            <param name="productReservation">Properties of the product reservation to update. </param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductReservation"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateProductReservation( productReservationId,  productReservation);
              var productReservationClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.ProductReservationClient.DeleteProductReservationClient(System.Int32)">
             <summary>
             Deletes a product reservation. For example, delete a reservation when an order is not processed to return the product quantity back to inventory.
             </summary>
             <param name="productReservationId">Unique identifier of the reservation.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteProductReservation( productReservationId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductExtraClient">
            <summary>
            Use the Extras resource to configure an extra product attribute for products associated with the product type that uses the extra attribute.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductExtraClient.GetExtrasClient(System.String)">
            <summary>
            Retrieves a list of extras configured for the product according to any defined filter and sort criteria.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductExtra"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=GetExtras( productCode);
              var productExtraClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductExtraClient.GetExtraClient(System.String,System.String)">
            <summary>
            Retrieves the details of an extra attribute configuration for the product specified in the request.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductExtra"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetExtra( attributeFQN,  productCode);
              var productExtraClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductExtraClient.AddExtraClient(System.String,Mozu.Api.Contracts.ProductAdmin.ProductExtra)">
            <summary>
            Configure an extra attribute for the product specified in the request.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="productExtra">Properties of the product extra to configure for the specified product.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductExtra"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddExtra( productCode,  productExtra);
              var productExtraClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductExtraClient.UpdateExtraClient(System.String,System.String,Mozu.Api.Contracts.ProductAdmin.ProductExtra)">
            <summary>
            Updates the configuration of an extra attribute for the product specified in the request.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="productExtra">Properties of the extra attribute to update for the specified product.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductExtra"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateExtra( attributeFQN,  productCode,  productExtra);
              var productExtraClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductExtraClient.DeleteExtraClient(System.String,System.String)">
             <summary>
             Delete a product extra configuration for the product specified in the request.
             </summary>
             <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
             <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteExtra( attributeFQN,  productCode);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductOptionClient">
            <summary>
            Use the Options resource to configure the option attributes and vocabulary values for an individual product associated with the product type that uses the option attribute. Options are used to generate variations of a product.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductOptionClient.GetOptionsClient(System.String)">
            <summary>
            Retrieves a list of all option attributes configured for the product specified in the request.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductOption"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=GetOptions( productCode);
              var productOptionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductOptionClient.GetOptionClient(System.String,System.String)">
            <summary>
            Retrieves the details of an option attribute configuration for the specified product.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductOption"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetOption( attributeFQN,  productCode);
              var productOptionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductOptionClient.AddOptionClient(System.String,Mozu.Api.Contracts.ProductAdmin.ProductOption)">
            <summary>
            Configures an option attribute for the product specified in the request.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="productOption">Properties of the option attribute to define for the product.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductOption"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddOption( productCode,  productOption);
              var productOptionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductOptionClient.UpdateOptionClient(System.String,System.String,Mozu.Api.Contracts.ProductAdmin.ProductOption)">
            <summary>
            Updates one or more properties of an option attribute configured for a product.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="productOption">Properties of the product option attribute configuration to update.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductOption"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateOption( attributeFQN,  productCode,  productOption);
              var productOptionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductOptionClient.DeleteOptionClient(System.String,System.String)">
             <summary>
             Deletes the configuration of an option attribute for the product specified in the request.
             </summary>
             <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
             <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteOption( attributeFQN,  productCode);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductPropertyClient">
            <summary>
            Use the Properties resource to configure a property attribute for an individual product associated with a product type that uses the property attribute, as well as set property values for the product.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductPropertyClient.GetPropertiesClient(System.String)">
            <summary>
            Retrieves a list of the property attributes configured for the product specified in the request.
            </summary>
            <param name="productCode"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductProperty"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=GetProperties( productCode);
              var productPropertyClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductPropertyClient.GetPropertyClient(System.String,System.String)">
            <summary>
            Retrieves the details of a property attribute configuration for the product specified in the request.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productCode"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductProperty"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetProperty( attributeFQN,  productCode);
              var productPropertyClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductPropertyClient.AddPropertyClient(System.String,Mozu.Api.Contracts.ProductAdmin.ProductProperty)">
            <summary>
            Configures a property attribute for the product specified in the request.
            </summary>
            <param name="productCode"></param>
            <param name="productProperty">Properties of the property attribute to configure for a product.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductProperty"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddProperty( productCode,  productProperty);
              var productPropertyClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductPropertyClient.UpdatePropertyClient(System.String,System.String,Mozu.Api.Contracts.ProductAdmin.ProductProperty)">
            <summary>
            Update one or more details of a property attribute configuration for the product specified in the request.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productCode"></param>
            <param name="productProperty">Details of the property attribute to update for the product configuration.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductProperty"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateProperty( attributeFQN,  productCode,  productProperty);
              var productPropertyClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductPropertyClient.DeletePropertyClient(System.String,System.String)">
             <summary>
             Deletes the configuration of a property attribute for the product specified in the request.
             </summary>
             <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
             <param name="productCode"></param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteProperty( attributeFQN,  productCode);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductVariationClient">
            <summary>
            Use the product variations sub-resource to manage the variations of a product based on its attributes. For example, a t-shirt product could be offered in six variations: Small Black, Medium Black, Large Black, Small White, Medium White, and Large White.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductVariationClient.GetProductVariationClient(System.String,System.String)">
            <summary>
            Retrieves the details of a product variation based on the supplied product code and variation key.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="variationKey">System-generated key that represents the attribute values that uniquely identify a specific product variation.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductVariation"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetProductVariation( productCode,  variationKey);
              var productVariationClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductVariationClient.GetProductVariationsClient(System.String)">
            <summary>
            Retrieves a list of the product variations configured for the specified product code.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductVariationPagedCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetProductVariations( productCode);
              var productVariationPagedCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductVariationClient.GetProductVariationsClient(System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Retrieves a list of the product variations configured for the specified product code.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">Indicates the zero-based offset in the complete result set where the returned entities begin, when creating paged results from a query. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductVariationPagedCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetProductVariations( filter,  pageSize,  productCode,  sortBy,  startIndex);
              var productVariationPagedCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductVariationClient.UpdateProductVariationsClient(System.String,Mozu.Api.Contracts.ProductAdmin.ProductVariationCollection)">
            <summary>
            Modifies the collection of variations for the specified product code. Because this PUT replaces the existing resource, supply all information necessary to maintain for the product variation.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="productVariations">Wrapper for the collection of variations configured for the specified product code.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductVariationCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateProductVariations( productCode,  productVariations);
              var productVariationCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductVariationClient.UpdateProductVariationClient(System.String,System.String,Mozu.Api.Contracts.ProductAdmin.ProductVariation)">
            <summary>
            Modifies the details of a variation, based on the supplied variation key, for the specified product code.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="variationKey">System-generated key that represents the attribute values that uniquely identify a specific product variation.</param>
            <param name="productVariation">Wrapper for the properties of the specified product variation.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductVariation"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateProductVariation( productCode,  variationKey,  productVariation);
              var productVariationClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductVariationClient.DeleteProductVariationClient(System.String,System.String)">
             <summary>
             Deletes a variation, based on the supplied variation key, for the specified product code.
             </summary>
             <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
             <param name="variationKey">System-generated key that represents the attribute values that uniquely identify a specific product variation.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteProductVariation( productCode,  variationKey);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Catalog.Admin.PublishingScopeClient">
            <summary>
            
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.PublishingScopeClient.DiscardDraftsClient(Mozu.Api.Contracts.ProductAdmin.PublishingScope)">
             <summary>
             
             </summary>
             <param name="publishScope"></param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DiscardDrafts( publishScope);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.PublishingScopeClient.PublishDraftsClient(Mozu.Api.Contracts.ProductAdmin.PublishingScope)">
             <summary>
             
             </summary>
             <param name="publishScope"></param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=PublishDrafts( publishScope);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Catalog.Admin.Shipping.Global.GlobalCarrierClient">
            <summary>
            Use the carriers subresource to retrieve shipping service types for shipping carriers.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Shipping.Global.GlobalCarrierClient.GetServiceTypesClient(System.String,System.String)">
            <summary>
            Retrieve a list of shipping service types for the specified carrier. For example, service types for UPS might include UPS Ground, UPS 2-Day Air, or UPS Overnight Express.
            </summary>
            <param name="carrierId">Unique identifier of the shipping carrier.</param>
            <param name="localeCode">Language used for the entity. Currently, only "en-US" is supported.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.ShippingAdmin.ServiceType"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=GetServiceTypes( carrierId,  localeCode);
              var serviceTypeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Catalog.Admin.Shipping.Instance.InstanceCarrierClient">
            <summary>
            Configure the shipping carrier for the site.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Shipping.Instance.InstanceCarrierClient.GetConfigurationsClient">
            <summary>
            Retrieves a list of carrier configurations according to any specified filter criteria and sort options.
            </summary>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ShippingAdmin.CarrierConfigurationCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetConfigurations();
              var carrierConfigurationCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Shipping.Instance.InstanceCarrierClient.GetConfigurationsClient(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Retrieves a list of carrier configurations according to any specified filter criteria and sort options.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ShippingAdmin.CarrierConfigurationCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetConfigurations( filter,  pageSize,  sortBy,  startIndex);
              var carrierConfigurationCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Shipping.Instance.InstanceCarrierClient.GetConfigurationClient(System.String)">
            <summary>
            Retrieves the carrier configuration for a specific site by providing the carrier ID.
            </summary>
            <param name="carrierId">Identifier of the shipping carrier associated with the configuration details to retrieve.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ShippingAdmin.CarrierConfiguration"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetConfiguration( carrierId);
              var carrierConfigurationClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Shipping.Instance.InstanceCarrierClient.CreateConfigurationClient(System.String,Mozu.Api.Contracts.ShippingAdmin.CarrierConfiguration)">
            <summary>
            Create a new carrier configuration for the site.
            </summary>
            <param name="carrierId">Identifier of the carrier configuration being created.</param>
            <param name="carrierConfiguration">The properties of the carrier configuration to create.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ShippingAdmin.CarrierConfiguration"/>}
            </returns>
            <example>
            <code>
              var mozuClient=CreateConfiguration( carrierId,  carrierConfiguration);
              var carrierConfigurationClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Shipping.Instance.InstanceCarrierClient.UpdateConfigurationClient(System.String,Mozu.Api.Contracts.ShippingAdmin.CarrierConfiguration)">
            <summary>
            Update and existing shipping carrier configuration.
            </summary>
            <param name="carrierId">Identifier of the shipping carrier configuration to update.</param>
            <param name="carrierConfiguration">The properties of the shipping carrier configuration to update.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ShippingAdmin.CarrierConfiguration"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateConfiguration( carrierId,  carrierConfiguration);
              var carrierConfigurationClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Shipping.Instance.InstanceCarrierClient.DeleteConfigurationClient(System.String)">
             <summary>
             Delete the shipping carrier for the site.
             </summary>
             <param name="carrierId">Identifier of the specific shipping carrier to delete.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteConfiguration( carrierId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Catalog.Admin.SiteGroupClient">
            <summary>
            
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.SiteGroupClient.GetSiteGroupsClient">
            <summary>
            
            </summary>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.SiteGroupCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetSiteGroups();
              var siteGroupCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.SiteGroupClient.GetSiteGroupClient(System.Int32)">
            <summary>
            
            </summary>
            <param name="siteGroupId"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.SiteGroup"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetSiteGroup( siteGroupId);
              var siteGroupClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.SiteGroupClient.UpdateSiteGroupClient(System.Int32,Mozu.Api.Contracts.ProductAdmin.SiteGroup)">
            <summary>
            
            </summary>
            <param name="siteGroupId"></param>
            <param name="siteGroup"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.SiteGroup"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateSiteGroup( siteGroupId,  siteGroup);
              var siteGroupClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Catalog.Storefront.CategoryClient">
            <summary>
            Get the product category hierarchy as it appears to shoppers who are browsing the storefront. The hierarchy can be returned as a flat list or as a category tree.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Storefront.CategoryClient.GetCategoriesClient">
            <summary>
            Retrieves a list of categories according to any specified filter criteria and sort options.
            </summary>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductRuntime.CategoryPagedCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetCategories();
              var categoryPagedCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Storefront.CategoryClient.GetCategoriesClient(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Retrieves a list of categories according to any specified filter criteria and sort options.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. You can filter product category search results by any of its properties, including its position in the category hierarchy. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). <b>For example - "filter=IsDisplayed+eq+true"</b></param>
            <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductRuntime.CategoryPagedCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetCategories( filter,  pageSize,  sortBy,  startIndex);
              var categoryPagedCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Storefront.CategoryClient.GetCategoryClient(System.Int32)">
            <summary>
            Retrieves the details of a single category.
            </summary>
            <param name="categoryId">Unique identifier for the storefront container used to organize products.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductRuntime.Category"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetCategory( categoryId);
              var categoryClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Storefront.CategoryClient.GetCategoryClient(System.Nullable{System.Boolean},System.Int32)">
            <summary>
            Retrieves the details of a single category.
            </summary>
            <param name="allowInactive">If true, allow inactive categories to be retrieved in the category list response. If false, the categories retrieved will not include ones marked inactive.</param>
            <param name="categoryId">Unique identifier for the storefront container used to organize products.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductRuntime.Category"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetCategory( allowInactive,  categoryId);
              var categoryClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Storefront.CategoryClient.GetCategoryTreeClient">
            <summary>
            Retrieves the list of product categories that appear on the storefront organized in a hierarchical format. Hidden categories do not appear in the list.
            </summary>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductRuntime.CategoryCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetCategoryTree();
              var categoryCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Catalog.Storefront.ProductClient">
            <summary>
            Manage shoppers' product selection process during a visit to the storefront. Update product options as shoppers pick and choose their product choices. A shopper can't add a product to a cart until all of its required options have been selected.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Storefront.ProductClient.GetProductsClient">
            <summary>
            Retrieves a list of products that appear on the storefront according to any specified filter criteria and sort options. A set of filter expressions representing the search parameters for a query.
            </summary>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductRuntime.ProductCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetProducts();
              var productCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Storefront.ProductClient.GetProductsClient(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Retrieves a list of products that appear on the storefront according to any specified filter criteria and sort options. A set of filter expressions representing the search parameters for a query.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductRuntime.ProductCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetProducts( filter,  pageSize,  sortBy,  startIndex);
              var productCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Storefront.ProductClient.GetProductClient(System.String)">
            <summary>
            Retrieves information about a single product given its product code.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductRuntime.Product"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetProduct( productCode);
              var productClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Storefront.ProductClient.GetProductClient(System.Nullable{System.Boolean},System.String,System.String)">
            <summary>
            Retrieves information about a single product given its product code.
            </summary>
            <param name="allowInactive">If true, returns an inactive product as part of the query.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="variationProductCode">Merchant-created code associated with a specific product variation. Variation product codes maintain an association with the base product code.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductRuntime.Product"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetProduct( allowInactive,  productCode,  variationProductCode);
              var productClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Storefront.ProductClient.ConfiguredProductClient(System.String,Mozu.Api.Contracts.ProductRuntime.ProductOptionSelections)">
            <summary>
            Creates a new product selection. A create occurs each time a shopper selects a product option as they configure a product. Once all the required product options are configured, the product can be added to a cart.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="productOptionSelections">For a product with shopper-configurable options, the properties of the product options selected by the shopper.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductRuntime.ConfiguredProduct"/>}
            </returns>
            <example>
            <code>
              var mozuClient=ConfiguredProduct( productCode,  productOptionSelections);
              var configuredProductClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Storefront.ProductClient.ConfiguredProductClient(System.Nullable{System.Boolean},System.String,Mozu.Api.Contracts.ProductRuntime.ProductOptionSelections)">
            <summary>
            Creates a new product selection. A create occurs each time a shopper selects a product option as they configure a product. Once all the required product options are configured, the product can be added to a cart.
            </summary>
            <param name="includeOptionDetails">If true, the response returns details about the product. If false, returns a product summary such as the product name, price, and sale price.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="productOptionSelections">For a product with shopper-configurable options, the properties of the product options selected by the shopper.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductRuntime.ConfiguredProduct"/>}
            </returns>
            <example>
            <code>
              var mozuClient=ConfiguredProduct( includeOptionDetails,  productCode,  productOptionSelections);
              var configuredProductClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Storefront.ProductClient.ValidateProductClient(System.String,Mozu.Api.Contracts.ProductRuntime.ProductOptionSelections)">
            <summary>
            Validate the final state of shopper-selected options.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="productOptionSelections">For a product with shopper-configurable options, the properties of the product options selected by the shopper.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductRuntime.ProductValidationSummary"/>}
            </returns>
            <example>
            <code>
              var mozuClient=ValidateProduct( productCode,  productOptionSelections);
              var productValidationSummaryClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Catalog.Storefront.ProductSearchResultClient">
            <summary>
            Provide dynamic search results to shoppers as they browse and search for products on the storefront. Suggest possible search terms as the shopper enters text.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Storefront.ProductSearchResultClient.SearchClient">
            <summary>
            Searches the categories displayed on the storefront for products or product options that the shopper types in a search query.
            </summary>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductRuntime.ProductSearchResult"/>}
            </returns>
            <example>
            <code>
              var mozuClient=Search();
              var productSearchResultClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Storefront.ProductSearchResultClient.SearchClient(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Searches the categories displayed on the storefront for products or product options that the shopper types in a search query.
            </summary>
            <param name="facet">Individually list the facet fields you want to display in a storefront product search.</param>
            <param name="facetFieldRangeQuery">Display a range facet not specified in a template in a storefront product search by listing the facet field and the range to display.</param>
            <param name="facetHierDepth">If filtering using category facets in a hierarchy, the number of category hierarchy levels to return for the facet. This option is only available for category facets.</param>
            <param name="facetHierPrefix">If filtering using category facets in a hierarchy, the parent categories you want to skip in the storefront product search. This parameter is only available for category facets.</param>
            <param name="facetHierValue">If filtering using category facets in a hierarchy, the category in the hierarchy to begin faceting on. This parameter is only available for category facets.</param>
            <param name="facetPageSize">The number of facet values to return for one or more facets.</param>
            <param name="facetSettings">Settings reserved for future facet search functionality on a storefront product search.</param>
            <param name="facetStartIndex">When paging through multiple facets, the startIndex value for each facet.</param>
            <param name="facetTemplate">The facet template to use on the storefront. A template displays all facets associated with the template on the storefront product search. Currently, only category-level facet templates are available.</param>
            <param name="facetTemplateSubset">Display a subset of the facets defined in the template specified in facetTemplate parameter.</param>
            <param name="facetValueFilter">The facet values to apply to the filter.</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. You can filter product search results by any of its properties, including product code, type, category, and name. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). <b>For example - "filter=categoryId+eq+12"</b></param>
            <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="query">The terms to search on.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductRuntime.ProductSearchResult"/>}
            </returns>
            <example>
            <code>
              var mozuClient=Search( facet,  facetFieldRangeQuery,  facetHierDepth,  facetHierPrefix,  facetHierValue,  facetPageSize,  facetSettings,  facetStartIndex,  facetTemplate,  facetTemplateSubset,  facetValueFilter,  filter,  pageSize,  query,  sortBy,  startIndex);
              var productSearchResultClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Storefront.ProductSearchResultClient.SuggestClient">
            <summary>
            Suggests possible search terms as the shopper enters search text.
            </summary>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductRuntime.SearchSuggestion"/>}
            </returns>
            <example>
            <code>
              var mozuClient=Suggest();
              var searchSuggestionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Storefront.ProductSearchResultClient.SuggestClient(System.Nullable{System.Int32},System.String)">
            <summary>
            Suggests possible search terms as the shopper enters search text.
            </summary>
            <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="q">Text that the shopper is currently entering.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductRuntime.SearchSuggestion"/>}
            </returns>
            <example>
            <code>
              var mozuClient=Suggest( pageSize,  q);
              var searchSuggestionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Customer.Accounts.CardClient">
            <summary>
            Use the Cards subresource to manage stored credit cards for customer accounts. Mozu stores limited card data in the Customer service for expedited ordering purposes; however, the complete card data is stored in the Payment service.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.Accounts.CardClient.GetAccountCardsClient(System.Int32)">
            <summary>
            Retrieves all stored credit cards for the customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.CardCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetAccountCards( accountId);
              var cardCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.Accounts.CardClient.AddAccountCardClient(System.Int32,Mozu.Api.Contracts.Customer.Card)">
            <summary>
            Creates a new credit card record and stores it for the customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="card">Properties of the customer credit card to add to the account.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.Card"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddAccountCard( accountId,  card);
              var cardClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.Accounts.CardClient.UpdateAccountCardClient(System.Int32,Mozu.Api.Contracts.Customer.Card)">
            <summary>
            Update one or more properties of a credit card defined for a customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="card">Properties of the customer account credit card to update.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.Card"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateAccountCard( accountId,  card);
              var cardClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.Accounts.CardClient.DeleteAccountCardClient(System.Int32,System.String)">
             <summary>
             Removes a stored credit card from a customer account.
             </summary>
             <param name="accountId">Unique identifier of the customer account.</param>
             <param name="cardId">Unique identifier of the credit card to delete.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteAccountCard( accountId,  cardId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Customer.Accounts.CustomerAttributeClient">
            <summary>
            Mozu customers and merchants can create, view, update, and delete attributes for a customer account.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.Accounts.CustomerAttributeClient.GetAccountAttributeClient(System.Int32,System.Int32)">
            <summary>
            Retrieves the contents of an attribute associated with the specified customer account.
            </summary>
            <param name="accountId">Identifier of the customer account associated with the attribute to retrieve.</param>
            <param name="attributeId">Identifier of the customer account attribute to retrieve.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.CustomerAttribute"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetAccountAttribute( accountId,  attributeId);
              var customerAttributeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.Accounts.CustomerAttributeClient.GetAccountAttributesClient(System.Int32)">
            <summary>
            Retrieves the list of customer account attributes.
            </summary>
            <param name="accountId">Identifier of the customer account associated with the attributes to retrieve.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.CustomerAttributeCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetAccountAttributes( accountId);
              var customerAttributeCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.Accounts.CustomerAttributeClient.GetAccountAttributesClient(System.Int32,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Retrieves the list of customer account attributes.
            </summary>
            <param name="accountId">Identifier of the customer account associated with the attributes to retrieve.</param>
            <param name="filter"></param>
            <param name="pageSize"></param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.CustomerAttributeCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetAccountAttributes( accountId,  filter,  pageSize,  sortBy,  startIndex);
              var customerAttributeCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.Accounts.CustomerAttributeClient.AddAccountAttributesClient(System.Int32,System.Collections.Generic.List{Mozu.Api.Contracts.Customer.CustomerAttribute})">
            <summary>
            Adds a new attribute to associate with the specified customer account.
            </summary>
            <param name="accountId">Identifier of the customer account associated with the new attribute.</param>
            <param name="customerAccountAttributes">The properties of the customer account attribute to create.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.Customer.CustomerAttribute"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=AddAccountAttributes( accountId,  customerAccountAttributes);
              var customerAttributeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.Accounts.CustomerAttributeClient.UpdateAccountAttributeClient(System.Int32,System.Collections.Generic.List{Mozu.Api.Contracts.Customer.CustomerAttribute})">
            <summary>
            Update a single customer account attribute by providing the customer account ID. This operation can optionally indicate whether or not items missing from the collection should be removed.
            </summary>
            <param name="accountId">Identifier of the customer account associated with the attribute.</param>
            <param name="customerAccountAttribute">The properties of the customer account attribute being updated.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.Customer.CustomerAttribute"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateAccountAttribute( accountId,  customerAccountAttribute);
              var customerAttributeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.Accounts.CustomerAttributeClient.UpdateAccountAttributeClient(System.Int32,System.Nullable{System.Boolean},System.Collections.Generic.List{Mozu.Api.Contracts.Customer.CustomerAttribute})">
            <summary>
            Update a single customer account attribute by providing the customer account ID. This operation can optionally indicate whether or not items missing from the collection should be removed.
            </summary>
            <param name="accountId">Identifier of the customer account associated with the attribute.</param>
            <param name="removeMissing">If true, remove the items missing from the collection. If false, do not remove items missing from the collection.</param>
            <param name="customerAccountAttribute">The properties of the customer account attribute being updated.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.Customer.CustomerAttribute"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateAccountAttribute( accountId,  removeMissing,  customerAccountAttribute);
              var customerAttributeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Customer.Accounts.CustomerContactClient">
            <summary>
            Merchants and customers can create, view, update, and delete a contact for a customer account. A customer account may have multiple contacts for billing and shipping addresses.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.Accounts.CustomerContactClient.GetAccountContactClient(System.Int32,System.Int32)">
            <summary>
            Retrieves the specified contact for a customer account such as a billing or shipping contact.
            </summary>
            <param name="accountId">Unique identifier of the customer account whose contact information is being retrieved.</param>
            <param name="contactId">Unique identifier of the customer account contact to retrieve.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.CustomerContact"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetAccountContact( accountId,  contactId);
              var customerContactClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.Accounts.CustomerContactClient.GetAccountContactsClient(System.Int32)">
            <summary>
            Retrieves a list of contacts for a customer according to any specified filter criteria and sort options.
            </summary>
            <param name="accountId">Unique identifier of the customer account associated with the contact information to retrieve.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.CustomerContactCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetAccountContacts( accountId);
              var customerContactCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.Accounts.CustomerContactClient.GetAccountContactsClient(System.Int32,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Retrieves a list of contacts for a customer according to any specified filter criteria and sort options.
            </summary>
            <param name="accountId">Unique identifier of the customer account associated with the contact information to retrieve.</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.CustomerContactCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetAccountContacts( accountId,  filter,  pageSize,  sortBy,  startIndex);
              var customerContactCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.Accounts.CustomerContactClient.AddAccountContactClient(System.Int32,Mozu.Api.Contracts.Customer.CustomerContact)">
            <summary>
            Creates a new contact for a customer account such as a new shipping address.
            </summary>
            <param name="accountId">Unique identifier of the customer account containing the new contact.</param>
            <param name="contact">Properties of the new contact. Required properties: Contact.Email, ContactType.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.CustomerContact"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddAccountContact( accountId,  contact);
              var customerContactClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.Accounts.CustomerContactClient.UpdateAccountContactClient(System.Int32,System.Int32,Mozu.Api.Contracts.Customer.CustomerContact)">
            <summary>
            Updates a contact for a specified customer account such as to update addresses or change which contact is the primary contact for billing.
            </summary>
            <param name="accountId">Unique identifier of the customer account whose contact information is being updated.</param>
            <param name="contactId">Unique identifer of the customer account contact being updated.</param>
            <param name="contact">All properties the updated contact will have. Required properties: Name and email address.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.CustomerContact"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateAccountContact( accountId,  contactId,  contact);
              var customerContactClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.Accounts.CustomerContactClient.DeleteAccountContactClient(System.Int32,System.Int32)">
             <summary>
             Deletes a contact for the specified customer account.
             </summary>
             <param name="accountId">Unique identifier of the customer account.</param>
             <param name="contactId">Unique identifier of the customer account contact to delete.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteAccountContact( accountId,  contactId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Customer.Accounts.CustomerGroupClient">
            <summary>
            Use the groups subresource to manage customer accounts in groups. The groups are useful to manage sets of customers. A customer account can belong to several groups or none at all.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.Accounts.CustomerGroupClient.GetAccountGroupsClient(System.Int32)">
            <summary>
            Retrieve a list of customer groups associated with the customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.CustomerGroupCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetAccountGroups( accountId);
              var customerGroupCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.Accounts.CustomerGroupClient.GetAccountGroupsClient(System.Int32,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Retrieve a list of customer groups associated with the customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.CustomerGroupCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetAccountGroups( accountId,  filter,  pageSize,  sortBy,  startIndex);
              var customerGroupCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.Accounts.CustomerGroupClient.GetAccountGroupClient(System.Int32,System.Int32)">
            <summary>
            Retrieves details of a customer account in a group.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="groupId">Unique identifier of the customer group.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.CustomerGroup"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetAccountGroup( accountId,  groupId);
              var customerGroupClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.Accounts.CustomerGroupClient.AddAccountGroupClient(System.Int32,System.Int32)">
            <summary>
            Adds a customer account to a group.
            </summary>
            <param name="accountId">Unique identifier of the customer account to add to a group.</param>
            <param name="groupId">Unique identifier of the customer group to add the customer to.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.CustomerGroup"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddAccountGroup( accountId,  groupId);
              var customerGroupClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.Accounts.CustomerGroupClient.DeleteAccountGroupClient(System.Int32,System.Int32)">
             <summary>
             Removes a customer account from a group.
             </summary>
             <param name="accountId">Unique identifier of the customer account to remove from the group.</param>
             <param name="groupId">Unique identifier of the customer group.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteAccountGroup( accountId,  groupId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Customer.Accounts.CustomerNoteClient">
            <summary>
            Merchants can add and view internal notes for a customer account. For example, a merchant can track a customer's interests or complaints. Only merchants can add and view notes. Customers cannot see these notes from their My Account page.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.Accounts.CustomerNoteClient.GetAccountNoteClient(System.Int32,System.Int32)">
            <summary>
            Retrieves the contents of a particular note attached to a specified customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account that contains the note being retrieved.</param>
            <param name="noteId">Unique identifier of a particular note to retrieve.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.CustomerNote"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetAccountNote( accountId,  noteId);
              var customerNoteClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.Accounts.CustomerNoteClient.GetAccountNotesClient(System.Int32)">
            <summary>
            Retrieves a list of notes added to a customer account according to any specified filter criteria and sort options.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.CustomerNoteCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetAccountNotes( accountId);
              var customerNoteCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.Accounts.CustomerNoteClient.GetAccountNotesClient(System.Int32,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Retrieves a list of notes added to a customer account according to any specified filter criteria and sort options.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">Indicates the zero-based offset in the complete result set where the returned entities begin, when creating paged results from a query. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.CustomerNoteCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetAccountNotes( accountId,  filter,  pageSize,  sortBy,  startIndex);
              var customerNoteCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.Accounts.CustomerNoteClient.AddAccountNoteClient(System.Int32,Mozu.Api.Contracts.Customer.CustomerNote)">
            <summary>
            Adds a new note to the specified customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account for which to create the note.</param>
            <param name="note"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.CustomerNote"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddAccountNote( accountId,  note);
              var customerNoteClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.Accounts.CustomerNoteClient.UpdateAccountNoteClient(System.Int32,System.Int32,Mozu.Api.Contracts.Customer.CustomerNote)">
            <summary>
            Modifies an existing note for a customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account note to modify.</param>
            <param name="noteId">Unique identifier of the note to update.</param>
            <param name="note">The new content to replace the existing note.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.CustomerNote"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateAccountNote( accountId,  noteId,  note);
              var customerNoteClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.Accounts.CustomerNoteClient.DeleteAccountNoteClient(System.Int32,System.Int32)">
             <summary>
             Removes a note from the specified customer account.
             </summary>
             <param name="accountId">Unique identifier of the customer account that contains the note being deleted.</param>
             <param name="noteId">Unique identifier of the customer account note being deleted.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteAccountNote( accountId,  noteId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Customer.AddressValidationRequestClient">
            <summary>
            
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.AddressValidationRequestClient.ValidateAddressClient(Mozu.Api.Contracts.Customer.AddressValidationRequest)">
            <summary>
            
            </summary>
            <param name="addressValidationRequest"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.AddressValidationResponse"/>}
            </returns>
            <example>
            <code>
              var mozuClient=ValidateAddress( addressValidationRequest);
              var addressValidationResponseClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Customer.CustomerAccountClient">
            <summary>
            Create, view, update, and delete a contact in a customer account. A customer account may have multiple contacts for billing or shipping addresses. Each contact may also list any groups to which the contact belongs and whether the contact accepts marketing material such as newsletters or email offers.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.CustomerAccountClient.GetAccountsClient">
            <summary>
            Retrieves a list of customer accounts.
            </summary>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.CustomerAccountCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetAccounts();
              var customerAccountCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.CustomerAccountClient.GetAccountsClient(System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Retrieves a list of customer accounts.
            </summary>
            <param name="fields">The fields to include in the response.</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize"></param>
            <param name="q">A list of customer account search terms to use in the query when searching across customer name and email. Separate multiple search terms with a space character.</param>
            <param name="qLimit">The maximum number of search results to return in the response. You can limit any range between 1-100.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.CustomerAccountCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetAccounts( fields,  filter,  pageSize,  q,  qLimit,  sortBy,  startIndex);
              var customerAccountCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.CustomerAccountClient.GetAccountClient(System.Int32)">
            <summary>
            Retrieve details of a customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account to retrieve.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.CustomerAccount"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetAccount( accountId);
              var customerAccountClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.CustomerAccountClient.AddAccountClient(Mozu.Api.Contracts.Customer.CustomerAccount)">
            <summary>
            Creates a new customer account.
            </summary>
            <param name="account"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.CustomerAccount"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddAccount( account);
              var customerAccountClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.CustomerAccountClient.UpdateAccountClient(System.Int32,Mozu.Api.Contracts.Customer.CustomerAccount)">
            <summary>
            Updates a customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="account"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.CustomerAccount"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateAccount( accountId,  account);
              var customerAccountClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.CustomerAccountClient.DeleteAccountClient(System.Int32)">
             <summary>
             Deletes a customer account. A customer account cannot be deleted if any orders exist, past or present.
             </summary>
             <param name="accountId">Unique identifier of the customer account to delete.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteAccount( accountId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Customer.CustomerGroupClient">
            <summary>
            Merchants create, view, update and delete groups. Groups are useful to manage sets of customers, for example, to offer discounts to particular groups or assign VIP status to a set of customers. A customer account can have several groups or none at all.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.CustomerGroupClient.GetGroupsClient">
            <summary>
            Retrieves a list of all customer groups defined for the site according to any specified filter criteria and sort options.
            </summary>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.CustomerGroupCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetGroups();
              var customerGroupCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.CustomerGroupClient.GetGroupsClient(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Retrieves a list of all customer groups defined for the site according to any specified filter criteria and sort options.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">Indicates the zero-based offset in the complete result set where the returned entities begin, when creating paged results from a query. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.CustomerGroupCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetGroups( filter,  pageSize,  sortBy,  startIndex);
              var customerGroupCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.CustomerGroupClient.GetGroupClient(System.Int32)">
            <summary>
            Retrieves the name of a customer group specified the customer group ID.
            </summary>
            <param name="groupId">Identifier of the customer group to retrieve.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.CustomerGroup"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetGroup( groupId);
              var customerGroupClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.CustomerGroupClient.AddGroupClient(Mozu.Api.Contracts.Customer.CustomerGroup)">
            <summary>
            Creates a new customer group. New customer groups do not have any associated customer accounts.
            </summary>
            <param name="group"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.CustomerGroup"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddGroup( group);
              var customerGroupClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.CustomerGroupClient.UpdateGroupClient(System.Int32,Mozu.Api.Contracts.Customer.CustomerGroup)">
            <summary>
            Changes the name of an existing customer group.
            </summary>
            <param name="groupId">Identifier of the customer group to update.</param>
            <param name="group"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.CustomerGroup"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateGroup( groupId,  group);
              var customerGroupClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.CustomerGroupClient.DeleteGroupClient(System.Int32)">
             <summary>
             Deletes a customer group specified by its unique identifier. Deleting a group removes any customer account associations, but does not delete the customer account itself.
             </summary>
             <param name="groupId">Identifier of the customer group to delete.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteGroup( groupId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Customer.LocationClient">
            <summary>
            List of locations where customer pages exist. Examples: Customer Welcome Page, Customer Information Page.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.LocationClient.GetLocationClient(System.Int32)">
            <summary>
            Retrieves the location of a customer by providing a location ID.
            </summary>
            <param name="locationId">Identifier of the location being retrieved.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Core.Extensible.Location"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetLocation( locationId);
              var locationClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.LocationClient.GetLocationByNameClient(System.String)">
            <summary>
            Retrieves the location by providing a name to query by.
            </summary>
            <param name="name">The name of the location.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Core.Extensible.Location"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetLocationByName( name);
              var locationClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.LocationClient.GetLocationsClient">
            <summary>
            Retrieves a list of locations for this particular customer.
            </summary>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Core.Extensible.LocationCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetLocations();
              var locationCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.LocationClient.GetLocationsClient(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Retrieves a list of locations for this particular customer.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Core.Extensible.LocationCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetLocations( filter,  pageSize,  sortBy,  startIndex);
              var locationCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Customer.VisitClient">
            <summary>
            
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.VisitClient.GetVisitClient(System.String)">
            <summary>
            
            </summary>
            <param name="visitId"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.Visit"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetVisit( visitId);
              var visitClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.VisitClient.GetVisitsClient">
            <summary>
            
            </summary>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.VisitCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetVisits();
              var visitCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.VisitClient.GetVisitsClient(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            
            </summary>
            <param name="filter"></param>
            <param name="pageSize"></param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.VisitCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetVisits( filter,  pageSize,  sortBy,  startIndex);
              var visitCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.VisitClient.AddVisitClient(Mozu.Api.Contracts.Customer.Visit)">
            <summary>
            
            </summary>
            <param name="visit"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.Visit"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddVisit( visit);
              var visitClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.VisitClient.UpdateVisitClient(System.String,Mozu.Api.Contracts.Customer.Visit)">
            <summary>
            
            </summary>
            <param name="visitId"></param>
            <param name="visit"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.Visit"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateVisit( visitId,  visit);
              var visitClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.OrderClient">
            <summary>
            Manage order processing, payment, and shipping. Includes getting customer payment details, shipping address and selected shipment method, processing payment transactions, and, once paid, shipping the order to the shopper.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.OrderClient.GetOrdersClient">
            <summary>
            Retrieves a list of orders according to any specified filter criteria and sort options.
            </summary>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetOrders();
              var orderCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.OrderClient.GetOrdersClient(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Retrieves a list of orders according to any specified filter criteria and sort options.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. You can filter an order's search results by any of its properties, including status, contact information, or total. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). <b>For example - "filter=Status+eq+Submitted"</b></param>
            <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="q">A list of order search terms to use in the query when searching across order number and the name or email of the billing contact. Separate multiple search terms with a space character.</param>
            <param name="qLimit">The maximum number of search results to return in the response. You can limit any range between 1-100.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetOrders( filter,  pageSize,  q,  qLimit,  sortBy,  startIndex);
              var orderCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.OrderClient.GetAvailableActionsClient(System.String)">
            <summary>
            Retrieves available order actions which depends on the status of the order. Actions are "CreateOrder," "SubmitOrder," "SetOrderAsProcessing," "CloseOrder," or "CancelOrder."
            </summary>
            <param name="orderId">Unique identifier of the available order actions to get.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{string}}
            </returns>
            <example>
            <code>
              var mozuClient=GetAvailableActions( orderId);
              var stringClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.OrderClient.GetOrderClient(System.String)">
            <summary>
            Retrieves the details of an order specified by the order ID.
            </summary>
            <param name="orderId">Unique identifier of the order details to get.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetOrder( orderId);
              var orderClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.OrderClient.GetOrderClient(System.Nullable{System.Boolean},System.String)">
            <summary>
            Retrieves the details of an order specified by the order ID.
            </summary>
            <param name="draft">If true, retrieve the draft version of the order, which might include uncommitted changes to the order or its components.</param>
            <param name="orderId">Unique identifier of the order details to get.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetOrder( draft,  orderId);
              var orderClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.OrderClient.CreateOrderClient(Mozu.Api.Contracts.CommerceRuntime.Orders.Order)">
            <summary>
            Creates a new order for no-cart quick-ordering scenarios.
            </summary>
            <param name="order">All properties of the order to place.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>}
            </returns>
            <example>
            <code>
              var mozuClient=CreateOrder( order);
              var orderClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.OrderClient.CreateOrderFromCartClient(System.String)">
            <summary>
            Creates a new order from an existing cart when the customer chooses to proceed to checkout.
            </summary>
            <param name="cartId">Unique identifier of the cart. This is the original cart ID expressed as a GUID.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>}
            </returns>
            <example>
            <code>
              var mozuClient=CreateOrderFromCart( cartId);
              var orderClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.OrderClient.PerformOrderActionClient(System.String,Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAction)">
            <summary>
            Perform the specified action for an order. Available actions depend on the current status of the order. When in doubt, first get a list of available order actions.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="action">Action to perform, which can be "CreateOrder," "SubmitOrder," "SetOrderAsProcessing," "CloseOrder," or "CancelOrder."</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>}
            </returns>
            <example>
            <code>
              var mozuClient=PerformOrderAction( orderId,  action);
              var orderClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.OrderClient.UpdateOrderDiscountClient(System.Int32,System.String,Mozu.Api.Contracts.CommerceRuntime.Discounts.AppliedDiscount)">
            <summary>
            Update the properties of a discount applied to an order.
            </summary>
            <param name="discountId">Unique identifier of the discount. System-supplied and read only.</param>
            <param name="orderId">Unique identifier of the order discount. System-supplied and read only.</param>
            <param name="discount">Properties of the order discount to update.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateOrderDiscount( discountId,  orderId,  discount);
              var orderClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.OrderClient.UpdateOrderDiscountClient(System.Int32,System.String,System.String,System.String,Mozu.Api.Contracts.CommerceRuntime.Discounts.AppliedDiscount)">
            <summary>
            Update the properties of a discount applied to an order.
            </summary>
            <param name="discountId">Unique identifier of the discount. System-supplied and read only.</param>
            <param name="orderId">Unique identifier of the order discount. System-supplied and read only.</param>
            <param name="updateMode">Specifies whether to modify the discount by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal", "ApplyToDraft", or "ApplyAndCommit".</param>
            <param name="version">If applicable, the version of the order or draft for which to update the discount.</param>
            <param name="discount">Properties of the order discount to update.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateOrderDiscount( discountId,  orderId,  updateMode,  version,  discount);
              var orderClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.OrderClient.DeleteOrderDraftClient(System.String)">
             <summary>
             Deletes the current draft version of the order, which also deletes any uncommitted changes made to the order in draft mode.
             </summary>
             <param name="orderId">Unique identifier of the order associated with the draft to delete.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteOrderDraft( orderId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.OrderClient.DeleteOrderDraftClient(System.String,System.String)">
             <summary>
             Deletes the current draft version of the order, which also deletes any uncommitted changes made to the order in draft mode.
             </summary>
             <param name="orderId">Unique identifier of the order associated with the draft to delete.</param>
             <param name="version">If applicable, the version of the order draft to delete.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteOrderDraft( orderId,  version);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.OrderClient.ChangeOrderUserIdClient(System.String)">
            <summary>
            
            </summary>
            <param name="orderId"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>}
            </returns>
            <example>
            <code>
              var mozuClient=ChangeOrderUserId( orderId);
              var orderClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.OrderClient.UpdateOrderClient(System.String,Mozu.Api.Contracts.CommerceRuntime.Orders.Order)">
            <summary>
            Updates the specified order when additional order information, such as shipping or billing information, is modified during the checkout process.
            </summary>
            <param name="orderId">Unique identifier of the order to update.</param>
            <param name="order">The properties of the order to update.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateOrder( orderId,  order);
              var orderClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.OrderClient.UpdateOrderClient(System.String,System.String,System.String,Mozu.Api.Contracts.CommerceRuntime.Orders.Order)">
            <summary>
            Updates the specified order when additional order information, such as shipping or billing information, is modified during the checkout process.
            </summary>
            <param name="orderId">Unique identifier of the order to update.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal", "ApplyToDraft", or "ApplyAndCommit".</param>
            <param name="version">If applicable, the version of the order or draft to update.</param>
            <param name="order">The properties of the order to update.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateOrder( orderId,  updateMode,  version,  order);
              var orderClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Orders.AdjustmentClient">
            <summary>
            Use this subresource to manage ad-hoc order level price adjustments.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.AdjustmentClient.ApplyShippingAdjustmentClient(System.String,Mozu.Api.Contracts.CommerceRuntime.Commerce.Adjustment)">
            <summary>
            Modify the amount charged for shipping the specified order.
            </summary>
            <param name="orderId">Unique identifier of the order associated with the shipping adjustment.</param>
            <param name="adjustment">Properties of the shipping adjustment to apply to the order.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>}
            </returns>
            <example>
            <code>
              var mozuClient=ApplyShippingAdjustment( orderId,  adjustment);
              var orderClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.AdjustmentClient.ApplyShippingAdjustmentClient(System.String,System.String,System.String,Mozu.Api.Contracts.CommerceRuntime.Commerce.Adjustment)">
            <summary>
            Modify the amount charged for shipping the specified order.
            </summary>
            <param name="orderId">Unique identifier of the order associated with the shipping adjustment.</param>
            <param name="updateMode">Specifies whether to apply the shipping adjustment by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal", "ApplyToDraft", or "ApplyAndCommit".</param>
            <param name="version">If applicable, the version of the order or draft to which to apply the shipping adjustment.</param>
            <param name="adjustment">Properties of the shipping adjustment to apply to the order.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>}
            </returns>
            <example>
            <code>
              var mozuClient=ApplyShippingAdjustment( orderId,  updateMode,  version,  adjustment);
              var orderClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.AdjustmentClient.ApplyAdjustmentClient(System.String,Mozu.Api.Contracts.CommerceRuntime.Commerce.Adjustment)">
            <summary>
            Applies a price adjustment to the specified order.
            </summary>
            <param name="orderId">Unique identifier of the order for which to apply the adjustment.</param>
            <param name="adjustment">Properties of the price adjustment to apply to the order.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>}
            </returns>
            <example>
            <code>
              var mozuClient=ApplyAdjustment( orderId,  adjustment);
              var orderClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.AdjustmentClient.ApplyAdjustmentClient(System.String,System.String,System.String,Mozu.Api.Contracts.CommerceRuntime.Commerce.Adjustment)">
            <summary>
            Applies a price adjustment to the specified order.
            </summary>
            <param name="orderId">Unique identifier of the order for which to apply the adjustment.</param>
            <param name="updateMode">Specifies whether to apply the adjustment by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal", "ApplyToDraft", or "ApplyAndCommit".</param>
            <param name="version">If applicable, the version of the order or draft for which to apply the adjustment.</param>
            <param name="adjustment">Properties of the price adjustment to apply to the order.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>}
            </returns>
            <example>
            <code>
              var mozuClient=ApplyAdjustment( orderId,  updateMode,  version,  adjustment);
              var orderClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.AdjustmentClient.RemoveShippingAdjustmentClient(System.String)">
            <summary>
            Removes a shipping adjustment previously applied to an order or draft.
            </summary>
            <param name="orderId">Unique identifier of the order with the applied shipping adjustment.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>}
            </returns>
            <example>
            <code>
              var mozuClient=RemoveShippingAdjustment( orderId);
              var orderClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.AdjustmentClient.RemoveShippingAdjustmentClient(System.String,System.String,System.String)">
            <summary>
            Removes a shipping adjustment previously applied to an order or draft.
            </summary>
            <param name="orderId">Unique identifier of the order with the applied shipping adjustment.</param>
            <param name="updateMode">Specifies whether to remove the shipping adjustment by updating the original order, updating the order in draft mode, or updating the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal", "ApplyToDraft", or "ApplyAndCommit".</param>
            <param name="version">If applicable, the version of the order or draft from which to remove the shipping adjustment.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>}
            </returns>
            <example>
            <code>
              var mozuClient=RemoveShippingAdjustment( orderId,  updateMode,  version);
              var orderClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.AdjustmentClient.RemoveAdjustmentClient(System.String)">
            <summary>
            Removes a price adjustment from the specified order.
            </summary>
            <param name="orderId">Unique identifier of the order for which to delete the adjustment.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>}
            </returns>
            <example>
            <code>
              var mozuClient=RemoveAdjustment( orderId);
              var orderClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.AdjustmentClient.RemoveAdjustmentClient(System.String,System.String,System.String)">
            <summary>
            Removes a price adjustment from the specified order.
            </summary>
            <param name="orderId">Unique identifier of the order for which to delete the adjustment.</param>
            <param name="updateMode">Specifies whether to remove the adjustment by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal", "ApplyToDraft", or "ApplyAndCommit".</param>
            <param name="version">If applicable, the version of the order or draft from which to remove the adjustment.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>}
            </returns>
            <example>
            <code>
              var mozuClient=RemoveAdjustment( orderId,  updateMode,  version);
              var orderClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Orders.AppliedDiscountClient">
            <summary>
            Use this subresource to apply coupons to or remove coupons from an order based on a supplied coupon code.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.AppliedDiscountClient.ApplyCouponClient(System.String,System.String)">
            <summary>
            Apply a coupon to the order.
            </summary>
            <param name="couponCode"></param>
            <param name="orderId">Unique identifier of the order to associate the coupon. System-supplied and read-only.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>}
            </returns>
            <example>
            <code>
              var mozuClient=ApplyCoupon( couponCode,  orderId);
              var orderClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.AppliedDiscountClient.ApplyCouponClient(System.String,System.String,System.String,System.String)">
            <summary>
            Apply a coupon to the order.
            </summary>
            <param name="couponCode"></param>
            <param name="orderId">Unique identifier of the order to associate the coupon. System-supplied and read-only.</param>
            <param name="updateMode">Specifies whether to apply the coupon by updating the original order, updating the order in draft mode, or updating the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal", "ApplyToDraft", or "ApplyAndCommit".</param>
            <param name="version">If applicable, the version of the order or order draft to which to apply the coupon.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>}
            </returns>
            <example>
            <code>
              var mozuClient=ApplyCoupon( couponCode,  orderId,  updateMode,  version);
              var orderClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.AppliedDiscountClient.RemoveCouponClient(System.String,System.String)">
            <summary>
            Removes a coupon previously applied to the order.
            </summary>
            <param name="couponCode"></param>
            <param name="orderId">Unique identifier of the order with the coupon to remove.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>}
            </returns>
            <example>
            <code>
              var mozuClient=RemoveCoupon( couponCode,  orderId);
              var orderClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.AppliedDiscountClient.RemoveCouponClient(System.String,System.String,System.String,System.String)">
            <summary>
            Removes a coupon previously applied to the order.
            </summary>
            <param name="couponCode"></param>
            <param name="orderId">Unique identifier of the order with the coupon to remove.</param>
            <param name="updateMode">Specifies whether to remove the coupon by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal", "ApplyToDraft", or "ApplyAndCommit".</param>
            <param name="version">If applicable, the version of the order or order draft from which to remove the coupon.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>}
            </returns>
            <example>
            <code>
              var mozuClient=RemoveCoupon( couponCode,  orderId,  updateMode,  version);
              var orderClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.AppliedDiscountClient.RemoveCouponsClient(System.String)">
            <summary>
            Removes all coupons previously applied to the order.
            </summary>
            <param name="orderId">Unique identifier of the order with the coupons to remove.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>}
            </returns>
            <example>
            <code>
              var mozuClient=RemoveCoupons( orderId);
              var orderClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.AppliedDiscountClient.RemoveCouponsClient(System.String,System.String,System.String)">
            <summary>
            Removes all coupons previously applied to the order.
            </summary>
            <param name="orderId">Unique identifier of the order with the coupons to remove.</param>
            <param name="updateMode">Specifies whether to remove coupons by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal", "ApplyToDraft", or "ApplyAndCommit".</param>
            <param name="version">If applicable, the version of the order or order draft from which to remove coupons.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>}
            </returns>
            <example>
            <code>
              var mozuClient=RemoveCoupons( orderId,  updateMode,  version);
              var orderClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Orders.Attributedefinition.AttributeClient">
            <summary>
            Attributes for orders creates extensibility for the way we describe orders.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.Attributedefinition.AttributeClient.GetAttributeByNameClient(System.String)">
            <summary>
            Retrieves an existing order attribute by providing the name and namespace.
            </summary>
            <param name="fqn">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Core.Extensible.Attribute"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetAttributeByName( fqn);
              var attributeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.Attributedefinition.AttributeClient.GetAttributesClient">
            <summary>
            Retrieves a list of order attributes according to any filter criteria or sort options.
            </summary>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Core.Extensible.AttributeCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetAttributes();
              var attributeCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.Attributedefinition.AttributeClient.GetAttributesClient(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Retrieves a list of order attributes according to any filter criteria or sort options.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">Indicates the zero-based offset in the complete result set where the returned entities begin, when creating paged results from a query. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Core.Extensible.AttributeCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetAttributes( filter,  pageSize,  sortBy,  startIndex);
              var attributeCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.Attributedefinition.AttributeClient.GetAttributeClient(System.Int32)">
            <summary>
            Retrieves a single existing order attribute.
            </summary>
            <param name="attributeId">Identifier of the single order attribute to retrieve.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Core.Extensible.Attribute"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetAttribute( attributeId);
              var attributeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.Attributedefinition.AttributeClient.CreateAttributeClient(Mozu.Api.Contracts.Core.Extensible.Attribute)">
            <summary>
            Create a new attribute to associate with an order.
            </summary>
            <param name="attribute">The properties of the order attribute to create.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Core.Extensible.Attribute"/>}
            </returns>
            <example>
            <code>
              var mozuClient=CreateAttribute( attribute);
              var attributeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.Attributedefinition.AttributeClient.UpdateAttributeClient(System.Int32,Mozu.Api.Contracts.Core.Extensible.Attribute)">
            <summary>
            Update an existing order attribute.
            </summary>
            <param name="attributeId">Unique identifier of the attribute.</param>
            <param name="attribute">The properties of the order attribute being updated.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Core.Extensible.Attribute"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateAttribute( attributeId,  attribute);
              var attributeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.Attributedefinition.AttributeClient.DeleteAttributeClient(System.Int32)">
             <summary>
             Delete an existing order attribute.
             </summary>
             <param name="attributeId">Unique identifier of the attribute.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteAttribute( attributeId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.Attributedefinition.AttributeClient.DeleteAttributeByNameClient(System.String)">
             <summary>
             Deletes an order attribute by specifying the fully qualified name of the attribute.
             </summary>
             <param name="fqn">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteAttributeByName( fqn);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Orders.Attributedefinition.AttributeSetClient">
            <summary>
            A grouping of related orders attributes.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.Attributedefinition.AttributeSetClient.GetAttributeSetByNameClient(System.String)">
            <summary>
            Retrieves the attribute set by providing the name and namespace.
            </summary>
            <param name="fqn">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Core.Extensible.AttributeSet"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetAttributeSetByName( fqn);
              var attributeSetClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.Attributedefinition.AttributeSetClient.GetAttributeSetsClient">
            <summary>
            Retrieves a list of attribute sets according to any filter criteria or sort options.
            </summary>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Core.Extensible.AttributeSetCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetAttributeSets();
              var attributeSetCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.Attributedefinition.AttributeSetClient.GetAttributeSetsClient(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Retrieves a list of attribute sets according to any filter criteria or sort options.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">Indicates the zero-based offset in the complete result set where the returned entities begin, when creating paged results from a query. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Core.Extensible.AttributeSetCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetAttributeSets( filter,  pageSize,  sortBy,  startIndex);
              var attributeSetCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.Attributedefinition.AttributeSetClient.GetAttributeSetClient(System.Int32)">
            <summary>
            Retrieves a specific attribute set by providing the attribute set ID.
            </summary>
            <param name="attributeSetId">Identifier of the attribute set being retrieved.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Core.Extensible.AttributeSet"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetAttributeSet( attributeSetId);
              var attributeSetClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.Attributedefinition.AttributeSetClient.CreateAttributeSetClient(Mozu.Api.Contracts.Core.Extensible.AttributeSet)">
            <summary>
            Create new attribute set to provide order extensibility.
            </summary>
            <param name="attributeSet">The properties of the orders attribute set being created.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Core.Extensible.AttributeSet"/>}
            </returns>
            <example>
            <code>
              var mozuClient=CreateAttributeSet( attributeSet);
              var attributeSetClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.Attributedefinition.AttributeSetClient.UpdateAttributeSetClient(System.Int32,Mozu.Api.Contracts.Core.Extensible.AttributeSet)">
            <summary>
            Update an existing attribute set by providing the attribute set ID.
            </summary>
            <param name="attributeSetId">Identifier of the attribute set being updated.</param>
            <param name="attributeSet">The properties of the attribute set being updated.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Core.Extensible.AttributeSet"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateAttributeSet( attributeSetId,  attributeSet);
              var attributeSetClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.Attributedefinition.AttributeSetClient.UpsertAttributeSetAssignmentClient(Mozu.Api.Contracts.Core.Extensible.AttributeSetAssignment)">
             <summary>
             Associate an attribute with an attribute set.
             </summary>
             <param name="assignment">Properties of the attribute set assignment.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=UpsertAttributeSetAssignment( assignment);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.Attributedefinition.AttributeSetClient.DeleteAttributeSetClient(System.Int32)">
             <summary>
             Delete a specific attribute set by providing the attribute set ID.
             </summary>
             <param name="attributeSetId">Identifier of the attribute set being deleted.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteAttributeSet( attributeSetId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.Attributedefinition.AttributeSetClient.RemoveAttributeSetAssignmentClient(System.Int32,System.Int32)">
             <summary>
             Removes the attribute from its assigned attribute set.
             </summary>
             <param name="attributeSetId">Identifier of the attribute set.</param>
             <param name="locationId">Identifier of the location. Locations describe where in the application the attribute set definition will be rendered (such as a page).</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=RemoveAttributeSetAssignment( attributeSetId,  locationId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.Attributedefinition.AttributeSetClient.DeleteAttributeSetByNameClient(System.String)">
             <summary>
             Delete a specific attribute set by providing the fully qualified name.
             </summary>
             <param name="fqn">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteAttributeSetByName( fqn);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Orders.BillingInfoClient">
            <summary>
            Use the Billing Info subresource to manage the billing information stored for an order.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.BillingInfoClient.GetBillingInfoClient(System.String)">
            <summary>
            Retrieves the billing information associated with an order.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Payments.BillingInfo"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetBillingInfo( orderId);
              var billingInfoClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.BillingInfoClient.GetBillingInfoClient(System.Nullable{System.Boolean},System.String)">
            <summary>
            Retrieves the billing information associated with an order.
            </summary>
            <param name="draft">If true, retrieve the draft version of the order billing information, which might include uncommitted changes.</param>
            <param name="orderId">Unique identifier of the order.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Payments.BillingInfo"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetBillingInfo( draft,  orderId);
              var billingInfoClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.BillingInfoClient.SetBillingInfoClient(System.String,Mozu.Api.Contracts.CommerceRuntime.Payments.BillingInfo)">
            <summary>
            Updates the billing information supplied for an order.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="billingInfo">The properties of the order billing information to update.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Payments.BillingInfo"/>}
            </returns>
            <example>
            <code>
              var mozuClient=SetBillingInfo( orderId,  billingInfo);
              var billingInfoClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.BillingInfoClient.SetBillingInfoClient(System.String,System.String,System.String,Mozu.Api.Contracts.CommerceRuntime.Payments.BillingInfo)">
            <summary>
            Updates the billing information supplied for an order.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="updateMode">Specifies whether to set the billing information by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal", "ApplyToDraft", or "ApplyAndCommit".</param>
            <param name="version">If applicable, the version of the order or draft for which to set the billing information.</param>
            <param name="billingInfo">The properties of the order billing information to update.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Payments.BillingInfo"/>}
            </returns>
            <example>
            <code>
              var mozuClient=SetBillingInfo( orderId,  updateMode,  version,  billingInfo);
              var billingInfoClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Orders.LocationClient">
            <summary>
            Locations associated with orders are geographical and provide context for shipping and taxes.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.LocationClient.GetLocationClient(System.Int32)">
            <summary>
            Retrieves the order location by providing the location ID.
            </summary>
            <param name="locationId">Identifier of the location specified in the order.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Core.Extensible.Location"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetLocation( locationId);
              var locationClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.LocationClient.GetLocationByNameClient(System.String)">
            <summary>
            Retrieves an order location by providing the name.
            </summary>
            <param name="name">Location name provided in the request.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Core.Extensible.Location"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetLocationByName( name);
              var locationClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.LocationClient.GetLocationsClient">
            <summary>
            Retrieves a list of locations associated with the orders.
            </summary>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Core.Extensible.LocationCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetLocations();
              var locationCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.LocationClient.GetLocationsClient(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Retrieves a list of locations associated with the orders.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Core.Extensible.LocationCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetLocations( filter,  pageSize,  sortBy,  startIndex);
              var locationCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Orders.OrderAttributeClient">
            <summary>
            List of attributes that describe an order. An order attribute has content localized to the locale code of the site and several other properties that uniquely identify it to associate with an order.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.OrderAttributeClient.GetOrderAttributesClient(System.String)">
            <summary>
            Retrieves a list of order attributes.
            </summary>
            <param name="orderId">Identifier of the order whose order attributes are being retrieved.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAttribute"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=GetOrderAttributes( orderId);
              var orderAttributeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.OrderAttributeClient.GetOrderAttributeSetClient(System.Int32,System.String)">
            <summary>
            Retrieves the order attribute set by providing the attribute set ID.
            </summary>
            <param name="attributeSetId">Identifier of the attribute set whose order attribute set is being retrieved.</param>
            <param name="orderId">Identifier of the order whose order attribute set is being retrieved.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAttribute"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=GetOrderAttributeSet( attributeSetId,  orderId);
              var orderAttributeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.OrderAttributeClient.CreateOrderAttributesClient(System.String,System.Collections.Generic.List{Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAttribute})">
            <summary>
            Create a new list of order attributes by providing the order ID.
            </summary>
            <param name="orderId">Identifier of the order whose attributes are being created.</param>
            <param name="orderAttributes">The attribute properties to create to associate with the order ID.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAttribute"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=CreateOrderAttributes( orderId,  orderAttributes);
              var orderAttributeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.OrderAttributeClient.UpdateOrderAttributesClient(System.String,System.Collections.Generic.List{Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAttribute})">
            <summary>
            Update the properties of an order's attributes by providing the order ID and by removing any missing properties if removeMissing is set to true.
            </summary>
            <param name="orderId">Identifier of the order whose order attributes are being updated.</param>
            <param name="orderAttributes">List of order attributes being updated.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAttribute"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateOrderAttributes( orderId,  orderAttributes);
              var orderAttributeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.OrderAttributeClient.UpdateOrderAttributesClient(System.String,System.Nullable{System.Boolean},System.Collections.Generic.List{Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAttribute})">
            <summary>
            Update the properties of an order's attributes by providing the order ID and by removing any missing properties if removeMissing is set to true.
            </summary>
            <param name="orderId">Identifier of the order whose order attributes are being updated.</param>
            <param name="removeMissing">If true, the operation removes missing properties so that the updated order attributes will not show properties with a null value.</param>
            <param name="orderAttributes">List of order attributes being updated.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAttribute"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateOrderAttributes( orderId,  removeMissing,  orderAttributes);
              var orderAttributeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Orders.OrderItemClient">
            <summary>
            Use this subresource to retrieve details about items in an active order.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.OrderItemClient.GetOrderItemClient(System.String,System.String)">
            <summary>
            Retrieves the details of a single order item.
            </summary>
            <param name="orderId">Unique identifier of the order item to retrieve.</param>
            <param name="orderItemId">Unique identifier of the order item details to retrieve.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetOrderItem( orderId,  orderItemId);
              var orderItemClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.OrderItemClient.GetOrderItemClient(System.Nullable{System.Boolean},System.String,System.String)">
            <summary>
            Retrieves the details of a single order item.
            </summary>
            <param name="draft">If true, retrieve the draft version of this order item, which might include uncommitted changes to the order item, the order, or other order components.</param>
            <param name="orderId">Unique identifier of the order item to retrieve.</param>
            <param name="orderItemId">Unique identifier of the order item details to retrieve.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetOrderItem( draft,  orderId,  orderItemId);
              var orderItemClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.OrderItemClient.GetOrderItemsClient(System.String)">
            <summary>
            Retrieves the details of all items in an order.
            </summary>
            <param name="orderId">Unique identifier of the order items to retrieve.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItemCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetOrderItems( orderId);
              var orderItemCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.OrderItemClient.GetOrderItemsClient(System.Nullable{System.Boolean},System.String)">
            <summary>
            Retrieves the details of all items in an order.
            </summary>
            <param name="draft">If true, retrieve the draft version of the order's items, which might include uncommitted changes to one or more order items, the order itself, or other order components.</param>
            <param name="orderId">Unique identifier of the order items to retrieve.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItemCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetOrderItems( draft,  orderId);
              var orderItemCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.OrderItemClient.CreateOrderItemClient(System.String,Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem)">
            <summary>
            Adds a new item to an existing order.
            </summary>
            <param name="orderId">Unique identifier of the order for which to add the item.</param>
            <param name="orderItem">The properties of the item to create in the existing order.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>}
            </returns>
            <example>
            <code>
              var mozuClient=CreateOrderItem( orderId,  orderItem);
              var orderClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.OrderItemClient.CreateOrderItemClient(System.String,System.String,System.String,Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem)">
            <summary>
            Adds a new item to an existing order.
            </summary>
            <param name="orderId">Unique identifier of the order for which to add the item.</param>
            <param name="updateMode">Specifies whether to add the item by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal", "ApplyToDraft", or "ApplyAndCommit".</param>
            <param name="version">If applicable, the version of the order or order draft for which to add the item.</param>
            <param name="orderItem">The properties of the item to create in the existing order.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>}
            </returns>
            <example>
            <code>
              var mozuClient=CreateOrderItem( orderId,  updateMode,  version,  orderItem);
              var orderClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.OrderItemClient.UpdateOrderItemDiscountClient(System.Int32,System.String,System.String,Mozu.Api.Contracts.CommerceRuntime.Discounts.AppliedDiscount)">
            <summary>
            Update the discount applied to an item in an order.
            </summary>
            <param name="discountId">Unique identifier of the discount. System-supplied and read only.</param>
            <param name="orderId">Unique identifier of the order associated with the item discount.</param>
            <param name="orderItemId">Unique identifier of the item in the order.</param>
            <param name="discount">Properties of the discount to modify for the order item.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateOrderItemDiscount( discountId,  orderId,  orderItemId,  discount);
              var orderClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.OrderItemClient.UpdateOrderItemDiscountClient(System.Int32,System.String,System.String,System.String,System.String,Mozu.Api.Contracts.CommerceRuntime.Discounts.AppliedDiscount)">
            <summary>
            Update the discount applied to an item in an order.
            </summary>
            <param name="discountId">Unique identifier of the discount. System-supplied and read only.</param>
            <param name="orderId">Unique identifier of the order associated with the item discount.</param>
            <param name="orderItemId">Unique identifier of the item in the order.</param>
            <param name="updateMode">Specifies whether to change the item discount by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal", "ApplyToDraft", or "ApplyAndCommit".</param>
            <param name="version">If applicable, the version of the order or order draft for which to update the item discount.</param>
            <param name="discount">Properties of the discount to modify for the order item.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateOrderItemDiscount( discountId,  orderId,  orderItemId,  updateMode,  version,  discount);
              var orderClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.OrderItemClient.UpdateItemProductPriceClient(System.String,System.String,System.Decimal)">
            <summary>
            Override the price of an individual product in the specified order.
            </summary>
            <param name="orderId">Unique identifier of the order containing the item to price override.</param>
            <param name="orderItemId">Unique identifier of the item in the order to price override.</param>
            <param name="price">The override price to specify for this item in the specified order.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateItemProductPrice( orderId,  orderItemId,  price);
              var orderClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.OrderItemClient.UpdateItemProductPriceClient(System.String,System.String,System.Decimal,System.String,System.String)">
            <summary>
            Override the price of an individual product in the specified order.
            </summary>
            <param name="orderId">Unique identifier of the order containing the item to price override.</param>
            <param name="orderItemId">Unique identifier of the item in the order to price override.</param>
            <param name="price">The override price to specify for this item in the specified order.</param>
            <param name="updateMode">Specifies whether to change the product price by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal", "ApplyToDraft", or "ApplyAndCommit".</param>
            <param name="version">If applicable, the version of the order or order draft for which to update the item price.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateItemProductPrice( orderId,  orderItemId,  price,  updateMode,  version);
              var orderClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.OrderItemClient.UpdateItemQuantityClient(System.String,System.String,System.Int32)">
            <summary>
            Update the quantity of an item in an order.
            </summary>
            <param name="orderId">Unique identifier of the order containing the item to update quantity.</param>
            <param name="orderItemId">Unique identifier of the item in the order to update quantity.</param>
            <param name="quantity">The quantity of the item in the order to update.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateItemQuantity( orderId,  orderItemId,  quantity);
              var orderClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.OrderItemClient.UpdateItemQuantityClient(System.String,System.String,System.Int32,System.String,System.String)">
            <summary>
            Update the quantity of an item in an order.
            </summary>
            <param name="orderId">Unique identifier of the order containing the item to update quantity.</param>
            <param name="orderItemId">Unique identifier of the item in the order to update quantity.</param>
            <param name="quantity">The quantity of the item in the order to update.</param>
            <param name="updateMode">Specifies whether to change the item quantity by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal", "ApplyToDraft", or "ApplyAndCommit".</param>
            <param name="version">If applicable, the version of the order or order draft for which to update the item quantity.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateItemQuantity( orderId,  orderItemId,  quantity,  updateMode,  version);
              var orderClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.OrderItemClient.DeleteOrderItemClient(System.String,System.String)">
            <summary>
            Removes a previously added item from an existing order.
            </summary>
            <param name="orderId">Unique identifier of the order with the item to remove.</param>
            <param name="orderItemId">Unique identifier of the item to remove from the order.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>}
            </returns>
            <example>
            <code>
              var mozuClient=DeleteOrderItem( orderId,  orderItemId);
              var orderClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.OrderItemClient.DeleteOrderItemClient(System.String,System.String,System.String,System.String)">
            <summary>
            Removes a previously added item from an existing order.
            </summary>
            <param name="orderId">Unique identifier of the order with the item to remove.</param>
            <param name="orderItemId">Unique identifier of the item to remove from the order.</param>
            <param name="updateMode">Specifies whether to remove the item by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal", "ApplyToDraft", or "ApplyAndCommit".</param>
            <param name="version">If applicable, the version of the order or order draft from which to delete the item.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>}
            </returns>
            <example>
            <code>
              var mozuClient=DeleteOrderItem( orderId,  orderItemId,  updateMode,  version);
              var orderClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Orders.OrderNoteClient">
            <summary>
            Use this subresource to manage notes associated with an active order.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.OrderNoteClient.GetOrderNotesClient(System.String)">
            <summary>
            Retrieves a list of all notes for an order.
            </summary>
            <param name="orderId">Unique identifier of the order whose notes are retrieved.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderNote"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=GetOrderNotes( orderId);
              var orderNoteClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.OrderNoteClient.GetOrderNoteClient(System.String,System.String)">
            <summary>
            Retrieves a specific order note from an order.
            </summary>
            <param name="noteId">Unique identifier of the note text to retrieve.</param>
            <param name="orderId">Unique identifier of the order note to retrieve.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderNote"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetOrderNote( noteId,  orderId);
              var orderNoteClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.OrderNoteClient.CreateOrderNoteClient(System.String,Mozu.Api.Contracts.CommerceRuntime.Orders.OrderNote)">
            <summary>
            Adds a note to the order. This is an internal note that the merchant can add to an order.
            </summary>
            <param name="orderId">Unique identifier of the order to add a note.</param>
            <param name="orderNote">The Unicode alphanumeric text contained in the note. Max length: 256 characters.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderNote"/>}
            </returns>
            <example>
            <code>
              var mozuClient=CreateOrderNote( orderId,  orderNote);
              var orderNoteClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.OrderNoteClient.UpdateOrderNoteClient(System.String,System.String,Mozu.Api.Contracts.CommerceRuntime.Orders.OrderNote)">
            <summary>
            Updates a specific order note for an order.
            </summary>
            <param name="noteId">Unique identifier of the note whose text is being updated.</param>
            <param name="orderId">Unique identifier of the order whose note is being updated.</param>
            <param name="orderNote">The Unicode alphanumeric text contained in the note.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderNote"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateOrderNote( noteId,  orderId,  orderNote);
              var orderNoteClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.OrderNoteClient.DeleteOrderNoteClient(System.String,System.String)">
             <summary>
             Deletes a specific order note on an order.
             </summary>
             <param name="noteId">Unique identifier of the note text to delete.</param>
             <param name="orderId">Unique identifier of the order note to delete.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteOrderNote( noteId,  orderId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Orders.PackageClient">
            <summary>
            Use the packages subresource to manage the physical packages to ship for an order.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.PackageClient.GetPackageClient(System.String,System.String)">
            <summary>
            Retrieves the details of a package of order items.
            </summary>
            <param name="orderId">Unique identifier of the order associated with the package to retrieve.</param>
            <param name="packageId">Unique identifier of the package to retrieve.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Shipping.Package"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetPackage( orderId,  packageId);
              var packageClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.PackageClient.GetPackageLabelClient(System.String,System.String)">
             <summary>
             Retrieves the package label image supplied by the carrier.
             </summary>
             <param name="orderId">Unique identifier of the order associated with the package label to retrieve.</param>
             <param name="packageId">Unique identifier of the package for which to retrieve the label.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=GetPackageLabel( orderId,  packageId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.PackageClient.CreatePackageClient(System.String,Mozu.Api.Contracts.CommerceRuntime.Shipping.Package)">
            <summary>
            Creates a new physical package of order items.
            </summary>
            <param name="orderId">Unique identifier of the order associated with this package.</param>
            <param name="package">Properties of the physical package of order items.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Shipping.Package"/>}
            </returns>
            <example>
            <code>
              var mozuClient=CreatePackage( orderId,  pkg);
              var packageClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.PackageClient.UpdatePackageClient(System.String,System.String,Mozu.Api.Contracts.CommerceRuntime.Shipping.Package)">
            <summary>
            Updates one or more properties of a physical package of order items.
            </summary>
            <param name="orderId">Unique identifier of the order associated with the package to update.</param>
            <param name="packageId">Unique identifier of the package of order items to update.</param>
            <param name="package">Wrapper of properties for the package of order items to update.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Shipping.Package"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdatePackage( orderId,  packageId,  pkg);
              var packageClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.PackageClient.DeletePackageClient(System.String,System.String)">
             <summary>
             Removes a physical package of items from the specified order.
             </summary>
             <param name="orderId">Unique identifier of the order associated with the package to delete.</param>
             <param name="packageId">Unique identifier of the package to delete.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeletePackage( orderId,  packageId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Orders.PaymentClient">
            <summary>
            Use the Payments subresource to manage payment transactions for orders. Each transaction performed for an order represents an individual payment. For example, if an order totals $75.00 but the shopper has a $50.00 gift certificate, both the gift certificate transaction and the credit card transaction for the remaining $25.00 are recorded as payments for the order.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.PaymentClient.GetPaymentsClient(System.String)">
            <summary>
            Retrieves information about all payment transactions submitted for the specified order.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetPayments( orderId);
              var paymentCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.PaymentClient.GetPaymentClient(System.String,System.String)">
            <summary>
            Retrieves information about a specific payment transaction submitted for the specified order.
            </summary>
            <param name="orderId">Unique identifier of the order associated with the payment transaction.</param>
            <param name="paymentId">Unique identifier of the payment transaction submitted for the order.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Payments.Payment"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetPayment( orderId,  paymentId);
              var paymentClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.PaymentClient.GetAvailablePaymentActionsClient(System.String,System.String)">
            <summary>
            Retrieves the list of all available payment actions dependent on the order payment status by specifying the order ID.
            </summary>
            <param name="orderId">Unique identifier of the order associated with the payment.</param>
            <param name="paymentId">Unique identifer of the payment for which to retrieve available actions.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{string}}
            </returns>
            <example>
            <code>
              var mozuClient=GetAvailablePaymentActions( orderId,  paymentId);
              var stringClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.PaymentClient.PerformPaymentActionClient(System.String,System.String,Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentAction)">
            <summary>
            Performs the specified action for an individual order payment transaction.
            </summary>
            <param name="orderId">Unique identifier of the order associated with the payment.</param>
            <param name="paymentId">Unique identifer of the payment for which to perform the action.</param>
            <param name="action">The action to perform for the payment. Possible values are AuthAndCapture, AuthorizePayment, CapturePayment, VoidPayment, CreditPayment, RequestCheck, ApplyCheck, DeclineCheck.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>}
            </returns>
            <example>
            <code>
              var mozuClient=PerformPaymentAction( orderId,  paymentId,  action);
              var orderClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.PaymentClient.CreatePaymentActionClient(System.String,Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentAction)">
            <summary>
            Creates a new payment transaction for the specified order and performs the specified action.
            </summary>
            <param name="orderId">Unique identifier of the order for which to apply the payment.</param>
            <param name="action">To action to perform for the newly created payment. Possible values are AuthAndCapture, AuthorizePayment, CapturePayment, VoidPayment, CreditPayment, RequestCheck, ApplyCheck, DeclineCheck.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>}
            </returns>
            <example>
            <code>
              var mozuClient=CreatePaymentAction( orderId,  action);
              var orderClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Orders.ShipmentClient">
            <summary>
            Use the shipments resource to manage shipments of collections of packages for an order.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.ShipmentClient.GetAvailableShipmentActionsClient(System.String,System.String)">
            <summary>
            Retrieves the shipment actions available for the specified order and package.
            </summary>
            <param name="orderId">Unique identifier of the order for which to get a list of available actions.</param>
            <param name="packageId">Unique identifier for the physical package associated with the order for which to get a list of available actions.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{string}}
            </returns>
            <example>
            <code>
              var mozuClient=GetAvailableShipmentActions( orderId,  packageId);
              var stringClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.ShipmentClient.GetShipmentClient(System.String,System.String)">
            <summary>
            Retrieves the details of the order shipment specified in the request.
            </summary>
            <param name="orderId">Unique identifier of the order associated with the shipment to retrieve.</param>
            <param name="shipmentId">Unique identifier of the shipment to retrieve.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Shipping.Shipment"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetShipment( orderId,  shipmentId);
              var shipmentClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.ShipmentClient.GetAvailableShipmentMethodsClient(System.String)">
            <summary>
            Retrieves the available shipping methods applicable to the order. Typically used to display available shipping method options on the checkout page.
            </summary>
            <param name="orderId">Unique identifier of the order for the available shipment methods being retrieved.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Shipping.ShippingRate"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=GetAvailableShipmentMethods( orderId);
              var shippingRateClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.ShipmentClient.CreatePackageShipmentsClient(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Creates a shipment from one or more package associated with an order and assign a label and tracking number to an order shipment.
            </summary>
            <param name="orderId">Unique identifier of the order for this shipment.</param>
            <param name="packageIds">List of unique identifiers for each package associated with this shipment. Not all packages must belong to the same shipment.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Shipping.Package"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=CreatePackageShipments( orderId,  packageIds);
              var packageClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.ShipmentClient.PerformShipmentActionClient(System.String,Mozu.Api.Contracts.CommerceRuntime.Shipping.ShipmentAction)">
            <summary>
            Sets the shipment action to "Ship." To ship an order, the order must have a customer name, the "Open" or "OpenAndProcessing" status, full shipping address, and shipping method. Shipping all packages associated with shipments for an order will complete a paid order.
            </summary>
            <param name="orderId">Unique identifier of the order associated with the shipment for which to perform the action.</param>
            <param name="action">The action to perform for the order shipment.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>}
            </returns>
            <example>
            <code>
              var mozuClient=PerformShipmentAction( orderId,  action);
              var orderClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.ShipmentClient.DeleteShipmentClient(System.String,System.String)">
             <summary>
             Cancels a shipment.
             </summary>
             <param name="orderId">Unique identifier of the order to cancel shipment.</param>
             <param name="shipmentId">Unique identifier of the shipment to cancel.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteShipment( orderId,  shipmentId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Orders.ShippingInfoClient">
            <summary>
            Use this subresource to manage shipping information for orders.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.ShippingInfoClient.GetShippingInfoClient(System.String)">
            <summary>
            Retrieve a list of the shipping information for the specified order.
            </summary>
            <param name="orderId">Unique identifier of the order associated with the shipping information to retrieve.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Shipping.ShippingInfo"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetShippingInfo( orderId);
              var shippingInfoClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.ShippingInfoClient.GetShippingInfoClient(System.Nullable{System.Boolean},System.String)">
            <summary>
            Retrieve a list of the shipping information for the specified order.
            </summary>
            <param name="draft">If true, retrieve the draft version of the order's shipping information, which might include uncommitted changes.</param>
            <param name="orderId">Unique identifier of the order associated with the shipping information to retrieve.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Shipping.ShippingInfo"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetShippingInfo( draft,  orderId);
              var shippingInfoClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.ShippingInfoClient.SetShippingInfoClient(System.String,Mozu.Api.Contracts.CommerceRuntime.Shipping.ShippingInfo)">
            <summary>
            Updates one or more propertes of shipping information for the specified order.
            </summary>
            <param name="orderId">Unique identifier of the order associated with the shipping information to update.</param>
            <param name="shippingInfo">Container for the shipping information associated with an order.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Shipping.ShippingInfo"/>}
            </returns>
            <example>
            <code>
              var mozuClient=SetShippingInfo( orderId,  shippingInfo);
              var shippingInfoClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.ShippingInfoClient.SetShippingInfoClient(System.String,System.String,System.String,Mozu.Api.Contracts.CommerceRuntime.Shipping.ShippingInfo)">
            <summary>
            Updates one or more propertes of shipping information for the specified order.
            </summary>
            <param name="orderId">Unique identifier of the order associated with the shipping information to update.</param>
            <param name="updateMode">Specifies whether to set the shipping information by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal", "ApplyToDraft", or "ApplyAndCommit".</param>
            <param name="version">If applicable, the version of the order or draft for which to set the shipping information.</param>
            <param name="shippingInfo">Container for the shipping information associated with an order.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Shipping.ShippingInfo"/>}
            </returns>
            <example>
            <code>
              var mozuClient=SetShippingInfo( orderId,  updateMode,  version,  shippingInfo);
              var shippingInfoClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.ReturnClient">
            <summary>
            Use the returns subresource to manage returned items for a completed order. Returns can include any number of items associated with the original order.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.ReturnClient.GetReturnsClient">
            <summary>
            Retrieves a list of all returns according to any filter and sort criteria.
            </summary>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetReturns();
              var returnCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.ReturnClient.GetReturnsClient(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Retrieves a list of all returns according to any filter and sort criteria.
            </summary>
            <param name="filter"></param>
            <param name="pageSize"></param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetReturns( filter,  pageSize,  sortBy,  startIndex);
              var returnCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.ReturnClient.GetReturnClient(System.String)">
            <summary>
            Retrieves a list of properties for the specified return.
            </summary>
            <param name="returnId">Returns the properties of the return specified in the request as well as system-supplied information.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Returns.Return"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetReturn( returnId);
              var returnClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.ReturnClient.GetAvailableReturnActionsClient(System.String)">
            <summary>
            Retrieves a list of the actions available to perform for the specified return based on its current state.
            </summary>
            <param name="returnId">Retrieves a list of the actions available to perform for the specified return based on its current state.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{string}}
            </returns>
            <example>
            <code>
              var mozuClient=GetAvailableReturnActions( returnId);
              var stringClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.ReturnClient.GetPaymentsClient(System.String)">
            <summary>
            Retrieves a list of all payments submitted as part of a refund associated with a customer return.
            </summary>
            <param name="returnId">Returns the details of the refund payment associated with the return specified in the request.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetPayments( returnId);
              var paymentCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.ReturnClient.GetPaymentClient(System.String,System.String)">
            <summary>
            Retrieves the details of a payment submitted as part of a refund associated with a customer return.
            </summary>
            <param name="paymentId">Unique identifier of the return payment to retrieve.</param>
            <param name="returnId">Unique identifier of the return associated with the payment.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Payments.Payment"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetPayment( paymentId,  returnId);
              var paymentClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.ReturnClient.GetAvailablePaymentActionsForReturnClient(System.String,System.String)">
            <summary>
            Retrieves a list of the payment actions available to perform for the specified return when a return results in a refund to the customer.
            </summary>
            <param name="paymentId">Unique identifier of the payment for which to perform the action.</param>
            <param name="returnId">Unique identifier of the return associated with the payment.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{string}}
            </returns>
            <example>
            <code>
              var mozuClient=GetAvailablePaymentActionsForReturn( paymentId,  returnId);
              var stringClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.ReturnClient.CreateReturnClient(Mozu.Api.Contracts.CommerceRuntime.Returns.Return)">
            <summary>
            Creates a return for items previously shipped in a completed order.
            </summary>
            <param name="ret">Wrapper for the properties of the return to create.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Returns.Return"/>}
            </returns>
            <example>
            <code>
              var mozuClient=CreateReturn( ret);
              var returnClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.ReturnClient.PerformPaymentActionForReturnClient(System.String,System.String,Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentAction)">
            <summary>
            Updates a refund payment associated with a customer return by performing the specified action.
            </summary>
            <param name="paymentId">Unique identifier of the return payment to update.</param>
            <param name="returnId">Unique identifier of the return associated with the refund payment.</param>
            <param name="action">The payment action to perform for the refund payment.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Returns.Return"/>}
            </returns>
            <example>
            <code>
              var mozuClient=PerformPaymentActionForReturn( paymentId,  returnId,  action);
              var returnClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.ReturnClient.CreatePaymentActionForReturnClient(System.String,Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentAction)">
            <summary>
            Creates a new payment for a return that results in a refund to the customer.
            </summary>
            <param name="returnId">Unique identifier of the return associated with the payment action.</param>
            <param name="action">The payment action to perform for the customer return.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Returns.Return"/>}
            </returns>
            <example>
            <code>
              var mozuClient=CreatePaymentActionForReturn( returnId,  action);
              var returnClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.ReturnClient.PerformReturnActionsClient(Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnAction)">
            <summary>
            Updates the return by performing the specified action.
            </summary>
            <param name="action">The name of the return action to perform, such as "Refund" or "Replace".</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=PerformReturnActions( action);
              var returnCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.ReturnClient.UpdateReturnClient(System.String,Mozu.Api.Contracts.CommerceRuntime.Returns.Return)">
            <summary>
            Updates one or more properties of a return for items previously shipped in a completed order.
            </summary>
            <param name="returnId">Unique identifier of the return.</param>
            <param name="ret">Wrapper for the array of properties to update for the return.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Returns.Return"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateReturn( returnId,  ret);
              var returnClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.ReturnClient.DeleteReturnClient(System.String)">
             <summary>
             Deletes a return previously configured for the specified order.
             </summary>
             <param name="returnId">Unique identifier of the return to delete from the order.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteReturn( returnId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Returns.PackageClient">
            <summary>
            Use the return packages subresource to manage packages used to ship return replacement items.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Returns.PackageClient.GetPackageClient(System.String,System.String)">
            <summary>
            Retrieves the details of a package of return replacement items.
            </summary>
            <param name="packageId">Unique identifier of the return replacement package to retrieve.</param>
            <param name="returnId">Unique identifier of the return associated with the replacement package to retrieve.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Shipping.Package"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetPackage( packageId,  returnId);
              var packageClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Returns.PackageClient.GetPackageLabelClient(System.String,System.String)">
             <summary>
             Retrieves the package label image supplied by the carrier for a return replacement.
             </summary>
             <param name="packageId">Unique identifier of the return replacement package for which to retrieve the label.</param>
             <param name="returnId">Unique identifier of the return associated with the replacement package label to retrieve.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=GetPackageLabel( packageId,  returnId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Returns.PackageClient.CreatePackageClient(System.String,Mozu.Api.Contracts.CommerceRuntime.Shipping.Package)">
            <summary>
            Creates a new physical package of return replacement items.
            </summary>
            <param name="returnId">Unique identifier of the return for which to create a replacement package.</param>
            <param name="package">Properties of the physical package for a return replacement.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Shipping.Package"/>}
            </returns>
            <example>
            <code>
              var mozuClient=CreatePackage( returnId,  pkg);
              var packageClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Returns.PackageClient.UpdatePackageClient(System.String,System.String,Mozu.Api.Contracts.CommerceRuntime.Shipping.Package)">
            <summary>
            Updates one or more properties of a package associated with a return replacement.
            </summary>
            <param name="packageId">Unique identifier of the return replacement package to update.</param>
            <param name="returnId">Unique identifier of the return associated with the replacement package to update.</param>
            <param name="package">Properties of the return replacement package to update.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Shipping.Package"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdatePackage( packageId,  returnId,  pkg);
              var packageClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Returns.PackageClient.DeletePackageClient(System.String,System.String)">
             <summary>
             Deletes a package associated with a return replacement.
             </summary>
             <param name="packageId">Unique identifier of the return replacement package to delete.</param>
             <param name="returnId">Unique identifier of the return associated with the replacement package to delete.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeletePackage( packageId,  returnId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Returns.ShipmentClient">
            <summary>
            Use the return shipments subresource to manage shipments for a return replacement.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Returns.ShipmentClient.GetShipmentClient(System.String,System.String)">
            <summary>
            Retrieves the details of the specified return replacement shipment.
            </summary>
            <param name="returnId">Unique identifier of the return associated with the replacement shipment to retrieve.</param>
            <param name="shipmentId">Unique identifier of the return replacement shipment to retrieve.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Shipping.Shipment"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetShipment( returnId,  shipmentId);
              var shipmentClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Returns.ShipmentClient.CreatePackageShipmentsClient(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Creates a shipment from one or more packages associated with a return replacement.
            </summary>
            <param name="returnId">Unique identifier of the return for which to create replacement package shipments.</param>
            <param name="packageIds">List of packages in the return replacement shipment.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Shipping.Package"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=CreatePackageShipments( returnId,  packageIds);
              var packageClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Returns.ShipmentClient.DeleteShipmentClient(System.String,System.String)">
             <summary>
             Deletes a shipment for a return replacement.
             </summary>
             <param name="returnId">Unique identifier of the return associated with the replacement shipment to delete.</param>
             <param name="shipmentId">Unique identifier of the return replacement shipment to delete.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteShipment( returnId,  shipmentId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Settings.ApplicationClient">
            <summary>
            Use the applications subresource to update site settings for installed applications.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Settings.ApplicationClient.ThirdPartyUpdateApplicationClient(Mozu.Api.Contracts.SiteSettings.Application.Application)">
            <summary>
            Initializes an application with the necessary configured settings.
            </summary>
            <param name="application">Properties of the application to update.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.SiteSettings.Application.Application"/>}
            </returns>
            <example>
            <code>
              var mozuClient=ThirdPartyUpdateApplication( application);
              var applicationClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Settings.CapabilityClient">
            <summary>
            
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Settings.CapabilityClient.GetCapabilitiesClient(System.String)">
            <summary>
            
            </summary>
            <param name="filter"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.Core.ThirdParty.Capability"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=GetCapabilities( filter);
              var capabilityClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Settings.CheckoutSettingsClient">
            <summary>
            Specify sitewide settings to determine how checkout and order processing behaves. This service includes payment settings, customer checkout settings, and order processing settings.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Settings.CheckoutSettingsClient.GetCheckoutSettingsClient">
            <summary>
            Retrieves all checkout settings defined for the site including payment settings (payment gateway ID and credentials), shopper checkout settings (login requirement or guest mode and custom attributes), and order processing settings (when payment is authorized and captured plus any custom attributes).
            </summary>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.SiteSettings.Order.CheckoutSettings"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetCheckoutSettings();
              var checkoutSettingsClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Settings.Checkout.CustomerCheckoutSettingsClient">
            <summary>
            Settings for the checkout login. Choose whether or not shoppers must first login before a purchase can be processed. Choose the option for guests to purchase without logging in, prompt guests to login, or require them to login before a purchase can be completed.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Settings.Checkout.CustomerCheckoutSettingsClient.GetCustomerCheckoutSettingsClient">
            <summary>
            Retrieves all checkout settings defined for the site: Payment settings, such as the payment gateway ID and credentials, supported credit cards, and more; Customer Checkout settings, such as whether login is required, and any custom attributes; and Order Processing settings, such as when payment is authorized and captured, and any custom attributes.
            </summary>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.SiteSettings.Order.CustomerCheckoutSettings"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetCustomerCheckoutSettings();
              var customerCheckoutSettingsClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Settings.Checkout.CustomerCheckoutSettingsClient.UpdateCustomerCheckoutSettingsClient(Mozu.Api.Contracts.SiteSettings.Order.CustomerCheckoutSettings)">
            <summary>
            Modifies existing site checkout settings. Modify Payment, Customer Checkout, and Order Processing settings in one PUT.
            </summary>
            <param name="customerCheckoutSettings">All the properties to update in the checkout settings.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.SiteSettings.Order.CustomerCheckoutSettings"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateCustomerCheckoutSettings( customerCheckoutSettings);
              var customerCheckoutSettingsClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Settings.Checkout.OrderProcessingSettingsClient">
            <summary>
            Use the order processing settings resource to define how orders and payments are processed for the site.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Settings.Checkout.OrderProcessingSettingsClient.GetOrderProcessingSettingsClient">
            <summary>
            Retrieves a list of the order processing settings defined for the site.
            </summary>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.SiteSettings.Order.OrderProcessingSettings"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetOrderProcessingSettings();
              var orderProcessingSettingsClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Settings.Checkout.OrderProcessingSettingsClient.UpdateOrderProcessingSettingsClient(Mozu.Api.Contracts.SiteSettings.Order.OrderProcessingSettings)">
            <summary>
            Updates the order processing settings defined for the site.
            </summary>
            <param name="orderProcessingSettings">List of the order processing settings to define for the site.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.SiteSettings.Order.OrderProcessingSettings"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateOrderProcessingSettings( orderProcessingSettings);
              var orderProcessingSettingsClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Settings.Checkout.PaymentSettingsClient">
            <summary>
            Specify settings when creating payments for order checkout on the site.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Settings.Checkout.PaymentSettingsClient.GetPaymentSettingsClient">
            <summary>
            Retrieves a list of the payment settings for the specified site.
            </summary>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.SiteSettings.Order.PaymentSettings"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetPaymentSettings();
              var paymentSettingsClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Settings.Checkout.PaymentSettingsClient.GetActiveGatewayForCountryClient(System.String)">
            <summary>
            
            </summary>
            <param name="countryCode"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.SiteSettings.Order.Gateway"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetActiveGatewayForCountry( countryCode);
              var gatewayClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Settings.Checkout.PaymentSettingsClient.GetGatewayDefinitionsClient">
            <summary>
            
            </summary>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.PaymentService.GatewayDefinition"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=GetGatewayDefinitions();
              var gatewayDefinitionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Settings.Checkout.PaymentSettingsClient.GetGatewayClient(System.String)">
            <summary>
            
            </summary>
            <param name="gatewayId"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.SiteSettings.Order.Gateway"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetGateway( gatewayId);
              var gatewayClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Settings.Checkout.PaymentSettingsClient.CreateGatewayClient(Mozu.Api.Contracts.SiteSettings.Order.Gateway)">
            <summary>
            
            </summary>
            <param name="gateway"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.SiteSettings.Order.Gateway"/>}
            </returns>
            <example>
            <code>
              var mozuClient=CreateGateway( gateway);
              var gatewayClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Settings.Checkout.PaymentSettingsClient.UpdatePaymentSettingsClient(Mozu.Api.Contracts.SiteSettings.Order.PaymentSettings)">
            <summary>
            Updates one or more properties in the configured payment settings for a site.
            </summary>
            <param name="paymentSettings">Properties of the payment settings to use for the site.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.SiteSettings.Order.PaymentSettings"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdatePaymentSettings( paymentSettings);
              var paymentSettingsClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Settings.Checkout.PaymentSettingsClient.UpdateGatewayClient(System.String,Mozu.Api.Contracts.SiteSettings.Order.Gateway)">
            <summary>
            
            </summary>
            <param name="gatewayId"></param>
            <param name="gateway"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.SiteSettings.Order.Gateway"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateGateway( gatewayId,  gateway);
              var gatewayClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Settings.GeneralSettingsClient">
            <summary>
            Define global site settings such as the site name, shipping and email addresses, and logo images. Block undesirable IP addresses using this resource.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Settings.GeneralSettingsClient.GetGeneralSettingsClient">
            <summary>
            Retrieve a site's general global settings.
            </summary>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.SiteSettings.General.GeneralSettings"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetGeneralSettings();
              var generalSettingsClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Settings.GeneralSettingsClient.UpdateGeneralSettingsClient(Mozu.Api.Contracts.SiteSettings.General.GeneralSettings)">
            <summary>
            Updates a site's general global settings.
            </summary>
            <param name="generalSettings">The properties of the site's general settings to update.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.SiteSettings.General.GeneralSettings"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateGeneralSettings( generalSettings);
              var generalSettingsClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Settings.General.IPBlockClient">
            <summary>
            General site setting subresource to define global settings for the site such as website name, shipping and email addresses, and logo images. Also, block undesirable IP addresses using this resource.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Settings.General.IPBlockClient.GetIPBlocksClient">
            <summary>
            Retrieves a list of IP blocks.
            </summary>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.SiteSettings.General.IPBlockCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetIPBlocks();
              var iPBlockCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Settings.General.IPBlockClient.GetIPBlockClient(System.Int32)">
            <summary>
            Retrieve the details of a single IP block by providing the IP block ID.
            </summary>
            <param name="ipBlockId">Unique identifier of the IP block.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.SiteSettings.General.IPBlock"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetIPBlock( ipBlockId);
              var iPBlockClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Settings.General.IPBlockClient.CreateIPBlockClient(Mozu.Api.Contracts.SiteSettings.General.IPBlock)">
            <summary>
            Create a new IP block to deny server access. Prevents undesirable connections such as brute force attacks. Block access to the storefront, admin area, or both.
            </summary>
            <param name="ipBlock">Properties of the IP block.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.SiteSettings.General.IPBlock"/>}
            </returns>
            <example>
            <code>
              var mozuClient=CreateIPBlock( ipBlock);
              var iPBlockClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Settings.General.IPBlockClient.UpdateIPBlockClient(System.Int32,Mozu.Api.Contracts.SiteSettings.General.IPBlock)">
            <summary>
            Modifies an IP block.
            </summary>
            <param name="ipBlockId">Identifier of the IP block.</param>
            <param name="ipBlock">Properties of the IP block.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.SiteSettings.General.IPBlock"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateIPBlock( ipBlockId,  ipBlock);
              var iPBlockClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Settings.General.IPBlockClient.DeleteIPBlockClient(System.Int32)">
             <summary>
             Delete the IP block specified by the IP block ID.
             </summary>
             <param name="ipBlockId">Unique identifier of the IP block.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteIPBlock( ipBlockId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Settings.General.TaxableTerritoryClient">
            <summary>
            Use the taxable territories subresource to manage the regional territories for this site that are subejct to sales tax.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Settings.General.TaxableTerritoryClient.GetTaxableTerritoriesClient">
            <summary>
            Retrieves a list of the taxable territories configured for the site.
            </summary>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.SiteSettings.General.TaxableTerritory"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=GetTaxableTerritories();
              var taxableTerritoryClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Settings.General.TaxableTerritoryClient.AddTaxableTerritoryClient(Mozu.Api.Contracts.SiteSettings.General.TaxableTerritory)">
            <summary>
            Creates a new territory for which to calculate sales tax.
            </summary>
            <param name="taxableTerritory">Properties of the taxable territory to create.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.SiteSettings.General.TaxableTerritory"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddTaxableTerritory( taxableTerritory);
              var taxableTerritoryClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Settings.General.TaxableTerritoryClient.UpdateTaxableTerritoriesClient(System.Collections.Generic.List{Mozu.Api.Contracts.SiteSettings.General.TaxableTerritory})">
            <summary>
            Updates one or more taxable territories configured for a site.
            </summary>
            <param name="taxableterritories">Properties of the taxable territories to update.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.SiteSettings.General.TaxableTerritory"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateTaxableTerritories( taxableterritories);
              var taxableTerritoryClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Settings.Shipping.ContactClient">
            <summary>
            Use this subresource to manage the physical address from which shipments for this site will originate.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Settings.Shipping.ContactClient.GetShippingOriginAddressClient">
            <summary>
            Retrieves the physical address from which shipments originate from the site's shipping settings.
            </summary>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Core.Contact"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetShippingOriginAddress();
              var contactClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Settings.Shipping.ContactClient.CreateShippingOriginAddressClient(Mozu.Api.Contracts.Core.Contact)">
            <summary>
            Creates the site's shipping origin address as it appears in shipping settings.
            </summary>
            <param name="siteShippingOriginAddress">New shipping origin address to create. Required properties: SiteShippingOriginAddress.Sender Name, .Address1, .CityOrTown, .StateOrProvince, .PostalOrZipCode, .Country.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Core.Contact"/>}
            </returns>
            <example>
            <code>
              var mozuClient=CreateShippingOriginAddress( siteShippingOriginAddress);
              var contactClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Settings.Shipping.ContactClient.UpdateShippingOriginAddressClient(Mozu.Api.Contracts.Core.Contact)">
            <summary>
            Updates the site's shipping origin address as it appears in shipping settings.
            </summary>
            <param name="siteShippingOriginAddress">Properties of the site's shipping origin address. Required properties: SiteShippingOriginAddress.Sender Name, .Address1, .CityOrTown, .StateOrProvince, .PostalOrZipCode, .Country.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Core.Contact"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateShippingOriginAddress( siteShippingOriginAddress);
              var contactClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Settings.Shipping.FeatureClient">
            <summary>
            Use the active rate providers subresource to manage entities that provide estimated shipping rate calculations. Active rate providers represent carrier configurations set up in the shipping admin service.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Settings.Shipping.FeatureClient.GetActiveRateProvidersClient">
            <summary>
            Retrieves a list of the active rate providers configured for the site.
            </summary>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.Core.Feature"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=GetActiveRateProviders();
              var featureClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Settings.Shipping.FeatureClient.AddActiveRateProviderClient(Mozu.Api.Contracts.Core.Feature)">
            <summary>
            Creates a new active rate provider for the site.
            </summary>
            <param name="activeRateProvider">Properties of the active rate provider to create.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Core.Feature"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddActiveRateProvider( activeRateProvider);
              var featureClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Settings.Shipping.FeatureClient.UpdateActiveRateProvidersClient(System.Collections.Generic.List{Mozu.Api.Contracts.Core.Feature})">
            <summary>
            Updates the active rate providers configured for the site.
            </summary>
            <param name="activeRateProviders">Properties of the active rate provider to update.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.Core.Feature"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateActiveRateProviders( activeRateProviders);
              var featureClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Settings.Shipping.SiteShippingHandlingFeeClient">
            <summary>
            Use the Order Handling Fee subresource to configure any shipping and handling fees to apply to orders for this site.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Settings.Shipping.SiteShippingHandlingFeeClient.GetOrderHandlingFeeClient">
            <summary>
            Retrieves the details of the order handling fee configured for the site.
            </summary>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.SiteSettings.Shipping.SiteShippingHandlingFee"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetOrderHandlingFee();
              var siteShippingHandlingFeeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Settings.Shipping.SiteShippingHandlingFeeClient.CreateOrderHandlingFeeClient(Mozu.Api.Contracts.SiteSettings.Shipping.SiteShippingHandlingFee)">
            <summary>
            Creates a new order handling fee for the site.
            </summary>
            <param name="orderHandlingFee">Properties of the order handling fee to assess for order shipment.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.SiteSettings.Shipping.SiteShippingHandlingFee"/>}
            </returns>
            <example>
            <code>
              var mozuClient=CreateOrderHandlingFee( orderHandlingFee);
              var siteShippingHandlingFeeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Settings.Shipping.SiteShippingHandlingFeeClient.UpdateOrderHandlingFeeClient(Mozu.Api.Contracts.SiteSettings.Shipping.SiteShippingHandlingFee)">
            <summary>
            Updates the order handling fee amount for the site.
            </summary>
            <param name="orderHandlingFee">The combined price for all items in the order, including all selected options but excluding any discounts.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.SiteSettings.Shipping.SiteShippingHandlingFee"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateOrderHandlingFee( orderHandlingFee);
              var siteShippingHandlingFeeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Settings.Shipping.SiteShippingRegionClient">
            <summary>
            Use the site shipping regions subresource to manage the territories to which the site will ship products. Currently, only domestic shipping is supported.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Settings.Shipping.SiteShippingRegionClient.GetShippingRegionsClient">
            <summary>
            Retrieves a list of the shipping regions configured for the site.
            </summary>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.SiteSettings.Shipping.SiteShippingRegion"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=GetShippingRegions();
              var siteShippingRegionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Settings.Shipping.SiteShippingRegionClient.UpdateShippingRegionsClient(System.Collections.Generic.List{Mozu.Api.Contracts.SiteSettings.Shipping.SiteShippingRegion})">
            <summary>
            Updates the shipping regions configured for a site.
            </summary>
            <param name="siteShippingRegions">Properties of the shipping region configured for this site.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.SiteSettings.Shipping.SiteShippingRegion"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateShippingRegions( siteShippingRegions);
              var siteShippingRegionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Settings.Shipping.SiteShippingRegionClient.DeleteShippingRegionsClient">
             <summary>
             Deletes the shipping regions configured for this site.
             </summary>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteShippingRegions();
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Settings.SiteShippingSettingsClient">
            <summary>
            Use the shipping subresource to manage settings for the site shipping information, such as origin address information, carrier shipping methods, shipping rate providers, and regions available for shipping.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Settings.SiteShippingSettingsClient.GetSiteShippingSettingsClient">
            <summary>
            Retrieves a list of the shipping settings configured for a site.
            </summary>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.SiteSettings.Shipping.SiteShippingSettings"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetSiteShippingSettings();
              var siteShippingSettingsClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Content.DocumentDraftSummaryClient">
            <summary>
            Use the document publishing subresource to manage and publish document drafts in the Content service.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Content.DocumentDraftSummaryClient.ListDocumentDraftSummariesClient">
            <summary>
            Retrieves a list of the documents currently in draft state, according to any defined filter and sort criteria.
            </summary>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Content.DocumentDraftSummaryPagedCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=ListDocumentDraftSummaries();
              var documentDraftSummaryPagedCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.DocumentDraftSummaryClient.ListDocumentDraftSummariesClient(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Retrieves a list of the documents currently in draft state, according to any defined filter and sort criteria.
            </summary>
            <param name="documentLists">Lists that contain the document drafts.</param>
            <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="startIndex">Indicates the zero-based offset in the complete result set where the returned entities begin, when creating paged results from a query. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Content.DocumentDraftSummaryPagedCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=ListDocumentDraftSummaries( documentLists,  pageSize,  startIndex);
              var documentDraftSummaryPagedCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.DocumentDraftSummaryClient.PublishDocumentsClient(System.Collections.Generic.List{System.String})">
             <summary>
             Publish one or more document drafts to live content on the site.
             </summary>
             <param name="documentIds">List of unique identifiers of the document drafts to publish.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=PublishDocuments( documentIds);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.DocumentDraftSummaryClient.PublishDocumentsClient(System.String,System.Collections.Generic.List{System.String})">
             <summary>
             Publish one or more document drafts to live content on the site.
             </summary>
             <param name="documentLists">List of document lists that contain documents to publish.</param>
             <param name="documentIds">List of unique identifiers of the document drafts to publish.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=PublishDocuments( documentLists,  documentIds);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.DocumentDraftSummaryClient.DeleteDocumentDraftsClient(System.String)">
             <summary>
             Deletes the drafts of the specified documents. Published documents cannot be deleted.
             </summary>
             <param name="documentIds">Unique identifiers of the documents to delete.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteDocumentDrafts( documentIds);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.DocumentDraftSummaryClient.DeleteDocumentDraftsClient(System.String,System.String)">
             <summary>
             Deletes the drafts of the specified documents. Published documents cannot be deleted.
             </summary>
             <param name="documentIds">Unique identifiers of the documents to delete.</param>
             <param name="documentLists">List of document lists that contain documents to delete.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteDocumentDrafts( documentIds,  documentLists);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Content.DocumentListClient">
            <summary>
            Use the document lists resource to organize your site's documents into a hierarchy. Document lists can contain documents, folders, and complete hierarchies of folders, which contain documents with unique names.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Content.DocumentListClient.GetDocumentListsClient">
            <summary>
            Retrieves a collection of document lists.
            </summary>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Content.DocumentListCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetDocumentLists();
              var documentListCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.DocumentListClient.GetDocumentListsClient(System.Nullable{System.Int64},System.String,System.Nullable{System.Int64})">
            <summary>
            Retrieves a collection of document lists.
            </summary>
            <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="sort"></param>
            <param name="startIndex"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Content.DocumentListCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetDocumentLists( pageSize,  sort,  startIndex);
              var documentListCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.DocumentListClient.GetDocumentListClient(System.String)">
            <summary>
            Retrieve the details of a document list by providing the list name.
            </summary>
            <param name="documentListName">The name of the document list.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Content.DocumentList"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetDocumentList( documentListName);
              var documentListClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Content.Documentlists.DocumentClient">
            <summary>
            Use this subresource to manage documents in a document list.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Content.Documentlists.DocumentClient.GetDocumentContentClient(System.String,System.String)">
             <summary>
             Retrieve the content associated with a document, such as a product image or PDF specifications file, by supplying the document ID.
             </summary>
             <param name="documentId">Unique identifier of the document.</param>
             <param name="documentListName">The name of the document list associated with the document.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=GetDocumentContent( documentId,  documentListName);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.Documentlists.DocumentClient.GetDocumentContentClient(System.String,System.String,System.String)">
             <summary>
             Retrieve the content associated with a document, such as a product image or PDF specifications file, by supplying the document ID.
             </summary>
             <param name="documentId">Unique identifier of the document.</param>
             <param name="documentListName">The name of the document list associated with the document.</param>
             <param name="publishState">The current state of the document, which is Active, Draft, or Latest. Active documents are published and cannot be deleted. Querying Latest returns the most recent version of the document, regardless of whether it is published or a draft.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=GetDocumentContent( documentId,  documentListName,  publishState);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.Documentlists.DocumentClient.GetDocumentClient(System.String,System.String)">
            <summary>
            Retrieves a specific document within the specified document list by providing the document ID.
            </summary>
            <param name="documentId">Identifier of the document being retrieved.</param>
            <param name="documentListName">The name of the document list associated with the document to retrieve.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Content.Document"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetDocument( documentId,  documentListName);
              var documentClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.Documentlists.DocumentClient.GetDocumentClient(System.String,System.String,System.String)">
            <summary>
            Retrieves a specific document within the specified document list by providing the document ID.
            </summary>
            <param name="documentId">Identifier of the document being retrieved.</param>
            <param name="documentListName">The name of the document list associated with the document to retrieve.</param>
            <param name="publishState">The current state of the document, which is Active, Draft, or Latest. Active documents are published and cannot be deleted. Querying Latest returns the most recent version of the document, regardless of whether it is published or a draft.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Content.Document"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetDocument( documentId,  documentListName,  publishState);
              var documentClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.Documentlists.DocumentClient.GetDocumentsClient(System.String)">
            <summary>
            Retrieves a collection of documents according to any filter and sort criteria.
            </summary>
            <param name="documentListName">The name of the document list.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Content.DocumentCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetDocuments( documentListName);
              var documentCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.Documentlists.DocumentClient.GetDocumentsClient(System.String,System.String,System.Nullable{System.Int64},System.String,System.String,System.Nullable{System.Int64})">
            <summary>
            Retrieves a collection of documents according to any filter and sort criteria.
            </summary>
            <param name="documentListName">The name of the document list.</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. You can filter a document's search results by any of its properties, including its name or folder path. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). <b>For example - "filter=Name+sw+Events"</b></param>
            <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="publishState">The current state of the document, which is Active, Draft, or Latest. Active documents are published and cannot be deleted. Querying Latest returns the most recent version of the document, regardless of whether it is published or a draft.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">Indicates the zero-based offset in the complete result set where the returned entities begin, when creating paged results from a query. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Content.DocumentCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetDocuments( documentListName,  filter,  pageSize,  publishState,  sortBy,  startIndex);
              var documentCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.Documentlists.DocumentClient.CreateDocumentClient(System.String,Mozu.Api.Contracts.Content.Document)">
            <summary>
            Creates a new document in an existing list.
            </summary>
            <param name="documentListName">The descriptive alphanumeric document list name being created.</param>
            <param name="document">The descriptive name of the newly created document.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Content.Document"/>}
            </returns>
            <example>
            <code>
              var mozuClient=CreateDocument( documentListName,  document);
              var documentClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.Documentlists.DocumentClient.CreateDocumentClient(System.String,System.String,Mozu.Api.Contracts.Content.Document)">
            <summary>
            Creates a new document in an existing list.
            </summary>
            <param name="documentListName">The descriptive alphanumeric document list name being created.</param>
            <param name="publishState">The current state of the document, which is Active, Draft, or Latest. Active documents are published and cannot be deleted. Querying Latest returns the most recent version of the document, regardless of whether it is published or a draft.</param>
            <param name="document">The descriptive name of the newly created document.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Content.Document"/>}
            </returns>
            <example>
            <code>
              var mozuClient=CreateDocument( documentListName,  publishState,  document);
              var documentClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.Documentlists.DocumentClient.UpdateDocumentContentClient(System.String,System.String)">
             <summary>
             Updates the content associated with a document, such as a product image or PDF specifications file, by supplying the document ID.
             </summary>
             <param name="documentId">Unique identifier of the document.</param>
             <param name="documentListName">The name of the document list associated with the document.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=UpdateDocumentContent( documentId,  documentListName);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.Documentlists.DocumentClient.UpdateDocumentClient(System.String,System.String,Mozu.Api.Contracts.Content.Document)">
            <summary>
            Updates a document in a document list.
            </summary>
            <param name="documentId">Unique identifier of the document to update.</param>
            <param name="documentListName">Name of the document list associated with the document.</param>
            <param name="document">Properties of the document to update.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Content.Document"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateDocument( documentId,  documentListName,  document);
              var documentClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.Documentlists.DocumentClient.UpdateDocumentClient(System.String,System.String,System.String,Mozu.Api.Contracts.Content.Document)">
            <summary>
            Updates a document in a document list.
            </summary>
            <param name="documentId">Unique identifier of the document to update.</param>
            <param name="documentListName">Name of the document list associated with the document.</param>
            <param name="publishState">The current state of the document, which is Active, Draft, or Latest. Active documents are published and cannot be deleted. Querying Latest returns the most recent version of the document, regardless of whether it is published or a draft.</param>
            <param name="document">Properties of the document to update.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Content.Document"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateDocument( documentId,  documentListName,  publishState,  document);
              var documentClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.Documentlists.DocumentClient.DeleteDocumentContentClient(System.String,System.String)">
             <summary>
             Deletes the content associated with a document, such as a product image or PDF specification, by supplying the document ID.
             </summary>
             <param name="documentId">Unique identifier of the document.</param>
             <param name="documentListName">The name of the document list associated with the document.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteDocumentContent( documentId,  documentListName);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.Documentlists.DocumentClient.DeleteDocumentClient(System.String,System.String)">
             <summary>
             Deletes a specific document based on the specified document ID.
             </summary>
             <param name="documentId">Identifier of the document being deleted.</param>
             <param name="documentListName">The name of the document list associated with the document list being deleted.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteDocument( documentId,  documentListName);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.Documentlists.DocumentClient.DeleteDocumentClient(System.String,System.String,System.String)">
             <summary>
             Deletes a specific document based on the specified document ID.
             </summary>
             <param name="documentId">Identifier of the document being deleted.</param>
             <param name="documentListName">The name of the document list associated with the document list being deleted.</param>
             <param name="publishState">The current state of the document, which is Active, Draft, or Latest. Active documents are published and cannot be deleted. Querying Latest returns the most recent version of the document, regardless of whether it is published or a draft.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteDocument( documentId,  documentListName,  publishState);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Content.Documentlists.DocumentTreeClient">
            <summary>
            Use the document tree subresource to retrieve documents and manage content within the document hierarchy.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Content.Documentlists.DocumentTreeClient.GetTreeDocumentContentClient(System.String,System.String)">
             <summary>
             Retrieve the content associated with the document, such as a product image or PDF specifications file.
             </summary>
             <param name="documentListName">The name of the document list associated with the document.</param>
             <param name="documentName">The name of the document, which is unique within its folder.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=GetTreeDocumentContent( documentListName,  documentName);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.Documentlists.DocumentTreeClient.GetTreeDocumentContentClient(System.String,System.String,System.String,System.String,System.String)">
             <summary>
             Retrieve the content associated with the document, such as a product image or PDF specifications file.
             </summary>
             <param name="documentListName">The name of the document list associated with the document.</param>
             <param name="documentName">The name of the document, which is unique within its folder.</param>
             <param name="folderId">If applicable, the unique identifier of the folder that contains the document.</param>
             <param name="folderPath">If applicable, the path of the folder hierarchy location associated with the document.</param>
             <param name="publishState">The current state of the document, which is Active, Draft, or Latest. Active documents are published and cannot be deleted. Querying Latest returns the most recent version of the document, regardless of whether it is published or a draft.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=GetTreeDocumentContent( documentListName,  documentName,  folderId,  folderPath,  publishState);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.Documentlists.DocumentTreeClient.GetTreeDocumentClient(System.String,System.String)">
            <summary>
            Retrieves a document based on its document list and folder path in the document hierarchy.
            </summary>
            <param name="documentListName">The name of the document list associated with the document.</param>
            <param name="documentName">The name of the document, which is unique within its folder.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Content.Document"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetTreeDocument( documentListName,  documentName);
              var documentClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.Documentlists.DocumentTreeClient.GetTreeDocumentClient(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Retrieves a document based on its document list and folder path in the document hierarchy.
            </summary>
            <param name="documentListName">The name of the document list associated with the document.</param>
            <param name="documentName">The name of the document, which is unique within its folder.</param>
            <param name="folderId">If applicable, the unique identifier of the folder that contains the document.</param>
            <param name="folderPath">If applicable, the path of the folder hierarchy location that contains the document.</param>
            <param name="publishState">The current state of the document, which is Active, Draft, or Latest. Active documents are published and cannot be deleted. Querying Latest returns the most recent version of the document, regardless of whether it is published or a draft.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Content.Document"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetTreeDocument( documentListName,  documentName,  folderId,  folderPath,  publishState);
              var documentClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.Documentlists.DocumentTreeClient.UpdateTreeDocumentContentClient(System.String,System.String)">
             <summary>
             Updates the content associated with a document, such as a product image or PDF specifications file, based on the document's position in the document hierarchy.
             </summary>
             <param name="documentListName">The name of the document list associated with the document.</param>
             <param name="documentName">The name of the document, which is unique within its folder.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=UpdateTreeDocumentContent( documentListName,  documentName);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.Documentlists.DocumentTreeClient.UpdateTreeDocumentContentClient(System.String,System.String,System.String,System.String)">
             <summary>
             Updates the content associated with a document, such as a product image or PDF specifications file, based on the document's position in the document hierarchy.
             </summary>
             <param name="documentListName">The name of the document list associated with the document.</param>
             <param name="documentName">The name of the document, which is unique within its folder.</param>
             <param name="folderId">If applicable, the unique identifier of the folder that contains the document.</param>
             <param name="folderPath">If applicable, the path of the folder hierarchy location associated with the document.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=UpdateTreeDocumentContent( documentListName,  documentName,  folderId,  folderPath);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.Documentlists.DocumentTreeClient.DeleteTreeDocumentContentClient(System.String,System.String)">
             <summary>
             Deletes the content associated with a document, such as a product image or PDF specifications file.
             </summary>
             <param name="documentListName">The name of the document list associated with the document.</param>
             <param name="documentName">The name of the document, which is unique within its folder.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteTreeDocumentContent( documentListName,  documentName);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.Documentlists.DocumentTreeClient.DeleteTreeDocumentContentClient(System.String,System.String,System.String,System.String)">
             <summary>
             Deletes the content associated with a document, such as a product image or PDF specifications file.
             </summary>
             <param name="documentListName">The name of the document list associated with the document.</param>
             <param name="documentName">The name of the document, which is unique within its folder.</param>
             <param name="folderId">If applicable, the unique identifier of the folder that contains the document.</param>
             <param name="folderPath">If applicable, the path of the folder hierarchy location associated with the document.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteTreeDocumentContent( documentListName,  documentName,  folderId,  folderPath);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Content.Documentlists.FacetClient">
            <summary>
            Use the facets subresource to allow a merchant to add information for product indexing and searching.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Content.Documentlists.FacetClient.GetFacetsClient(System.String,System.String)">
            <summary>
            Retrieves the properties of facets that aid in indexing and searching.
            </summary>
            <param name="documentListName">The document list associated with the facets to retrieve.</param>
            <param name="propertyName">The property name associated with the facets to retrieve.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.Content.Facet"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=GetFacets( documentListName,  propertyName);
              var facetClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.Documentlists.FacetClient.GetFacetsClient(System.String,System.String,System.String)">
            <summary>
            Retrieves the properties of facets that aid in indexing and searching.
            </summary>
            <param name="documentListName">The document list associated with the facets to retrieve.</param>
            <param name="propertyName">The property name associated with the facets to retrieve.</param>
            <param name="publishState">The current state of the document, which is Active, Draft, or Latest. Active documents are published and cannot be deleted. Querying Latest returns the most recent version of the document, regardless of whether it is published or a draft.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.Content.Facet"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=GetFacets( documentListName,  propertyName,  publishState);
              var facetClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Content.Documentlists.FolderClient">
            <summary>
            Use the folders subresource to organize content into folders.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Content.Documentlists.FolderClient.GetFolderClient(System.String,System.String)">
            <summary>
            Retrieves the properties of an existing folder.
            </summary>
            <param name="documentListName">The name of the document list associated with the folder to retrieve.</param>
            <param name="folderId">The unique identifier of the folder to retrieve.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Content.Folder"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetFolder( documentListName,  folderId);
              var folderClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.Documentlists.FolderClient.GetFoldersClient(System.String,System.String)">
            <summary>
            Retrieve a list of content folders according to any filter and sort criteria.
            </summary>
            <param name="documentListName">The name of the document list that contains this folder.</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Content.FolderCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetFolders( documentListName,  filter);
              var folderCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.Documentlists.FolderClient.GetFoldersClient(System.String,System.String,System.Nullable{System.Int64},System.String,System.Nullable{System.Int64})">
            <summary>
            Retrieve a list of content folders according to any filter and sort criteria.
            </summary>
            <param name="documentListName">The name of the document list that contains this folder.</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="sort">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">Indicates the zero-based offset in the complete result set where the returned entities begin, when creating paged results from a query. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Content.FolderCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetFolders( documentListName,  filter,  pageSize,  sort,  startIndex);
              var folderCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.Documentlists.FolderClient.CreateFolderClient(System.String,Mozu.Api.Contracts.Content.Folder)">
            <summary>
            Creates a new folder.
            </summary>
            <param name="documentListName">The name of the document list for which to create a new folder.</param>
            <param name="folder">The name of the newly created folder.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Content.Folder"/>}
            </returns>
            <example>
            <code>
              var mozuClient=CreateFolder( documentListName,  folder);
              var folderClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.Documentlists.FolderClient.UpdateFolderClient(System.String,System.String,Mozu.Api.Contracts.Content.Folder)">
            <summary>
            Updates an existing content folder in a document list.
            </summary>
            <param name="documentListName">The name of the document list that contains this folder.</param>
            <param name="folderId">Unique identifier of the folder.</param>
            <param name="folder">Properties of the folder to update.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Content.Folder"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateFolder( documentListName,  folderId,  folder);
              var folderClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.Documentlists.FolderClient.DeleteFolderClient(System.String,System.String)">
             <summary>
             Deletes a folder of documents from the specified document list.
             </summary>
             <param name="documentListName">The name of the document list associated with the folder to delete.</param>
             <param name="folderId">The unique identifier of the folder to delete.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteFolder( documentListName,  folderId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Content.Documentlists.FolderTreeClient">
            <summary>
            Use the folder tree subresource to view individual folders in the document hierarchy.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Content.Documentlists.FolderTreeClient.GetFolderTreeClient(System.String)">
            <summary>
            Retrieves the folder hierarchy used to organize documents in lists.
            </summary>
            <param name="documentListName">The name of the document list that contains this folder hierarchy.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Content.FolderTree"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetFolderTree( documentListName);
              var folderTreeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.Documentlists.FolderTreeClient.GetFolderTreeClient(System.String,System.Nullable{System.Int64},System.String,System.String)">
            <summary>
            Retrieves the folder hierarchy used to organize documents in lists.
            </summary>
            <param name="documentListName">The name of the document list that contains this folder hierarchy.</param>
            <param name="levels">The number of levels in the folder hierarchy to return.</param>
            <param name="rootFolderId">The unique identifier of the top-level folder in the document list.</param>
            <param name="rootFolderPath">The location in the document hierarchy of the top-level folder in the document list.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Content.FolderTree"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetFolderTree( documentListName,  levels,  rootFolderId,  rootFolderPath);
              var folderTreeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Content.DocumentTypeClient">
            <summary>
            The DocumentTypes resource is a part of the Content Service.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Content.DocumentTypeClient.ListClient">
            <summary>
            Retrieves a paged list of DocumentTypes.
            </summary>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Content.DocumentTypeCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=List();
              var documentTypeCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.DocumentTypeClient.ListClient(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Retrieves a paged list of DocumentTypes.
            </summary>
            <param name="pageSize"></param>
            <param name="startIndex"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Content.DocumentTypeCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=List( pageSize,  startIndex);
              var documentTypeCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.DocumentTypeClient.GetClient(System.String)">
            <summary>
            Retrieves an existing DocumentType.
            </summary>
            <param name="documentTypeName">The documentType name being retrieved.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Content.DocumentType"/>}
            </returns>
            <example>
            <code>
              var mozuClient=Get( documentTypeName);
              var documentTypeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Content.PropertyTypeClient">
            <summary>
            Use the property types subresource to manage content properties.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Content.PropertyTypeClient.GetListClient">
            <summary>
            Retrieves a list of the content property types.
            </summary>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Content.PropertyTypeCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetList();
              var propertyTypeCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.PropertyTypeClient.GetListClient(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Retrieves a list of the content property types.
            </summary>
            <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="startIndex"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Content.PropertyTypeCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetList( pageSize,  startIndex);
              var propertyTypeCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.PropertyTypeClient.GetClient(System.String)">
            <summary>
            Retrieves the details of the content property type.
            </summary>
            <param name="propertyTypeName">The name of the content property type.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Content.PropertyType"/>}
            </returns>
            <example>
            <code>
              var mozuClient=Get( propertyTypeName);
              var propertyTypeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.PropertyTypeClient.PropertyValueTypesClient">
            <summary>
            Retrieves the value types associated with a content property.
            </summary>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.Content.PropertyValueType"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=PropertyValueTypes();
              var propertyValueTypeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Event.EventNotificationClient">
            <summary>
            Use the events resource to retreive events, which are notifications about a create, read, update, or delete operation.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Event.EventNotificationClient.GetEventsClient">
            <summary>
            Retrieves a list of events.
            </summary>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Event.EventCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetEvents();
              var eventCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Event.EventNotificationClient.GetEventsClient(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Retrieves a list of events.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Event.EventCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetEvents( filter,  pageSize,  sortBy,  startIndex);
              var eventCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Event.EventNotificationClient.GetEventClient(System.String)">
            <summary>
            Retrieves an event by providing the event ID.
            </summary>
            <param name="eventId">The unique identifier of the event being retrieved. An event is a notification about a create, read, update, or delete on an order, product, discount or category.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Event.Event"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetEvent( eventId);
              var eventClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Platform.Adminuser.AdminUserClient">
            <summary>
            Displays the user accounts and account details associated with a developer or Mozu tenant administrator. Email addresses uniquely identify admin user accounts.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.Adminuser.AdminUserClient.GetUserClient(System.String)">
            <summary>
            Retrieves the details of the specified administrator user account.
            </summary>
            <param name="userId">Unique identifier of the administrator account to retrieve.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Core.User"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetUser( userId);
              var userClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.Adminuser.AdminUserClient.GetTenantScopesForUserClient(System.String)">
            <summary>
            Retrieves a list of the Mozu tenants or development stores for which the specified user has an assigned role.
            </summary>
            <param name="userId">Unique identifier of the user whose tenant scopes you want to retrieve.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Tenant.TenantCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetTenantScopesForUser( userId);
              var tenantCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Platform.Adminuser.TenantAdminUserAuthTicketClient">
            <summary>
            Use the Admin user Authtickets resource to generate and refresh authentication tickets for Mozu administrator or developer account users to access tenants or development stores.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.Adminuser.TenantAdminUserAuthTicketClient.CreateUserAuthTicketClient(Mozu.Api.Contracts.Core.UserAuthInfo)">
            <summary>
            Creates an authentication ticket for the supplied user to specify in API requests associated with the supplied tenant.
            </summary>
            <param name="userAuthInfo">The user authentication information required to generate the user authentication ticket, which consists of a user name and password.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.AdminUser.TenantAdminUserAuthTicket"/>}
            </returns>
            <example>
            <code>
              var mozuClient=CreateUserAuthTicket( userAuthInfo);
              var tenantAdminUserAuthTicketClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.Adminuser.TenantAdminUserAuthTicketClient.CreateUserAuthTicketClient(System.Nullable{System.Int32},Mozu.Api.Contracts.Core.UserAuthInfo)">
            <summary>
            Creates an authentication ticket for the supplied user to specify in API requests associated with the supplied tenant.
            </summary>
            <param name="tenantId">Unique identifier of the Mozu tenant or development store for which to generate the user authentication ticket.</param>
            <param name="userAuthInfo">The user authentication information required to generate the user authentication ticket, which consists of a user name and password.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.AdminUser.TenantAdminUserAuthTicket"/>}
            </returns>
            <example>
            <code>
              var mozuClient=CreateUserAuthTicket( tenantId,  userAuthInfo);
              var tenantAdminUserAuthTicketClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.Adminuser.TenantAdminUserAuthTicketClient.RefreshAuthTicketClient(Mozu.Api.Contracts.AdminUser.TenantAdminUserAuthTicket)">
            <summary>
            Generates a new user authentication ticket for the specified tenant by supplying the user's existing refresh token information.
            </summary>
            <param name="existingAuthTicket">Properties of the authentication ticket to refresh. The refresh token is required to complete this request.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.AdminUser.TenantAdminUserAuthTicket"/>}
            </returns>
            <example>
            <code>
              var mozuClient=RefreshAuthTicket( existingAuthTicket);
              var tenantAdminUserAuthTicketClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.Adminuser.TenantAdminUserAuthTicketClient.RefreshAuthTicketClient(System.Nullable{System.Int32},Mozu.Api.Contracts.AdminUser.TenantAdminUserAuthTicket)">
            <summary>
            Generates a new user authentication ticket for the specified tenant by supplying the user's existing refresh token information.
            </summary>
            <param name="tenantId">Unique identifier of the Mozu tenant or development store for which to refresh the authentication ticket.</param>
            <param name="existingAuthTicket">Properties of the authentication ticket to refresh. The refresh token is required to complete this request.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.AdminUser.TenantAdminUserAuthTicket"/>}
            </returns>
            <example>
            <code>
              var mozuClient=RefreshAuthTicket( tenantId,  existingAuthTicket);
              var tenantAdminUserAuthTicketClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.Adminuser.TenantAdminUserAuthTicketClient.DeleteUserAuthTicketClient(System.String)">
             <summary>
             Deletes the authentication ticket for the user by supplying the refresh token.
             </summary>
             <param name="refreshToken">Refresh token string associated with the user authentication ticket.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteUserAuthTicket( refreshToken);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Platform.Appdev.ApplicationClient">
            <summary>
            Use the apps resource to register namespaces for third party applications.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.Appdev.ApplicationClient.RegisterNamespaceClient(Mozu.Api.Contracts.AppDev.NamespaceRegistry)">
            <summary>
            Register the namespace that will prepend all application attributes.
            </summary>
            <param name="namespaceRegistry">Properties of the namespace registry to perform.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.AppDev.NamespaceRegistry"/>}
            </returns>
            <example>
            <code>
              var mozuClient=RegisterNamespace( namespaceRegistry);
              var namespaceRegistryClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.Appdev.ApplicationClient.ReRegisterNamespaceClient(Mozu.Api.Contracts.AppDev.NamespaceRegistry)">
            <summary>
            Re-register the namespace that will prepend all application attributes.
            </summary>
            <param name="namespaceRegistry">Properties of the namespace registry to perform.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.AppDev.NamespaceRegistry"/>}
            </returns>
            <example>
            <code>
              var mozuClient=ReRegisterNamespace( namespaceRegistry);
              var namespaceRegistryClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Platform.Applications.AuthTicketClient">
            <summary>
            Use this resource to manage authentication tickets for your applications.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.Applications.AuthTicketClient.AuthenticateAppClient(Mozu.Api.Contracts.AppDev.AppAuthInfo)">
            <summary>
            Generate an authentication ticket for an application.
            </summary>
            <param name="appAuthInfo">Authentication information required to generate an authentication ticket includes the application id and the shared secret.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.AppDev.AuthTicket"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AuthenticateApp( appAuthInfo);
              var authTicketClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.Applications.AuthTicketClient.RefreshAppAuthTicketClient(Mozu.Api.Contracts.AppDev.AuthTicketRequest)">
            <summary>
            Refreshes the application's authentication ticket and generates a new access token by providing the refresh token string.
            </summary>
            <param name="authTicketRequest">The refresh token string required to update the application authentication ticket.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.AppDev.AuthTicket"/>}
            </returns>
            <example>
            <code>
              var mozuClient=RefreshAppAuthTicket( authTicketRequest);
              var authTicketClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.Applications.AuthTicketClient.DeleteAppAuthTicketClient(System.String)">
             <summary>
             Deletes an authentication for an application based on the specified refresh token.
             </summary>
             <param name="refreshToken">The refresh token string from the application's authentication ticket.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteAppAuthTicket( refreshToken);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Platform.ReferenceDataClient">
            <summary>
            The Reference resource retrieves collections of standards the Mozu system currently supports. This includes content locales, top-level domains, units of measure, countries, currencies, time zones, and shipping or billing address schemas.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.ReferenceDataClient.GetAddressSchemaClient">
            <summary>
            Retrieves a specific address schema based on the country code provided. This operation allows the creation of custom shipping and billing address fields.
            </summary>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Reference.AddressSchema"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetAddressSchema();
              var addressSchemaClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.ReferenceDataClient.GetAddressSchemaClient(System.String)">
            <summary>
            Retrieves a specific address schema based on the country code provided. This operation allows the creation of custom shipping and billing address fields.
            </summary>
            <param name="countryCode">2 letter geographic code representing the country for the physical or mailing address. Currently limited to the US.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Reference.AddressSchema"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetAddressSchema( countryCode);
              var addressSchemaClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.ReferenceDataClient.GetAddressSchemasClient">
            <summary>
            Retrieves the entire list of address schemas that the system supports.
            </summary>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Reference.AddressSchemaCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetAddressSchemas();
              var addressSchemaCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.ReferenceDataClient.GetBehaviorClient(System.Int64)">
            <summary>
            ***Always private and should not be published.***
            </summary>
            <param name="behaviorId">***Always private and should not be published.***</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Core.Behavior"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetBehavior( behaviorId);
              var behaviorClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.ReferenceDataClient.GetBehaviorCategoriesClient">
            <summary>
            ***Always private and should not be published.***
            </summary>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Core.BehaviorCategoryCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetBehaviorCategories();
              var behaviorCategoryCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.ReferenceDataClient.GetBehaviorCategoryClient(System.Int64)">
            <summary>
            ***Always private and should not be published.***
            </summary>
            <param name="categoryId">***Always private and should not be published.***</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Core.BehaviorCategory"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetBehaviorCategory( categoryId);
              var behaviorCategoryClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.ReferenceDataClient.GetBehaviorsClient">
            <summary>
            ***Always private and should not be published.***
            </summary>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Core.BehaviorCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetBehaviors();
              var behaviorCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.ReferenceDataClient.GetBehaviorsClient(System.String)">
            <summary>
            ***Always private and should not be published.***
            </summary>
            <param name="userType"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Core.BehaviorCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetBehaviors( userType);
              var behaviorCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.ReferenceDataClient.GetContentLocalesClient">
            <summary>
            Retrieves the entire list of content locales that the system supports. The content locales indicate the language used and the country where the language is used. Just because the system supports the content locale does not mean that the site or site group supports the language. For example,currently only "en-US" is supported.
            </summary>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Reference.ContentLocaleCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetContentLocales();
              var contentLocaleCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.ReferenceDataClient.GetCountriesClient">
            <summary>
            Retrieves the entire list of countries that the system supports.
            </summary>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Reference.CountryCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetCountries();
              var countryCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.ReferenceDataClient.GetCurrenciesClient">
            <summary>
            Retrieves the entire list of currencies that the system supports.
            </summary>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Reference.CurrencyCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetCurrencies();
              var currencyCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.ReferenceDataClient.GetTimeZonesClient">
            <summary>
            Retrieves the entire list of time zones that the system supports.
            </summary>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Reference.TimeZoneCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetTimeZones();
              var timeZoneCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.ReferenceDataClient.GetTopLevelDomainsClient">
            <summary>
            Retrieves the entire list of top-level Internet domains that the system supports.
            </summary>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Reference.TopLevelDomainCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetTopLevelDomains();
              var topLevelDomainCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.ReferenceDataClient.GetUnitsOfMeasureClient">
            <summary>
            Retrieves the entire list of units of measure that the system supports.
            </summary>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Reference.UnitOfMeasureCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetUnitsOfMeasure();
              var unitOfMeasureCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.ReferenceDataClient.GetUnitsOfMeasureClient(System.String)">
            <summary>
            Retrieves the entire list of units of measure that the system supports.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Reference.UnitOfMeasureCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetUnitsOfMeasure( filter);
              var unitOfMeasureCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Platform.SiteDataClient">
            <summary>
            Use the site data resource to store site-level information required for a third-party application in the Mozu database.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.SiteDataClient.GetDBValueClient(System.String)">
            <summary>
            Retrieves the value of a record in the Mozu database.
            </summary>
            <param name="dbEntryQuery">The database entry query string used to retrieve the record information.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{string}
            </returns>
            <example>
            <code>
              var mozuClient=GetDBValue( dbEntryQuery);
              var stringClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.SiteDataClient.CreateDBValueClient(System.String,System.String)">
             <summary>
             Creates a new record in the Mozu database based on the information supplied in the request.
             </summary>
             <param name="dbEntryQuery">The database entry string to create.</param>
             <param name="value">The value string to create.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=CreateDBValue( dbEntryQuery,  value);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.SiteDataClient.UpdateDBValueClient(System.String,System.String)">
             <summary>
             Updates a record in the Mozu database based on the information supplied in the request.
             </summary>
             <param name="dbEntryQuery">The database entry query string used to update the record information.</param>
             <param name="value">The database value to update.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=UpdateDBValue( dbEntryQuery,  value);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.SiteDataClient.DeleteDBValueClient(System.String)">
             <summary>
             Removes a previously defined record in the Mozu database.
             </summary>
             <param name="dbEntryQuery">The database entry string to delete.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteDBValue( dbEntryQuery);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Platform.TenantClient">
            <summary>
            Use the tenants resource to manage information about a Mozu tenant.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.TenantClient.GetTenantClient(System.Int32)">
            <summary>
            Retrieve details about a specific tenant by providing the tenant ID.
            </summary>
            <param name="tenantId">Unique identifier of the Mozu tenant.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Tenant.Tenant"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetTenant( tenantId);
              var tenantClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Platform.TenantDataClient">
            <summary>
            Use the tenant data resource to store tenant-level information required for a third-party application in the Mozu database.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.TenantDataClient.GetDBValueClient(System.String)">
            <summary>
            Retrieves the value of a record in the Mozu database.
            </summary>
            <param name="dbEntryQuery">The database entry query string used to retrieve the record information.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{string}
            </returns>
            <example>
            <code>
              var mozuClient=GetDBValue( dbEntryQuery);
              var stringClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.TenantDataClient.CreateDBValueClient(System.String,System.String)">
             <summary>
             Creates a new record in the Mozu database based on the information supplied in the request.
             </summary>
             <param name="dbEntryQuery">The database entry string to create.</param>
             <param name="value">The value string to create.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=CreateDBValue( dbEntryQuery,  value);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.TenantDataClient.UpdateDBValueClient(System.String,System.String)">
             <summary>
             Updates a record in the Mozu database based on the information supplied in the request.
             </summary>
             <param name="dbEntryQuery">The database entry query string used to update the record information.</param>
             <param name="value">The database value to update.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=UpdateDBValue( dbEntryQuery,  value);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.TenantDataClient.DeleteDBValueClient(System.String)">
             <summary>
             Removes a previously defined record in the Mozu database.
             </summary>
             <param name="dbEntryQuery">The database entry string to delete.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteDBValue( dbEntryQuery);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Platform.UserDataClient">
            <summary>
            Use the user data subresource to store user-level data required for a third-party application in the Mozu database.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.UserDataClient.GetDBValueClient(System.String)">
            <summary>
            Retrieves the value of a record in the Mozu database.
            </summary>
            <param name="dbEntryQuery">The database entry query string used to retrieve the record information.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{string}
            </returns>
            <example>
            <code>
              var mozuClient=GetDBValue( dbEntryQuery);
              var stringClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.UserDataClient.CreateDBValueClient(System.String,System.String)">
             <summary>
             Creates a new record in the Mozu database based on the information supplied in the request.
             </summary>
             <param name="dbEntryQuery">The database entry string to create.</param>
             <param name="value">The value string to create.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=CreateDBValue( dbEntryQuery,  value);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.UserDataClient.UpdateDBValueClient(System.String,System.String)">
             <summary>
             Updates a record in the Mozu database based on the information supplied in the request.
             </summary>
             <param name="dbEntryQuery">The database entry query string used to update the record information.</param>
             <param name="value">The database value to update.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=UpdateDBValue( dbEntryQuery,  value);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.UserDataClient.DeleteDBValueClient(System.String)">
             <summary>
             Removes a previously defined record in the Mozu database.
             </summary>
             <param name="dbEntryQuery">The database entry string to delete.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteDBValue( dbEntryQuery);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Platform.User.UserAuthTicketClient">
            <summary>
            Manage the user authentication tickets used to perform operations in the Mozu API.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.User.UserAuthTicketClient.CreateUserAuthTicketClient(Mozu.Api.Contracts.Core.UserAuthInfo)">
            <summary>
            Generates an authentication ticket for a user.
            </summary>
            <param name="userAuthInfo">The user authentication information, which consists of email address and password.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Core.UserAuthTicket"/>}
            </returns>
            <example>
            <code>
              var mozuClient=CreateUserAuthTicket( userAuthInfo);
              var userAuthTicketClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.User.UserAuthTicketClient.CreateAuthTicketForSiteClient(Mozu.Api.Contracts.Core.UserTokenInfo)">
            <summary>
            Generates an authentication ticket for a user that can be used for an individual site.
            </summary>
            <param name="userAuthInfo">The user authentication information, which consists of email address and password.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Core.UserAuthTicket"/>}
            </returns>
            <example>
            <code>
              var mozuClient=CreateAuthTicketForSite( userAuthInfo);
              var userAuthTicketClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.User.UserAuthTicketClient.RefreshUserAuthTicketClient(System.String)">
            <summary>
            Refresh the user authentication ticket by supplying the refresh token.
            </summary>
            <param name="refreshToken">The refresh token generated in the user authentication ticket.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Core.UserAuthTicket"/>}
            </returns>
            <example>
            <code>
              var mozuClient=RefreshUserAuthTicket( refreshToken);
              var userAuthTicketClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Platform.User.UserClient">
            <summary>
            Use this resource to manage shopper accounts for your Mozu tenant.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.User.UserClient.GetUserByEmailClient(System.String)">
            <summary>
            Retrieves the details of a user account by supplying the user's email address.
            </summary>
            <param name="emailAddress">The email address of the specified user or the email address associated with the specified entity.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Core.User"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetUserByEmail( emailAddress);
              var userClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.User.UserClient.GetUserClient(System.String)">
            <summary>
            Retrieves the details of a user account by supplying the user ID.
            </summary>
            <param name="userId">Unique identifier of the user.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Core.User"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetUser( userId);
              var userClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.User.UserClient.CreateUserClient(Mozu.Api.Contracts.Core.User)">
            <summary>
            Creates a new shopper user account.
            </summary>
            <param name="shopper">Properties of the new shopper user account to create.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Core.User"/>}
            </returns>
            <example>
            <code>
              var mozuClient=CreateUser( shopper);
              var userClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.User.UserClient.CreateUsersClient(Mozu.Api.Contracts.Core.UserCollection)">
            <summary>
            Creates a bulk collection of new shopper user accounts.
            </summary>
            <param name="users">Properties of the new shopper user accounts to create.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Core.UserCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=CreateUsers( users);
              var userCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.User.UserClient.LoginClient(Mozu.Api.Contracts.Core.UserAuthInfo)">
            <summary>
            Logs a shopper user in to a tenant.
            </summary>
            <param name="userAuthInfo">The authentication information required to log the user in, which consists of email address and password.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.User.UserLoginResult"/>}
            </returns>
            <example>
            <code>
              var mozuClient=Login( userAuthInfo);
              var userLoginResultClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.User.UserClient.ResetPasswordClient(Mozu.Api.Contracts.User.ResetPasswordInfo)">
             <summary>
             Reset the shopper user password by supplying the email address.
             </summary>
             <param name="resetPasswordInfo">The information required to reset the password, which consists of the user email address.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=ResetPassword( resetPasswordInfo);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Contracts.AdminUser.TenantAdminUserAuthTicket">
            
            	Properties of the authentication ticket to be used in user claims with the Mozu API.
            
        </member>
        <member name="P:Mozu.Api.Contracts.AdminUser.TenantAdminUserAuthTicket.AccessToken">
            
            Alphanumeric string used to authenticate the user in API request headers.
            
        </member>
        <member name="P:Mozu.Api.Contracts.AdminUser.TenantAdminUserAuthTicket.AccessTokenExpiration">
            
            The date and time the user access token expires.
            
        </member>
        <member name="P:Mozu.Api.Contracts.AdminUser.TenantAdminUserAuthTicket.CreatedOn">
            
            Date and time when the entity was created, represented in UTC Date/Time.
            
        </member>
        <member name="P:Mozu.Api.Contracts.AdminUser.TenantAdminUserAuthTicket.GrantedBehaviors">
            
            Collection of behaviors encrypted in the user authentication ticket. Behaviors are granted to users as part of the role assigned for the given tenant or developer account.
            
        </member>
        <member name="P:Mozu.Api.Contracts.AdminUser.TenantAdminUserAuthTicket.RefreshToken">
            
            Alphanumeric string used to generate a new user authentication ticket after the access token expires.
            
        </member>
        <member name="P:Mozu.Api.Contracts.AdminUser.TenantAdminUserAuthTicket.RefreshTokenExpiration">
            
            The date and time the user refresh token expires.
            
        </member>
        <member name="P:Mozu.Api.Contracts.AdminUser.TenantAdminUserAuthTicket.AvailableTenants">
            
            Collection of tenants for which the user authentication ticket grants access.
            
        </member>
        <member name="P:Mozu.Api.Contracts.AdminUser.TenantAdminUserAuthTicket.Tenant">
            
            Tenant information associated with the user authentication ticket.
            
        </member>
        <member name="P:Mozu.Api.Contracts.AdminUser.TenantAdminUserAuthTicket.User">
            
            User information associated with the authentication ticket.
            
        </member>
        <member name="T:Mozu.Api.Contracts.AppDev.AppAuthInfo">
            
            	The information required to authenticate third party applications against the Mozu API.
            
        </member>
        <member name="P:Mozu.Api.Contracts.AppDev.AppAuthInfo.ApplicationId">
            
            Unique identifier of the application. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.AppDev.AppAuthInfo.SharedSecret">
            
            System-supplied alphanumeric code used to authenticate applications. This string is only available for viewing in Mozu Dev Center.
            
        </member>
        <member name="T:Mozu.Api.Contracts.AppDev.AuthTicket">
            
            	Properties of the authentication ticket used to authenticate applications.
            
        </member>
        <member name="P:Mozu.Api.Contracts.AppDev.AuthTicket.AccessToken">
            
            The token that stores an encrypted list of the application's configured behaviors and authenticates the application.
            
        </member>
        <member name="P:Mozu.Api.Contracts.AppDev.AuthTicket.AccessTokenExpiration">
            
            Date and time the access token expires. After the access token expires, refresh the authentication ticket using the Refresh Token.
            
        </member>
        <member name="P:Mozu.Api.Contracts.AppDev.AuthTicket.RefreshToken">
            
            The token that refreshes the application's authentication ticket.
            
        </member>
        <member name="P:Mozu.Api.Contracts.AppDev.AuthTicket.RefreshTokenExpiration">
            
            Date and time the refresh token expires. After the refresh token expires, generate a new authentication ticket.
            
        </member>
        <member name="T:Mozu.Api.Contracts.AppDev.AuthTicketRequest">
            
            	Properties of the authentication ticket refresh requests, which includes the refresh token string.
            
        </member>
        <member name="P:Mozu.Api.Contracts.AppDev.AuthTicketRequest.RefreshToken">
            
            The refresh token string from the application authentication ticket.
            
        </member>
        <member name="T:Mozu.Api.Contracts.AppDev.NamespaceRegistry">
            
            	Properties if the namespace registry for third party applications.
            
        </member>
        <member name="P:Mozu.Api.Contracts.AppDev.NamespaceRegistry.Abbreviation">
            
            Abbreviation for the namespace, which is optional and does not need to be unique.
            
        </member>
        <member name="P:Mozu.Api.Contracts.AppDev.NamespaceRegistry.ApplicationId">
            
            Unique identifier of the application associated with the namespace registry. Not all namespaces must be associated with an application.
            
        </member>
        <member name="P:Mozu.Api.Contracts.AppDev.NamespaceRegistry.FullNamespace">
            
            The full namespace required by the application.
            
        </member>
        <member name="P:Mozu.Api.Contracts.AppDev.NamespaceRegistry.NamespaceRegistryId">
            
            Unique identifier of the namespace registry item.
            
        </member>
        <member name="P:Mozu.Api.Contracts.AppDev.NamespaceRegistry.AuditInfo">
            
            Identifier and datetime stamp information recorded when creating or updating a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart">
            
            	Properties of an active shopping cart.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart.DiscountedTotal">
            
            The estimated total of the cart after all discounts have been applied.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart.DiscountTotal">
            
            Estimated amount of discounts applied to all items in the cart. Usually a negative dollar amount or number. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart.ExpirationDate">
            
            Date in UTC Date/Time when the cart becomes inactive based on a system-calculated interval. For example, if an anonymous shopper has 14 days of inactivity, the cart is considered abandoned after that period of inactivity. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart.FeeTotal">
            
            The monetary sum of all fees incurred in the cart.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart.HandlingTaxTotal">
            
            If the handling fee for the cart is subject to sales tax, the total tax amount.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart.Id">
            
            Unique identifier of the shopping cart.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart.ISOCurrencyCode">
            
            3-letter ISO 4217 standard global currency code. Currently, only "USD" (US Dollar) is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart.ItemTaxTotal">
            
            The total amount of tax for items in the cart.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart.LastValidationDate">
            
            The date in UTC Date/Time when the items in the cart were last validated against the site's product catalog. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart.ShippingTaxTotal">
            
            The total amount of tax incurred on the shipping charges in the cart.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart.ShippingTotal">
            
            The total shipping amount estimated for the cart.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart.SiteGroupId">
            
            Unique identifier of the site group.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart.SiteId">
            
            Unique identifier of the site.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart.Subtotal">
            
            Estimated amount of the cart without sales tax, shipping costs, and other fees.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart.TaxTotal">
            
            The total sum of sales tax estimated for a cart.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart.TenantId">
            
            Unique identifier of the Mozu tenant.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart.Total">
            
            Estimated total amount of the cart, including items, sales tax, shipping costs, and other fees.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart.UserId">
            
            Unique identifier of the user associated with the shopping cart.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart.AuditInfo">
            
            Identifier and datetime stamp information recorded when creating or updating a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart.ChangeMessages">
            
            Messages logged or created each time the cart was modified.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart.OrderDiscounts">
            
            List of order-level discounts projected to apply to the cart at checkout.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart.ShippingInfo">
            
            Shipping information associated with the cart.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Carts.CartChangeMessageCollection">
            
            	Collection of messages logged or created each time the cart was modifed.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartChangeMessageCollection.Capacity">
            
            The number of commerce runtime cart change messages transactions that can exist in a collection.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartChangeMessageCollection.Count">
            
            The number of messages in the collection.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartChangeMessageCollection.Item">
            
            Container for an item in a collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem">
            
            	Properties of an item added to an active shopping cart.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem.DiscountTotal">
            
            The total amount discounted from an item.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem.FeeTotal">
            
            The total amount of all fees incurred for the item.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem.Id">
            
            Unique identifier of the cart item.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem.IsRecurring">
            
            If true, the item can be purchased or fulfilled at regular intervals, such as a monthly billing cycle. For example, digital or physical product subscriptions are recurring cart items.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem.IsTaxable">
            
            If true, the entity is subject to tax based on the relevant tax rate.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem.ItemTaxTotal">
            
            The total amount of tax for the item in the cart.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem.LocaleCode">
            
            Language used for the entity. Currently, only "en-US" is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem.Quantity">
            
            The specified quantity of the cart item.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem.ShippingTaxTotal">
            
            The total amount of tax incurred on the shipping charges in the cart.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem.ShippingTotal">
            
            The estimated total amount of shipping fees for the item in the cart.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem.Subtotal">
            
            Estimated amount of the item in the cart without sales tax, shipping costs, and other fees.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem.TaxableTotal">
            
            The amount of the item in the cart that is subject to tax. This amount typically represents the cart item subtotal before applied discounts.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem.Total">
            
            Estimated total amount of the item, including the product price, sales tax, shipping costs, and other fees.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem.AuditInfo">
            
            Identifier and datetime stamp information recorded when creating or updating a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem.Product">
            
            The properties of the associated product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem.ProductDiscounts">
            
            List of product-level discounts projected to apply to the cart at checkout.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem.ShippingDiscounts">
            
            List of shipping discounts projected to apply to the cart at checkout.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem.Stock">
            
            The inventory properties associated with the cart item.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem.UnitPrice">
            
            Properties of the unit price associated with the cart item.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItemCollection">
            
            	Collection of items in a cart.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItemCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItemCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Carts.CartSummary">
            
            	The properties of an active shopping cart.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartSummary.HasActiveCart">
            
            If true, this shopping cart is active.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartSummary.IsExpired">
            
            If true, the cart's period of inactivity is past its calculated expiration date and the cart is considered abandoned.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartSummary.ItemCount">
            
            The total number of line items in the cart. Each line item can have multiple quantities.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartSummary.Total">
            
            Estimated total amount of the cart, including items, sales tax, shipping costs, and other fees.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Commerce.Adjustment">
            
            	Properties of an ad-hoc price adjustment for an order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Commerce.Adjustment.Amount">
            
            The amount of the order-level adjustment, which can be a positive or negative amount.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Commerce.Adjustment.Description">
            
            The shopper-facing description of the order-level adjustment.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Commerce.Adjustment.InternalComment">
            
            Administrator notes associated with the order adjustment. These comments are not shopper facing.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Commerce.ChangeMessage">
            
            	Properties of a system message displayed when a change, such as a change in product price, occurs for a cart or order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Commerce.ChangeMessage.CreateDate">
            
            Date and time when the entity was created, represented in UTC Date/Time.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Commerce.ChangeMessage.Id">
            
            Unique identifier of the change message. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Commerce.ChangeMessage.Identifier">
            
            Identifier for the object associated with the change message, which can represent a cart, cart item, or an order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Commerce.ChangeMessage.Message">
            
            The text of the change message, such as "This product is no longer available". System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Commerce.ChangeMessage.NewValue">
            
            The new value of the object affected by the change, such as the new price of the product. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Commerce.ChangeMessage.OldValue">
            
            The prior value of the object affected by the change, such as the price of the product when it was added to the cart. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Commerce.ChangeMessage.Subject">
            
            The text that appears on the subject line of the message, such as "The product price has changed."
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Commerce.ChangeMessage.SubjectType">
            
            Represents the type of object affected by the change, such as Cart Item or Product. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Commerce.ChangeMessage.Verb">
            
            The action associated with this message. For example, if the price of a product changes, the verb could be "Increased" or "Decreased". If the product is no longer available, the verb could be "Invalidated". System-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Commerce.CommerceUnitPrice">
            
            	Pricing details for a product in a cart or an order, including the original price, discount amount, and final price.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Commerce.CommerceUnitPrice.BaseAmount">
            
            The original price of the item in the cart or order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Commerce.CommerceUnitPrice.DiscountAmount">
            
            The calculated amount of the discount to apply.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Commerce.CommerceUnitPrice.DiscountedAmount">
            
            The price of the item after all discounts are applied.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Commerce.CommerceUnitPrice.ListAmount">
            
            The price the item is listed for in the storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Commerce.CommerceUnitPrice.OverrideAmount">
            
            The override price of the item set by the merchant for a given order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Commerce.CommerceUnitPrice.SaleAmount">
            
            The sale price set for the item.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Commerce.PackageMeasurements">
            
            	Dimensions of the packaged product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Commerce.PackageMeasurements.Height">
            
            Height of the package in imperial units of feet and inches.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Commerce.PackageMeasurements.Length">
            
            Length of the package in imperial units of feet and inches.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Commerce.PackageMeasurements.Weight">
            
            Weight of the package in imperial units of pounds and ounces.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Commerce.PackageMeasurements.Width">
            
            Width of the package in imperial units of feet and inches.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Discounts.AppliedDiscount">
            
            	The discount currently applied to the cart or order, represented as a negative currency amount to be subtracted from the final price. If multiple discounts are applied to the same order, the Applied Discount displays the most valuable discount for the shopper.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Discounts.AppliedDiscount.CouponCode">
            
            Alphanumeric code associated with the coupon or promotion that results in a discounted price.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Discounts.AppliedDiscount.Excluded">
            
            If true, the system ignores this discount when pricing the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Discounts.AppliedDiscount.Impact">
            
            The value of the discount applied to the cart or order, represented as a negative currency amount to apply to the original price.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Discounts.AppliedDiscount.Discount">
            
            Discount currently applied to the cart or order.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Discounts.AppliedProductDiscount">
            
            	Properties of a discount applied to a product on a storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Discounts.AppliedProductDiscount.Excluded">
            
            If true, the system ignores this discount when pricing the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Discounts.AppliedProductDiscount.Impact">
            
            The value of the discount.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Discounts.AppliedProductDiscount.ImpactPerUnit">
            
            The value of the discount for a single product unit.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Discounts.AppliedProductDiscount.ProductQuantity">
            
            The number of product units priced with the associated discount.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Discounts.AppliedProductDiscount.Discount">
            
            Properties of a discount applied to a product on a storefront.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Discounts.Discount">
            
            	Properties of a discount defined for a product or order in a storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Discounts.Discount.ExpirationDate">
            
            The date and time at which the discount can no longer be applied to a product or order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Discounts.Discount.Id">
            
            Unique identifier of the discount.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Discounts.Discount.ItemIds">
            
            List of cart or order items to which the discount applies, if applicable.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Discounts.Discount.Name">
            
            The name of the discount, in the language specified by the LocaleCode of the storefront.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Discounts.ShippingDiscount">
            
            	Properties of a discount that can apply to shipping an order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Discounts.ShippingDiscount.MethodCode">
            
            Carrier-supplied code that represents the shipping method service type associated with the shipping discount.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Discounts.ShippingDiscount.Discount">
            
            Properties of the shipping discount.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order">
            
            	All of the properties of the specified order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.AvailableActions">
            
            The available order, payment, and shipment actions a user can perform for the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.CancelledDate">
            
            Date when the order was cancelled. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.ClosedDate">
            
            Date when the order was closed. Closed order is an order that has been processed and the items shipped. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.CustomerAccountId">
            
            Numeric identifer of the customer account.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.DiscountedTotal">
            
            The total amount of the order after all applicable discounts have been applied.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.DiscountTotal">
            
            Amount of discounts applied to all items in an order. Usually a negative dollar amount or number. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.Email">
            
            The email address of the specified user or the email address associated with the specified entity.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.ExpirationDate">
            
            The date when the order will no longer be active or considered abandoned. For example, if a guest or anonymous shoppper has 14 days of inactivity, the order is considered abandoned after that period of inactivity. An order never expires for shoppers who are logged into their account. Date in UTC Date/Time. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.FeeTotal">
            
            The monetary sum of all fees incurred in the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.HandlingAmount">
            
            The combined price for all items in the order, including all selected options but excluding any discounts.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.HandlingTaxTotal">
            
            If the handling fee for the order is subject to sales tax, the total tax amount.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.HasDraft">
            
            If true, the order has a draft that may include one or more uncommitted changes to the order or its components.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.Id">
            
            Identifier of the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.IPAddress">
            
            The IP address from which the order originated.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.IsDraft">
            
            If true, this version of the order is a draft that might contain uncommitted changes.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.ISOCurrencyCode">
            
            3-letter ISO 4217 standard global currency code. Currently, only "USD" (US Dollar) is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.IsTaxExempt">
            
            If true, the order is exempt from applied sales tax.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.ItemTaxTotal">
            
            The total amount of tax applied to items in the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.LastValidationDate">
            
            The date when the order was last validated against the product catalog. Date in UTC Date/Time. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.OrderNumber">
            
            The order number that displays on the storefront which differs from the order ID.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.OriginalCartId">
            
            Identifier of the cart prior to the customer proceeding to checkout.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.ParentReturnId">
            
            If this order was created to fulfill an item replacement as part of a return merchandise authorization (RMA), the unique identifier of the return.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.PaymentStatus">
            
            Status of the payment for the specified order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.ReturnStatus">
            
            Status of any returns associated with this order after it was completed.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.ShipmentStatus">
            
            The current status of the shipment of this order. Possible values are "Fulfilled" if the order has shipped and "Not Fulfilled" if the order has not shipped. At this time, an order cannot be partially shipped. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.ShippingTaxTotal">
            
            The total amount of sales tax incurred for shipping charges on the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.ShippingTotal">
            
            Amount of the shipping fees for the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.SiteGroupId">
            
            Unique identifier of the site group.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.SiteId">
            
            Unique identifier of the site.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.SourceDevice">
            
            The device from which the order originated in the case of offline orders.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.Status">
            
            The current status of this order. Possible values are "New", "Open", "Processing", "Closed", or "Cancelled". System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.SubmittedDate">
            
            The date and time the order was submitted. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.Subtotal">
            
            Amount of the order without sales tax, shipping costs, and other fees.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.TaxTotal">
            
            The total monetary sum of sales tax for the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.TenantId">
            
            Unique identifier of the Mozu tenant.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.Total">
            
            Amount of the order, including items, sales tax, shipping costs, and other fees.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.TotalCollected">
            
            The total amount collected to date for the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.Version">
            
            The current version number of the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.Adjustment">
            
            Properties of an ad-hoc price adjustment for an order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.Attributes">
            
            Paged list collection of order attributes.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.AuditInfo">
            
            Identifier and datetime stamp information recorded when creating or updating a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.BillingInfo">
            
            Container for the customer billing information associated with an order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.ChangeMessages">
            
            Paged list of notes entered when the order was modified.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.Notes">
            
            Paged list collection of order notes.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.OrderDiscounts">
            
            List of order-level discounts that apply to the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.Packages">
            
            Wrapper for the physical packages shipped for the specified order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.Payments">
            
            Wrapper for a collection of payments associated with this order. An order can include any number of payments.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.ShippingAdjustment">
            
            Properties of an ad-hoc price adjustment made for an order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.ShippingDiscounts">
            
            List of shipping discounts to apply to the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.ShippingInfo">
            
            Container for the shipping information associated with the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.ShopperNotes">
            
            A paged list collection of shopper notes for the order.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAction">
            
            	The action to perform for the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAction.ActionName">
            
            The name of the action for the order.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAttribute">
            
            	A characteristic of an order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAttribute.AttributeId">
            
            Unique identifier of the attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAttribute.AttributeSetId">
            
            Unique identifier of the attribute set associated with the order attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAttribute.DataType">
            
            The data type of the attribute. There are four valid data types: "Bool", "DateTime", "Number", "String"
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAttribute.Errors">
            
            List of validation errors for the order attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAttribute.FullyQualifiedName">
            
            The fully qualified name of the attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAttribute.Id">
            
            Unique identifier of the order attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAttribute.Values">
            
            The values of the order attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAttribute.AuditInfo">
            
            Identifier and datetime stamp information recorded when creating or updating a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderCollection">
            
            	Paged collection of orders sorted and filtered by any query parameters specified in the request.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderCollection.PageSize">
            
            Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderCollection.StartIndex">
            
            Indicates the zero-based offset in the complete result set where the returned entities begin, when creating paged results from a query. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem">
            
            	The details associated with a specific item in an order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem.DiscountTotal">
            
            Amount of discounts applied to an item in an order. Usually a negative dollar amount or number. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem.FeeTotal">
            
            The total monetary sum of all fees incurred for an item in an order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem.Id">
            
            Unique identifier of a specific item in an order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem.IsRecurring">
            
            If true, the item in the order can be purchased or fulfilled at regular intervals such as a monthly billing cycle or a digital or physical subscription.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem.IsTaxable">
            
            If true, the entity is subject to tax based on the relevant tax rate.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem.ItemTaxTotal">
            
            The total amount of tax that applied to an item in an order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem.LocaleCode">
            
            Language used for the entity. Currently, only "en-US" is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem.OriginalCartItemId">
            
            The unique identifier of the item when it was applied to a cart, prior to checkout, when the cart became an order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem.ProductReservationId">
            
            The unique identifier of the product reservation for the item in an order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem.Quantity">
            
            The quantity of a specific item in an order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem.ShippingTaxTotal">
            
            The total amount of sales tax incurred for shipping charges associated with this item in a cart.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem.ShippingTotal">
            
            Total amount of shipping fees associated with the specified item in the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem.Subtotal">
            
            Amount of the item in the order without sales tax, shipping costs, and other fees.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem.TaxableTotal">
            
            The amount of the item in the order that is subject to tax. This amount typically represents the order item subtotal before applied discounts.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem.Total">
            
            The total monetary sum of a specific item in an order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem.AuditInfo">
            
            Identifier and datetime stamp information recorded when creating or updating a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem.Product">
            
            The product properties of an item in an order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem.ProductDiscounts">
            
            List of product discounts that apply to the item in the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem.ShippingDiscounts">
            
            List of shipping discounts that apply to the item in the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem.UnitPrice">
            
            Properties of the unit price associated with the order item.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItemCollection">
            
            	Collection of all order items that appear on the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItemCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItemCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderNote">
            
            	For a customer, the order note could be a comment or a gift message. For a merchant, the order note is internal only for administrative purposes and not available to the customer.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderNote.Id">
            
            Unique identifier of the order note.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderNote.Text">
            
            The text content of the order note.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderNote.AuditInfo">
            
            Identifier and datetime stamp information recorded when creating or updating a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Orders.ShopperNotes">
            
            	Comments and/or gift message provided by the shopper which are associated with the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.ShopperNotes.Comments">
            
            Shopper-entered notes for the associated order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.ShopperNotes.GiftMessage">
            
            Shopper-entered gift message for the associated order.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Payments.BillingInfo">
            
            	Properties of the billing information entered for a payment.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.BillingInfo.IsSameBillingShippingAddress">
            
            If true, the customer's shipping address is the same as the customer's billing address.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.BillingInfo.PaymentType">
            
            The type of payment, such as credit card or check. Additional payment types such as PayPal will be supported in future releases.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.BillingInfo.AuditInfo">
            
            Identifier and datetime stamp information recorded when creating or updating a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.BillingInfo.BillingContact">
            
            The cardholder's billing address.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.BillingInfo.Card">
            
            If the customer is paying by card, the credit card information.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Payments.Payment">
            
            	Properties of a payment transaction submitted for an order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.Payment.AmountCollected">
            
            The total monetary amount collected in this payment transaction for the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.Payment.AmountCredited">
            
            If the payment transaction is a shopper credit, the total monetary amount credited in this payment transaction for the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.Payment.AvailableActions">
            
            The actions a user can perform for a payment at this time.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.Payment.Id">
            
            Unique identifier of the payment transaction.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.Payment.IsRecurring">
            
            If true, the payment transaction occurs at regular intervals such as a monthly billing cycle or a digital or physical subscription.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.Payment.OrderId">
            
            Unique identifier of the order associated with the payment.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.Payment.PaymentServiceTransactionId">
            
            The transaction ID supplied by the payment service to associate with this order payment.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.Payment.PaymentType">
            
            The type of payment transaction performed, either check or credit card. Paypal and additional payment types will be supported in a future release.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.Payment.Status">
            
            Current status of the payment transaction for the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.Payment.AuditInfo">
            
            Identifier and datetime stamp information recorded when creating or updating a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.Payment.BillingInfo">
            
            The billing information associates with this payment.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.Payment.Interactions">
            
            Container for the interactions associated with the payment, which includes details for each action performed for the payment.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentAction">
            
            	Properties of the payment action performed for an order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentAction.ActionName">
            
            The name of the payment action, such as "AuthorizeAndCapture".
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentAction.Amount">
            
            The total monetary amount of the payment transaction.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentAction.CheckNumber">
            
            If applicable, the check number associated with the payment action.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentAction.InteractionDate">
            
            Date and time the payment gateway interaction was performed.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentAction.ISOCurrencyCode">
            
            3-letter ISO 4217 standard global currency code. Currently, only "USD" (US Dollar) is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentAction.ReferenceSourcePaymentId">
            
            Unique ID that references an original transaction in the event of a credit back.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentAction.ManualGatewayInteraction">
            
            Properties of a manually performed interaction with the payment gateway.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentAction.NewBillingInfo">
            
            The billing information associated with this payment action.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentCard">
            
            	Properties of a credit card used to submit payment for an order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentCard.CardNumberPartOrMask">
            
            The masked credit card number part returned from the payment gateway.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentCard.ExpireMonth">
            
            The two-digit month the credit card expires.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentCard.ExpireYear">
            
            The four-digit year the credit card expires.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentCard.IsCardInfoSaved">
            
            If true, the credit card information is saved to the customer account for future use.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentCard.IsUsedRecurring">
            
            If true, the credit card is used for a recurring order payment.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentCard.NameOnCard">
            
            The name printed on the credit card.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentCard.PaymentOrCardType">
            
            The type of credit card, such as Visa or Amex.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentCard.PaymentServiceCardId">
            
            Unique identifier of the credit card from the payment service.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentCollection">
            
            	Collection of payment transactions associated with an order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentCollection.Capacity">
            
            The maximum number of items that can appear in this collection.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentCollection.Count">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentCollection.Item">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentGatewayInteraction">
            
            	Properties of an interaction with the payment gateway.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentGatewayInteraction.GatewayAuthCode">
            
            If required by the payment gateway, the authorization code of the transaction.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentGatewayInteraction.GatewayAVSCodes">
            
            AVS codes supplied by the payment gateway.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentGatewayInteraction.GatewayCVV2Codes">
            
            CVV2 codes supplied by the payment gateway.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentGatewayInteraction.GatewayInteractionId">
            
            Unique identifier of the payment interaction from the payment gateway.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentGatewayInteraction.GatewayResponseCode">
            
            Response code from the gateway associated with the payment interaction. For example, if the gateway returns "Not Authorized," an interaction for voiding the payment transaction would result.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentGatewayInteraction.GatewayTransactionId">
            
            Unique identifier of the gateway transaction associated with the payment interaction.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentInteraction">
            
            	Properties of a resulting payment interaction that occurs when a payment action is performed.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentInteraction.Amount">
            
            If applicable, the total monetary amount associated with this payment interaction.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentInteraction.CheckNumber">
            
            If applicable, the check number associated with this payment interaction.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentInteraction.GatewayAuthCode">
            
            If required by the payment gateway, the authorization code of the transaction.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentInteraction.GatewayAVSCodes">
            
            AVS codes supplied by the payment gateway.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentInteraction.GatewayCVV2Codes">
            
            CVV2 codes supplied by the payment gateway.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentInteraction.GatewayInteractionId">
            
            Unique identifier of the gateway interaction. Used for credit card transactions where the payment creates a GatewayInteractionId for each interaction. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentInteraction.GatewayResponseCode">
            
            Response code from the gateway associated with the payment interaction. For example, if the gateway returns "Not Authorized," an interaction for voiding the payment transaction would result.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentInteraction.GatewayTransactionId">
            
            Unique identifier of the gateway transaction associated with the payment interaction.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentInteraction.Id">
            
            Unique identifier of the payment interaction.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentInteraction.InteractionDate">
            
            Date and time the payment interaction occured.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentInteraction.InteractionType">
            
            The type of payment interaction, such as Capture or CheckReceived.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentInteraction.IsManual">
            
            If true, the payment interaction was manually defined s part of offline order processing.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentInteraction.ISOCurrencyCode">
            
            3-letter ISO 4217 standard global currency code. Currently, only "USD" (US Dollar) is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentInteraction.IsRecurring">
            
            If true, this payment interaction repeats on a scheduled interval.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentInteraction.Note">
            
            Note content entered for a payment interaction.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentInteraction.OrderId">
            
            Unique identifier of the order associated with this payment interaction.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentInteraction.PaymentId">
            
            Unique identifier of the payment associated with this transaction.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentInteraction.PaymentTransactionInteractionIdReference">
            
            Unique identifier of previous interaction that this payment interaction is modifying. For example, when refunding a payment, the crediting interaction would reference the capture interaction.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentInteraction.Status">
            
            The status of this payment interaction. Possible values are "Success" or "Failure".
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentInteraction.AuditInfo">
            
            Identifier and datetime stamp information recorded when creating or updating a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Products.Category">
            
            	The category into which products are classified.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.Category.Id">
            
            Identifier of the category.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.Category.Parent">
            
            If applicable, the parent category in the category tree.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Products.Product">
            
            	Properties of a product set up in admin and added as an item in a cart or order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.Product.Description">
            
            Short description of the product in the language specified in the locale code for the storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.Product.ImageAlternateText">
            
            The alternate image description defined for the product, in the language specified in the locale code for the storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.Product.ImagePath">
            
            The URL of the image file associated with a product on a storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.Product.IsRecurring">
            
            If true, the product can be purchased or fulfilled at regular intervals such as a monthly billing cycle or a digital or physical subscription.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.Product.IsTaxable">
            
            If true, the entity is subject to sales tax based on the relevant tax rate.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.Product.Name">
            
            The name of the product that appears on the storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.Product.ProductCode">
            
            Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.Product.ProductType">
            
            The product type template associated with the product on the storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.Product.ShipsByItself">
            
            If true, the product cannot be shipped in combination with other products.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.Product.VariationProductCode">
            
            Merchant-created code associated with a specific product variation. Variation product codes maintain an association with the base product code.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.Product.Categories">
            
            The list of all categories associated with the product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.Product.Measurements">
            
            Dimensions of the packaged product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.Product.Options">
            
            The list of option attributes configured for the product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.Product.Price">
            
            The price of the product that appears on the storefront including any applied discounts.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.Product.Stock">
            
            The number of products accounted for in inventory that are available for purchase.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Products.ProductOption">
            
            	An option attribute configured for a product on a storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.ProductOption.AttributeFQN">
            
            The fully qualified name of the attribute, which is a user defined attribute identifier.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.ProductOption.DataType">
            
            The data type, such as bool or string, used in this option attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.ProductOption.Name">
            
            The name of the product option attribute in the language of the locale code specified for the storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.ProductOption.ShopperEnteredValue">
            
            The value a shopper entered for an option attribute that requires additional input for the product on a storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.ProductOption.StringValue">
            
            If the value is a string, the string entered for the value.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.ProductOption.Value">
            
            If the value if an object, the value selected.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Products.ProductPrice">
            
            	The price of a product that appears on a storefront after any applied discounts.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.ProductPrice.Price">
            
            The price the merchant charges for a product on a storefront if no sales price is defined.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.ProductPrice.SalePrice">
            
            Current sale price defined for a product on a storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.ProductProperty.DataType">
            
            The data type of the property attribute, which is Bool, DateTime, Number, or String.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.ProductProperty.IsMultiValue">
            
            If true, the product property can have more than one value.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.ProductProperty.Name">
            
            The name of the product property.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.ProductProperty.Values">
            
            The list of possible values for the product property.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Products.ProductPropertyValue">
            
            	Values of a product property attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.ProductPropertyValue.StringValue">
            
            Property string value in the language specified in the locale code for the product storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.ProductPropertyValue.Value">
            
            Value of the product property.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Products.ProductStock">
            
            	The number of products accounted for in inventory that are available for purchase.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.ProductStock.IsBackOrderAllowed">
            
            If true, a shopper can order the product when it is out of stock through the site, but can get the product once it is available again in inventory or through dropshipping.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.ProductStock.IsHiddenWhenOutOfStock">
            
            If true, the product does not appear on the storefront when it is not in stock. If false, the product stays on the storefront even when it is out of stock.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.ProductStock.ManageStock">
            
            If true, the Products services will manage inventory for this product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.ProductStock.StockAvailable">
            
            The number of products accounted for in inventory that are available for purchase.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Returns.Return">
            
            	Properties of a return of one or more items shipped with a previously completed order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.Return.AvailableActions">
            
            The actions a user can perform for the return at this time.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.Return.Id">
            
            Unique identifier of the return.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.Return.OriginalOrderId">
            
            Unique identifier of the original completed order associated with this return.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.Return.RefundAmount">
            
            If a refund action was performed for this return, the total amount refunded to the shopper. The refund amount can differ from the sum of the price of the returned items.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.Return.ReturnNumber">
            
            A merchant-specific identifier used to sequentially order returns.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.Return.ReturnOrderId">
            
            Unique identifier for the order created as a result of the return. If the return results in shipping a replacement item, the order includes shipment information for the replaced items. If the return results in a refund, the order includes payment transactions to credit the shopper.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.Return.ReturnType">
            
            The type of return, which is "Refund" or "Replace".
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.Return.RMADeadline">
            
            The date by which a shopper must ship items associated with a return in an "awaiting items" state to the merchant.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.Return.Status">
            
            Current status of the return, such as "ReturnAuthorized".
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.Return.UserId">
            
            Unique identifier of the user responsible for the return. Read only and supplied by the original order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.Return.AuditInfo">
            
            Identifier and datetime stamp information recorded when creating or updating a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.Return.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.Return.Notes">
            
            Collection of merchant-supplied notes entered for the return.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.Return.Packages">
            
            List of packages associated with a replacement order for a return.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.Return.Payments">
            
            Array of payments associated with this return, if applicable.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnAction">
            
            	Properties of an action a user can perform for a return.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnAction.ActionName">
            
            The name of the action to perform for the return.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnAction.ReturnIds">
            
            The list of returns for which to perform the action.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnCollection">
            
            	List of returns and the details of each return in the list.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnItem">
            
            	Properties of an item associated with a return for a previously shipped order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnItem.OrderItemId">
            
            Unique identifier of the item in the original completed order. All return items should be associated with a corresponding order item.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnItem.QuantityReceived">
            
            The actual quantity received for the return item.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnItem.QuantityRestockable">
            
            The quantity of returned items that can be returned to active product stock.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnItem.QuantityShipped">
            
            The quantity of the item shipped to the shopper in the event of a return item replacement.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnItem.Notes">
            
            List of merchant-supplied notes associated with the return item.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnItem.Reasons">
            
            The list of return reasons for the item and the quantity associated with each return reason.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnReason">
            
            	The reason for which the item is returned. Valid values include Damaged, Defective, MissingParts, DifferentExpectations, Late, NoLongerWanted, or Other.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnReason.Quantity">
            
            The quantity of the item returned for the specified reason.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnReason.Reason">
            
            The reason for which an item is returned to the merchant.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnUnitPrice">
            
            	Properties of the unit price of a returned item.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnUnitPrice.ItemTaxAmount">
            
            The sales tax amount associated with the returned item.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnUnitPrice.ShippingAmount">
            
            The total amount of shipping feed associated with the returned item.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnUnitPrice.ShippingTaxAmount">
            
            The amount of sales tax incurred on shipping fees for a returned item.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnUnitPrice.TaxableAmount">
            
            The amount of the returned item that is subject to tax. This amount typically represents the order item subtotal before applied discounts.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Shipping.Package">
            
            	Properties of a physical package shipped for an order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Shipping.Package.AvailableActions">
            
            The actions that a user can perform for a package at this time.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Shipping.Package.Id">
            
            Unique identifier of a package.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Shipping.Package.PackagingType">
            
            The package type associated with this physical package. Possible values include Tube, Letter, Pak, Small Box (carrier_box_small), Medium Box (carrier_box_medium), Large Box (carrier_box_large), or Custom.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Shipping.Package.ShipmentId">
            
            Unique identifier of the shipment associated with this package.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Shipping.Package.ShippingMethodCode">
            
            The code associated with the carrier's shipping method service type. Service type codes include a prefix that indicates the carrier. For example: FEDEX_INTERNATIONAL_STANDARD
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Shipping.Package.ShippingMethodName">
            
            Name of the shipping method associated with the package. For example: UPS Ground or 2nd Day Air.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Shipping.Package.Status">
            
            Status of the package, which is "Shipped" or "Not Shipped".
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Shipping.Package.TrackingNumber">
            
            Tracking number for the package supplied by the carrier.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Shipping.Package.AuditInfo">
            
            Identifier and datetime stamp information recorded when creating or updating a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Shipping.Package.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Shipping.Package.Measurements">
            
            Dimensional properties of the package.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Shipping.PackageItem">
            
            	Properties of an item shipped in a physical package.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Shipping.PackageItem.OrderItemId">
            
            Identifier of the item in the order associated with the item in the specified package.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Shipping.PackageItem.Quantity">
            
            The quantity of an item shipped in the specified package.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Shipping.Shipment">
            
            	Properties of a shipment for an order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Shipping.Shipment.Cost">
            
            The total merchant cost of the order shipment for accounting purposes.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Shipping.Shipment.Id">
            
            Unique identifier of the order shipment.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Shipping.Shipment.PackageIds">
            
            List of unique identifiers of packages associated with this shipment.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Shipping.Shipment.ShippingMethodCode">
            
            Code for the shipping carrier service type used to ship the order shipment.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Shipping.Shipment.SignatureRequired">
            
            If true, a shopper signature is required to deliver the order shipment.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Shipping.Shipment.TrackingNumber">
            
            Tracking number the shipping carrier supplied for the order shipment.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Shipping.Shipment.OriginAddress">
            
            The physical address from which the order shipment will be sent.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Shipping.ShipmentAction">
            
            	Properties of an action to perform for a shipment.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Shipping.ShipmentAction.ActionName">
            
            The name of the shipment action to perform, such as "Ship".
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Shipping.ShipmentAction.PackageIds">
            
            A list of physical packages in a shipment.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Shipping.ShippingInfo">
            
            	Properties associated with information necessary for shipments.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Shipping.ShippingInfo.EstimatedDeliveryDate">
            
            The carrier-supplied delivery date estimated for the shipment to arrive.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Shipping.ShippingInfo.IsDestinationCommercial">
            
            If true, the shipping destination is a commercial address.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Shipping.ShippingInfo.ShippingMethodCode">
            
            The code associated with the carrier's shipping method service type. Service type codes include a prefix that indicates the carrier. For example: FEDEX_INTERNATIONAL_STANDARD
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Shipping.ShippingInfo.ShippingMethodName">
            
            The carrier-supplied name for the shipping service type, such as "UPS Ground" or "2nd Day Air".
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Shipping.ShippingInfo.AuditInfo">
            
            Identifier and datetime stamp information recorded when creating or updating a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Shipping.ShippingInfo.ShippingContact">
            
            The contact information of the person receiving the shipment.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Shipping.ShippingRate">
            
            	Properties of a shipping price rate based on the type of shipping service per carrier.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Shipping.ShippingRate.ISOCurrencyCode">
            
            3-letter ISO 4217 standard global currency code. Currently, only "USD" (US Dollar) is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Shipping.ShippingRate.IsValid">
            
            If true, the shipping rate for the service type is valid for the carrier.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Shipping.ShippingRate.Messages">
            
            Collection of messages that indicate reasons why a shipping rate is invalid.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Shipping.ShippingRate.Price">
            
            The amount a shopper pays for shipping, which can include any merchant-provided offers or discounts on shipping.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Shipping.ShippingRate.ShippingMethodCode">
            
            The code associated with the carrier's shipping method service type. Service type codes include a prefix that indicates the carrier. For example: FEDEX_INTERNATIONAL_STANDARD
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Shipping.ShippingRate.ShippingMethodName">
            
            Carrier-supplied name of a service type, such as "UPS Ground" or "2nd Day Air".
            
        </member>
        <member name="T:Mozu.Api.Contracts.Content.Document">
            
            	The document properties that define the content used by the content management system (CMS).
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.Document.ContentLength">
            
            The character length associated with the document content.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.Document.ContentMimeType">
            
            The mime type associated with the document content, if applicable.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.Document.ContentUpdateDate">
            
            The date and time the most recent content update was made. UTC date/time. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.Document.DocumentListName">
            
            The name of the document list associated with the document.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.Document.DocumentType">
            
            The type of document used in the CMS such as "web_page" or "template" or "image_url".
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.Document.Extension">
            
            If applicable, the file extension associated with the document content.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.Document.FolderId">
            
            Unique identifier of the folder that contains the document.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.Document.Id">
            
            Unique identifier of the document.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.Document.InsertDate">
            
            When the document was added to the document list. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.Document.Name">
            
            The name of the document, which is unique within its folder.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.Document.Path">
            
            The location of the document in the document list and folder hierarchy.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.Document.PublishState">
            
            The current state of the document, which is Active, Draft, or Latest. Active documents are published and cannot be deleted. Querying Latest returns the most recent version of the document, regardless of whether it is published or a draft.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.Document.UpdateDate">
            
            Date and time when the entity was last updated, represented in UTC Date/Time.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.Document.Properties">
            
            List of properties for the given property value.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Content.DocumentCollection">
            
            	A collection of documents in the content resource.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentCollection.PageSize">
            
            Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentCollection.StartIndex">
            
            Indicates the zero-based offset in the complete result set where the returned entities begin, when creating paged results from a query. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Content.DocumentDraftSummary">
            
            	A high level description of the document draft.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentDraftSummary.DocumentListName">
            
            Name of the document list associated with the draft.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentDraftSummary.Id">
            
            Identifier of document draft.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentDraftSummary.Name">
            
            Name of the document draft.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentDraftSummary.PublishType">
            
            Whether the draft has been published.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentDraftSummary.UpdatedBy">
            
            Unique identifier of the user who last modified the item. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Content.DocumentDraftSummaryPagedCollection">
            
            	A paged list collection of document draft summaries.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentDraftSummaryPagedCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentDraftSummaryPagedCollection.PageSize">
            
            Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentDraftSummaryPagedCollection.StartIndex">
            
            Indicates the zero-based offset in the complete result set where the returned entities begin, when creating paged results from a query. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentDraftSummaryPagedCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentDraftSummaryPagedCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Content.DocumentList">
            
            	The list of document types and related properties that define content used by the content management system (CMS).
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentList.DocumentTypes">
            
            A document type is a template.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentList.IsPublished">
            
            If true, the entity is published and available or rendered.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentList.Name">
            
            The name of the document list.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Content.DocumentListCollection">
            
            	Collection of document lists used to organize content.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentListCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentListCollection.PageSize">
            
            Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentListCollection.StartIndex">
            
            Indicates the zero-based offset in the complete result set where the returned entities begin, when creating paged results from a query. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentListCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentListCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Content.DocumentType">
            
            	The type of documents used in the CMS such as "web_page" or "template" or "image_url".
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentType.Description">
            
            User-defined description of the document type.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentType.DisplayName">
            
            The name that displays for the document type.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentType.DocumentTypeScope">
            
            The document type scope specifies where the the template can be used such as "Global".
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentType.Name">
            
            The name of the document type.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentType.ParentTypeName">
            
            If applicable, the name of the parent document type.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentType.LocalizedDescriptions">
            
            List of content entity descriptions localized to the site or site group's default language.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentType.LocalizedDisplayNames">
            
            List of content entity display names localized to the site or site group's default language.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentType.PropertyTypes">
            
            List of content property types associated with the document type.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Content.DocumentTypeCollection">
            
            	Collection of document types for the content service.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentTypeCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentTypeCollection.PageSize">
            
            Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentTypeCollection.StartIndex">
            
            Indicates the zero-based offset in the complete result set where the returned entities begin, when creating paged results from a query. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentTypeCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentTypeCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Content.Facet">
            
            	Properties of the facet used to retrieve documents.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.Facet.Count">
            
            The number of facet results.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.Facet.Name">
            
            The name of the facet.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Content.Folder">
            
            	The properties of a folder including the name of its parent document list, its name, its unique identifier, the ID of its parent folder, and the file location path where it can be found in the folder hierarchy.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.Folder.DocumentListName">
            
            The name of the document list that contains the folder.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.Folder.Id">
            
            Unique identifier of the folder.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.Folder.Name">
            
            The name of the folder.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.Folder.ParentId">
            
            If applicable, the parent folder that contains this folder.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.Folder.Path">
            
            The content path associated with the folder.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Content.FolderCollection">
            
            	Collection of content folders in a document list.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.FolderCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.FolderCollection.PageSize">
            
            Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.FolderCollection.StartIndex">
            
            Indicates the zero-based offset in the complete result set where the returned entities begin, when creating paged results from a query. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.FolderCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.FolderCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Content.FolderTree">
            
            	The hierarchical structure of the folders in a document list including root folder, parent folder, and subfolders.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.FolderTree.Folder">
            
            The name of the folder.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.FolderTree.Children">
            
            The subfolders contained within a folder.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Content.LocalizedString">
            
            	List of content entity display names localized to the site or site group's default language.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.LocalizedString.Locale">
            
            Language used for the entity. Currently, only "en-US" is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.LocalizedString.Value">
            
            Value for the localized string.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Content.PropertyType">
            
            	Property type available for content. Property types are like templates that can be reused.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.PropertyType.Description">
            
            Description of the content property type.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.PropertyType.DisplayName">
            
            The display name of the content property type.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.PropertyType.DisplayTemplate">
            
            The template display details of the property type.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.PropertyType.EditTemplate">
            
            The template edit details of the property type.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.PropertyType.IsAggregatable">
            
            If true, this entity can be grouped.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.PropertyType.IsMultiValued">
            
            If true, the property type has several values. If false, the property type can only have one value.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.PropertyType.IsQueryable">
            
            If true, the entity can be searched. If false, the entity cannot be searched.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.PropertyType.IsRequired">
            
            If true, the entity is required for the request to return a valid response.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.PropertyType.IsSortable">
            
            If true, the property type results are sortable. If false, the property type results cannot be sorted by any options.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.PropertyType.Name">
            
            The name of the content property type.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.PropertyType.Regex">
            
            Regular expression used for data validation.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.PropertyType.LocalizedDescriptions">
            
            List of content entity descriptions localized to the site or site group's default language.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.PropertyType.LocalizedDisplayNames">
            
            List of content entity display names localized to the site or site group's default language.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.PropertyType.PropertyValueType">
            
            Wrapper for property value type.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Content.PropertyTypeCollection">
            
            	Collection of content property types.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.PropertyTypeCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.PropertyTypeCollection.PageSize">
            
            Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.PropertyTypeCollection.StartIndex">
            
            Indicates the zero-based offset in the complete result set where the returned entities begin, when creating paged results from a query. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.PropertyTypeCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.PropertyTypeCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Content.PropertyValue">
            
            	The actual value for the content property.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.PropertyValue.PropertyType">
            
            A type of content property value.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.PropertyValue.Value">
            
            The actual value for the content property.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Content.PropertyValueType">
            
            	A type of content property value.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.PropertyValueType.Name">
            
            The name of the property type value.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.PropertyValueType.StorageType">
            
            The data storage type associated with this property type value.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Core.Address">
            
            	Address information to supply for a contact.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Address.Address1">
            
            Physical or mailing address line one. Usually includes the street number and street name or it could be a P.O. Box. Max length: 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Address.Address2">
            
            Physical or mailing address line two. Usually supplements the main street address with apartment, floor, suite, building, or unit information. Max length: 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Address.Address3">
            
            Physical or mailing address line three. Max length: 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Address.Address4">
            
            Physical or mailing address line four. Max length: 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Address.CityOrTown">
            
            City or town for the physical or mailing address. The maximum character length is 100.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Address.CountryCode">
            
            2 letter geographic code representing the country for the physical or mailing address. Currently limited to the US.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Address.IsValidated">
            
            If true, the address has been verified by an address validation service.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Address.PostalOrZipCode">
            
            The postal or zip code for the address. For example, a USPS-approved ZIP code standard is ZIP+4: 12345-6789. The maximum character length is 100.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Address.StateOrProvince">
            
            The two-letter geographic code representing the state for the physical or mailing address. This is currently limited to the US.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Address.AddressType">
            
            The type of address, which is commercial or residential.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Core.AuditInfo">
            
            	Identifier and datetime stamp information recorded when creating or updating a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.AuditInfo.CreateBy">
            
            Unique identifier of the user created the resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.AuditInfo.CreateDate">
            
            Date and time when the entity was created, represented in UTC Date/Time.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.AuditInfo.UpdateBy">
            
            Unique identifier of the user who last modified the item. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.AuditInfo.UpdateDate">
            
            Date and time when the entity was last updated, represented in UTC Date/Time.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Core.Behavior">
            
            	***Always private and should not be published.***
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Behavior.CategoryId">
            
            Unique identifier for the storefront container used to organize products.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Behavior.Id">
            
            Identifier of the entity.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Behavior.RequiresBehaviorIds">
            
            For validation purposes, the integer value must be a list of behavior Id's.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Core.BehaviorCategory">
            
            	***Always private and should not be published.***
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.BehaviorCategory.Id">
            
            Identifier of the entity.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Core.BehaviorCategoryCollection">
            
            	***Always private and should not be published.***
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.BehaviorCategoryCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.BehaviorCategoryCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Core.BehaviorCollection">
            
            	***Always private and should not be published.***
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.BehaviorCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.BehaviorCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Core.Contact">
            
            	Contact information for an account.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Contact.CompanyOrOrganization">
            
            The legal or doing business as (DBA) or tradestyle name of the business or organization. The maximum character length is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Contact.Email">
            
            The email address of the specified user or the email address associated with the specified entity.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Contact.FirstName">
            
            The first name of the contact. The maximum character length is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Contact.Id">
            
            Identifier of the contact.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Contact.LastNameOrSurname">
            
            The last name or surname of the contact. The maximum character length is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Contact.MiddleNameOrInitial">
            
            The middle name or the first initial of the middle name of the contact. The maximum character length is 100.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Contact.Address">
            
            Address information for the contact.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Contact.PhoneNumbers">
            
            List of phone numbers associated with the customer account contact.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Core.Extensible.Attribute">
            
            	The properties of the attribute to extend for either customers or orders.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.Attribute.AdminName">
            
            Name of this extensible attribute in Mozu Admin.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.Attribute.AttributeCode">
            
            Merchant-defined code for an extensible attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.Attribute.DataType">
            
            The data type of the attribute. There are four valid data types: "Bool", "DateTime", "Number", "String"
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.Attribute.Id">
            
            Unique identifier of the extensible attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.Attribute.InputType">
            
            There are six valid input types: "YesNo", "Date", "DateTime", "List", "TextBox", "TextArea"
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.Attribute.IsActive">
            
            If true, the customer or order attribute is active.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.Attribute.Namespace">
            
            Namespace associated with this extensible attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.Attribute.AttributeMetadata">
            
            List of metadata defined for an extensible attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.Attribute.Content">
            
            List of localized content properties for the extensible attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.Attribute.Validation">
            
            Properties used when validating a value entered for an extensible attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.Attribute.VocabularyValues">
            
            List of valid vocabulary values defined for an attribute.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Core.Extensible.AttributeCollection">
            
            	Collection of attributes to extend.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.AttributeCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.AttributeCollection.PageSize">
            
            Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.AttributeCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.AttributeCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Core.Extensible.AttributeLocalizedContent">
            
            	The attribute content localized based on the site's assigned locale code.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.AttributeLocalizedContent.Description">
            
            Localized content for the description of the attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.AttributeLocalizedContent.LocaleCode">
            
            Language used for the entity. Currently, only "en-US" is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.AttributeLocalizedContent.Name">
            
            Localized content for the name of the attribute.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Core.Extensible.AttributeMetadataItem">
            
            	Properties of a metadata item defined for an attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.AttributeMetadataItem.Key">
            
            Key used for metadata defined for an extensible attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.AttributeMetadataItem.Value">
            
            Value of a metadata item defined for an extensible attribute.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Core.Extensible.AttributeSet">
            
            	A collection of customer or order's attributes.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.AttributeSet.Id">
            
            Unique identifier of the attribute set.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.AttributeSet.IsActive">
            
            If true, the attribute set is marked as available to provide extensibility to this order or customer.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.AttributeSet.Assignments">
            
            List of attribute set assignments.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.AttributeSet.Attributes">
            
            List of attribute set attributes.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.AttributeSet.Content">
            
            The actual content for an attribute set.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.AttributeSet.Location">
            
            Wrapper for the system-defined location identifier that denotes where entities will render. The location is where in the application, such as a web page, that the entities should show.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Core.Extensible.AttributeSetAssignment">
            
            	Assign the attribute set to either customer or order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.AttributeSetAssignment.IsEditable">
            
            If true, the entity can be changed such as via text in a text box.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.AttributeSetAssignment.LocationId">
            
            Identifier of the location. Locations describe where in the application the attribute definition will be rendered (such as a page).
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.AttributeSetAssignment.Sequence">
            
            The numeric value that denotes the place this entity occupies in the order of the entity list.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.AttributeSetAssignment.AttributeSet">
            
            Wrapper for the collection of related attributes.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.AttributeSetAssignment.Location">
            
            Wrapper for the system-defined location identifier that denotes where entities will render. The location is where in the application, such as a web page, that the entities should show.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Core.Extensible.AttributeSetAttribute">
            
            	Properties for an attribute set attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.AttributeSetAttribute.IsMultiValued">
            
            If true, the attribute in the attribute set has multiple values.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.AttributeSetAttribute.IsReadOnly">
            
            If true, the attribute in the attribute set is read-only and cannot be modified.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.AttributeSetAttribute.IsRequired">
            
            If true, the entity is required for the request to return a valid response.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.AttributeSetAttribute.Sequence">
            
            The numeric value that denotes the place this entity occupies in the order of the entity list.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.AttributeSetAttribute.Attribute">
            
            Wrapper for the attribute properties to extend.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Core.Extensible.AttributeSetCollection">
            
            	A collection of product attribute sets.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.AttributeSetCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.AttributeSetCollection.PageSize">
            
            Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.AttributeSetCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.AttributeSetCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Core.Extensible.AttributeSetLocalizedContent">
            
            	The property type of the attribute set content. Includes description, locale code, and name.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.AttributeSetLocalizedContent.Description">
            
            Description of the attribute set, in the language specified by the locale code.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.AttributeSetLocalizedContent.LocaleCode">
            
            Language used for the entity. Currently, only "en-US" is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.AttributeSetLocalizedContent.Name">
            
            Name of the attribute set, in the language specified by the locale code.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.AttributeValidation.MaxDateTime">
            
            The latest possible date and time the extensible attribute can be validated.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.AttributeValidation.MaxNumericValue">
            
            The maximum number that can be entered as a value for an extensible attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.AttributeValidation.MaxStringLength">
            
            The maximum length possible for a string value entered for an extensible attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.AttributeValidation.MinDateTime">
            
            The earliest date and time an extensible attribute can be validated.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.AttributeValidation.MinNumericValue">
            
            The minimum numeric value required to validate an extensible attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.AttributeValidation.MinStringLength">
            
            The maximum length possible for a string value entered for an extensible attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.AttributeValidation.RegularExpression">
            
            Regular expression used to validate the extensible attribute value.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Core.Extensible.AttributeValueLocalizedContent">
            
            	The attribute value localized content are the content strings used to describe an attribute value in the localized language specified by the site's locale code. Extensible only for customer and order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.AttributeValueLocalizedContent.LocaleCode">
            
            Language used for the entity. Currently, only "en-US" is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.AttributeValueLocalizedContent.Value">
            
            Localized content for the extensible attribute value.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Core.Extensible.AttributeVocabularyValue">
            
            	Properties of a vocabulary value defined for an extensible attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.AttributeVocabularyValue.Sequence">
            
            The numeric order of a vocabulary value defined for an extensible attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.AttributeVocabularyValue.Value">
            
            Possible value associated with a vocabulary value defined for an extensible attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.AttributeVocabularyValue.Content">
            
            List of content associated with a vocabulary value defined for an extensible attribute.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Core.Extensible.Location">
            
            	A location is a system-defined identifier such as page or screen location that describes where in the application, such as a page, where the attribute definition renders.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.Location.Id">
            
            Unique identifier of the location.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.Location.Name">
            
            The name associated with the location.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.Location.Assignments">
            
            List of location assignments.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.Location.Subsystem">
            
            The resource for which the attribute definition renders. Possible values are "Customer" and "Orders".
            
        </member>
        <member name="T:Mozu.Api.Contracts.Core.Extensible.LocationCollection">
            
            	Paged collection of location lists.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.LocationCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.LocationCollection.PageSize">
            
            Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.LocationCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.LocationCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Core.Extensible.Subsystem">
            
            	The resource for which the attribute definition renders. Possible values are "Customer" and "Orders".
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.Subsystem.Name">
            
            The resource for which the attribute definition renders. Possible values are "Customer" and "Orders".
            
        </member>
        <member name="T:Mozu.Api.Contracts.Core.Feature">
            
            	Properties of a piece of functionality in the Mozu system.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Feature.Id">
            
            Identifier of the entity.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Feature.Name">
            
            The name of the feature.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Feature.Version">
            
            Version associated with this feature.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Core.Measurement">
            
            	Dimensions of the packaged product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Measurement.Unit">
            
            The unit of measurement, such as length or weight.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Measurement.Value">
            
            The value of the measured unit.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Core.Phone">
            
            	Phone number information for a contact.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Phone.Home">
            
            Home phone number.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Phone.Mobile">
            
            Mobile phone number.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Phone.Work">
            
            Work phone number.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Core.User">
            
            	Properties of the user.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.User.EmailAddress">
            
            The email address of the specified user or the email address associated with the specified entity.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.User.FirstName">
            
            The first name of the contact. The maximum character length is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.User.Id">
            
            Identifier of the user.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.User.IsActive">
            
            If true, the user is an active user.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.User.LastName">
            
            The last name or surname of the contact. The maximum character length is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.User.LocaleCode">
            
            Language used for the entity. Currently, only "en-US" is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.User.Password">
            
            The user password.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.User.Roles">
            
            Collection of roles assigned to the user.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.User.SystemData">
            
            Collection of system-supplied data about the user.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Core.UserAuthInfo">
            
            	Information required to authenticate a user.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.UserAuthInfo.EmailAddress">
            
            The email address of the specified user or the email address associated with the specified entity.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.UserAuthInfo.Password">
            
            Password of the user.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Core.UserAuthTicket">
            
            	Properties of a user authentication ticket.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.UserAuthTicket.AccessToken">
            
            Access token for the user authentication ticket.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.UserAuthTicket.AccessTokenExpiration">
            
            The date and time the access token expires for the user authentication ticket.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.UserAuthTicket.GrantedBehaviors">
            
            Encrypted list of behaviors associated with the user authentication ticket.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.UserAuthTicket.RefreshToken">
            
            The refresh roken for the user authentication ticket.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.UserAuthTicket.RefreshTokenExpiration">
            
            The date and time the refresh token expires for the user authentication ticket.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.UserAuthTicket.Scope">
            
            The tenant scope to which the user authentication ticket applies.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.UserAuthTicket.User">
            
            Properties of the user.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Core.UserCollection">
            
            	Collection of users and user details.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.UserCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.UserCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Core.UserProfile">
            
            	Properties of the admin user profile.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.UserProfile.EmailAddress">
            
            The email address of the specified user or the email address associated with the specified entity.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.UserProfile.FirstName">
            
            The first name of the contact. The maximum character length is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.UserProfile.LastName">
            
            The last name or surname of the contact. The maximum character length is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.UserProfile.UserId">
            
            Identifier of the user.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Core.UserRole">
            
            	Properties of a role assigned to a user for a defined scope.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.UserRole.RoleId">
            
            Unique identifier of the user role.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.UserRole.RoleName">
            
            The name of the user role, such as "developer" or "administrator".
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.UserRole.UserId">
            
            Unique identifier of the user the role is assigned to.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.UserRole.AssignedInScope">
            
            Properties of the developer account or Mozu tenant associated with the user role.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.UserRole.AuditInfo">
            
            Identifier and datetime stamp information recorded when creating or updating a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Core.UserScope">
            
            	Properties of the scope in which a user operates, which represents a developer account or Mozu tenant.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.UserScope.Id">
            
            Identifier of the scope, which represents a developer account ID or tenant ID.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.UserScope.Type">
            
            The type of scope, which is a developer account or tenant.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Core.UserSystemData">
            
            	System-supplied and read-only information about the user.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.UserSystemData.CreatedOn">
            
            Date and time when the entity was created, represented in UTC Date/Time.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.UserSystemData.FailedLoginAttemptCount">
            
            The number of failed authentication attempts associated with the user.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.UserSystemData.FirstFailedLoginAttemptOn">
            
            The date and time the initial login was unsuccessful. Each time a user attempts to authenticate and it fails, an update occurs on this field. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.UserSystemData.IsLocked">
            
            If true, the user account is locked due to multiple failed authentication attempts.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.UserSystemData.IsPasswordChangeRequired">
            
            If true, the login requires a password change for increased security. If false, the login does not require a password change.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.UserSystemData.LastLockedOn">
            
            When the user's account was last locked. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.UserSystemData.LastLoginOn">
            
             When the user last logged into the store. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.UserSystemData.LastPasswordChangeOn">
            
             When the password was last modified. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.UserSystemData.RemainingLoginAttempts">
            
            The number of login attempts left for the user. The user must login successfully before this value reaches zero otherwise the account will be locked.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.UserSystemData.UpdatedOn">
            
            Date and time when the entity was last updated, represented in UTC Date/Time.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Core.UserTokenInfo">
            
            	Information stored in the user token.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.UserTokenInfo.AccessToken">
            
            The access token associated with the user's authentication ticket.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Customer.Card">
            
            	Properties of a credit card used to submit payment for an order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Card.CardNumberPart">
            
            The masked credit card number part returned from the payment gateway.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Card.CardType">
            
            The type of credit card, such as Visa or Amex.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Card.ExpireMonth">
            
            The two-digit month the credit card expires.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Card.ExpireYear">
            
            The four-digit year the credit card expires.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Card.Id">
            
            Unique ID of the credit card for the customer account. This identifier is separate from the credit card number.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Card.NameOnCard">
            
            The name printed on the credit card.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Customer.CardCollection">
            
            	Collection of credit cards defined for the customer account.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CardCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Customer.CurrencyAmount">
            
            	The currency code and the total monetary sum of the order. Currently, only USD is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CurrencyAmount.Amount">
            
            The monetary amount in the specified currency locale code.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CurrencyAmount.CurrencyCode">
            
            3-letter ISO 4217 standard global currency code. Currently, only "USD" (US Dollar) is supported.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Customer.CustomerAccount">
            
            	Properties of the customer account.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAccount.AcceptsMarketing">
            
            If true, the customer prefers to receive marketing material such as newsletters or email offers.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAccount.CompanyOrOrganization">
            
            The legal or doing business as (DBA) or tradestyle name of the business or organization. The maximum character length is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAccount.Id">
            
            Identifier of the entity.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAccount.SiteId">
            
            Unique identifier of the site.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAccount.TaxExempt">
            
            If true, this customer account has tax exempt status.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAccount.TaxId">
            
            The tax identification number associated with the customer account.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAccount.UserId">
            
            Unique identifier of the user associated with the customer account.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAccount.Attributes">
            
            Collection of customer account attributes.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAccount.AuditInfo">
            
            Identifier and datetime stamp information recorded when creating or updating a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAccount.Contacts">
            
            Contact information, including the contact's name, address, phone numbers, email addresses, and company (if supplied). Also indicates whether this is a billing, shipping, or billing and shipping contact.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAccount.Groups">
            
            List of groups associated with this customer account.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAccount.Notes">
            
            List of customer account notes.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAccount.OrderSummary">
            
            The order summary includes the date of the most recent order, a list of the number of orders made, and the total monetary sum of all orders including cancellations and refunds associated with the customer account.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Customer.CustomerAccountCollection">
            
            	Paged list of customer accounts sorted and filtered by any query parameters specified in the request.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAccountCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAccountCollection.PageSize">
            
            Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAccountCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAccountCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Customer.CustomerAttribute">
            
            	Properties of an attribute associated with a customer account.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAttribute.AttributeId">
            
            Unique identifier of the customer account attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAttribute.AttributeSetId">
            
            The attribute set associated with the customer account attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAttribute.Id">
            
            Unique identifier of the customer account attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAttribute.Values">
            
            List of values for the attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAttribute.AuditInfo">
            
            Identifier and datetime stamp information recorded when creating or updating a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Customer.CustomerAttributeCollection">
            
            	Collection of customer account attributes.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAttributeCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAttributeCollection.PageSize">
            
            Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAttributeCollection.StartIndex">
            
            Indicates the zero-based offset in the complete result set where the returned entities begin, when creating paged results from a query. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAttributeCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAttributeCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Customer.CustomerContact">
            
            	Contact information, including the contact's name, address, phone numbers, email addresses, and company (if supplied). Also indicates whether this is a billing, shipping, or billing and shipping contact.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerContact.AccountId">
            
            Unique identifier of the customer account.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerContact.CompanyOrOrganization">
            
            The legal or doing business as (DBA) or tradestyle name of the business or organization. The maximum character length is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerContact.Email">
            
            The email address of the specified user or the email address associated with the specified entity.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerContact.FirstName">
            
            The first name of the contact. The maximum character length is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerContact.Id">
            
            Identifier of the customer contact.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerContact.LastNameOrSurname">
            
            The last name or surname of the contact. The maximum character length is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerContact.MiddleNameOrInitial">
            
            The middle name or the first initial of the middle name of the contact. The maximum character length is 100.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerContact.Address">
            
            Address associated with the customer account contact.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerContact.AuditInfo">
            
            Identifier and datetime stamp information recorded when creating or updating a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerContact.PhoneNumbers">
            
            List of phone numbers associated with the customer account contact.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Customer.CustomerContactCollection">
            
            	Paged list of contact information for a specified customer account.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerContactCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerContactCollection.PageSize">
            
            Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerContactCollection.StartIndex">
            
            Indicates the zero-based offset in the complete result set where the returned entities begin, when creating paged results from a query. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerContactCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerContactCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Customer.CustomerGroup">
            
            	A set of customers.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerGroup.Id">
            
            Identifier of the entity.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerGroup.Name">
            
            Name of the customer group.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerGroup.AuditInfo">
            
            Identifier and datetime stamp information recorded when creating or updating a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Customer.CustomerGroupCollection">
            
            	Paged list of customer sets.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerGroupCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerGroupCollection.PageSize">
            
            Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerGroupCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerGroupCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Customer.CustomerNote">
            
            	Properties of a note configured for a customer account.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerNote.Content">
            
            The contents of a customer account note.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerNote.Id">
            
            Identifier of the customer account note.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerNote.AuditInfo">
            
            Identifier and datetime stamp information recorded when creating or updating a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Customer.CustomerNoteCollection">
            
            	Collection of notes for a customer account.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerNoteCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerNoteCollection.PageSize">
            
            Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerNoteCollection.StartIndex">
            
            Indicates the zero-based offset in the complete result set where the returned entities begin, when creating paged results from a query. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerNoteCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerNoteCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Customer.OrderSummary">
            
            	The order summary includes the date of the most recent order, a list of the number of orders made, and the total monetary sum of all orders including cancellations and refunds.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.OrderSummary.LastOrderDate">
            
            The most recent order date made by the specified customer account. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.OrderSummary.OrderCount">
            
            The number of orders.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.OrderSummary.TotalOrderAmount">
            
            The total monetary sum of the order, including items, sales tax, shipping fees, and other fees.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Event.Event">
            
            	When a create, read, update, or delete happens on an order, product, discount, or category.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.Event.EntityId">
            
            The unique identifier of the entity that caused the event. For example, if the event is "ProductCreated", the entity ID value represents the product code of the product that was created.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.Event.Id">
            
            The unique identifier of the event.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.Event.IsTest">
            
            If true, the event record was generated as a test request for an application.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.Event.SiteGroupId">
            
            Unique identifier of the site group.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.Event.TenantId">
            
            Unique identifier of the Mozu tenant.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.Event.Topic">
            
            The type of event that was performed, such as "product.created" or "category.deleted".
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.Event.AuditInfo">
            
            Identifier and datetime stamp information recorded when creating or updating a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Event.EventCollection">
            
            	The paged collection of events.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.EventCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.EventCollection.PageSize">
            
            Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.EventCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.EventCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.PaymentService.GatewayAccount">
            
            	Account information for the payment.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PaymentService.GatewayAccount.CountryCode">
            
            2 letter geographic code representing the country for the physical or mailing address. Currently limited to the US.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PaymentService.GatewayAccount.GatewayDefinitionId">
            
            Identifier of the payment gateway.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PaymentService.GatewayAccount.Id">
            
            Identifier of the entity.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PaymentService.GatewayAccount.IsActive">
            
            If true, the product is marked as available for sale. Setting a product to IsActive = false will prevent it from being shown on the customer facing storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PaymentService.GatewayAccount.CredentialFields">
            
            List of credential fields for the payment gateway account.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PaymentService.GatewayCredentialFieldDefinition.AdminDisplayOrder">
            
            ***Always private and should not be published.*** Previous ApiRefId "Mozu.PaymentService.Contracts.GatewayCredentialFieldDefinition.AdminDisplayOrder"
            
        </member>
        <member name="T:Mozu.Api.Contracts.PaymentService.GatewayCredentialFieldValue">
            
            	Field value information for the payment gateway.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PaymentService.GatewayCredentialFieldValue.Name">
            
            The name of the payment gateway field.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PaymentService.GatewayCredentialFieldValue.Value">
            
            The value of the payment gateway field.
            
        </member>
        <member name="T:Mozu.Api.Contracts.PaymentService.GatewayDefinition">
            
            	Properties of the payment gateway.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PaymentService.GatewayDefinition.CountryCode">
            
            2 letter geographic code representing the country for the physical or mailing address. Currently limited to the US.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PaymentService.GatewayDefinition.Id">
            
            Unique identifier of the payment gateway definition.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PaymentService.GatewayDefinition.IntegrationImplTypeName">
            
            The implementing type name of the integration with the payment gateway.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PaymentService.GatewayDefinition.Name">
            
            Name of the payment gateway.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PaymentService.GatewayDefinition.ProdServiceURL">
            
            URL of the production payment service.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PaymentService.GatewayDefinition.TestServiceURL">
            
            URL of the test payment service environment.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PaymentService.GatewayDefinition.CredentialDefinitions">
            
            Credential fields for the payment gateway. For security purposes, Mozu does not return these credential fields.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PaymentService.GatewayDefinition.PreAuthorizeDefinition">
            
            Definition of the preauthorization gateway.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PaymentService.GatewayDefinition.SupportedCards">
            
            The types of credit cards supported by this payment gateway.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PaymentService.PreAuthorizeDefinition.Id">
            
            Identifier of the entity.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PaymentService.PreAuthorizeTransactionTypeDataContract.Id">
            
            Identifier of the entity.
            
        </member>
        <member name="T:Mozu.Api.Contracts.PricingRuntime.ItemTaxContext">
            
            	Properties of the tax context applicable for line items in an order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.ItemTaxContext.Id">
            
            Unique identifier of the line item in the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.ItemTaxContext.Quantity">
            
            Quantity of the line item in the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.ItemTaxContext.ShippingTax">
            
            Amount of tax applied to shipping costs for the line item in the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.ItemTaxContext.Tax">
            
            The total tax amount applied to the line item in the order, minus any shipping taxes.
            
        </member>
        <member name="T:Mozu.Api.Contracts.PricingRuntime.OrderTaxContext">
            
            	Properties of the tax context applicable for the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.OrderTaxContext.HandlingFeeTax">
            
            Tax amount applied to the handling fee defined for orders on this site.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.OrderTaxContext.OrderTax">
            
            Tax amount applied to the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.OrderTaxContext.ShippingTax">
            
            Tax amount applied to the shipping costs on the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.OrderTaxContext.ItemTaxContexts">
            
            Properties of the tax context applicable for line items in an order.
            
        </member>
        <member name="T:Mozu.Api.Contracts.PricingRuntime.ProductAttribute">
            
            	Details of the product attribute, such its name and description.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.ProductAttribute.DataType">
            
            The data type of the attribute. There are four valid data types: "Bool", "DateTime", "Number", "String"
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.ProductAttribute.Description">
            
            The description of this product attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.ProductAttribute.InputType">
            
            The storefront interface input type for this attribute such as a radio button or drop-down menu selection.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.ProductAttribute.Name">
            
            The name of the product attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.ProductAttribute.ValueType">
            
            An attribute value type is either predefined vocabulary by the admin during product attribute set up or it can be "AdminEntered" or "ShopperEntered". The difference between predefined values versus manually entered values is such that the first choice is a set of options to choose from. AdminEntered and ShopperEntered are values that are entered rather than system-supplied and are not stored in the database, but captured during a live commerce operations such as during an order.
            
        </member>
        <member name="T:Mozu.Api.Contracts.PricingRuntime.ProductProperty">
            
            	Details of a property defined for a product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.ProductProperty.IsHidden">
            
            If true, this product property does not appear on the storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.ProductProperty.IsMultiValue">
            
            If true, the product property has multiple values.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.ProductProperty.AttributeDetail">
            
            Details of a product attribute.
            
        </member>
        <member name="T:Mozu.Api.Contracts.PricingRuntime.ProductPropertyValue">
            
            	Properties of a value for a product property.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.ProductPropertyValue.StringValue">
            
            If the product property value is a text entry, the string value of the product property.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.ProductPropertyValue.Value">
            
            If the product property value is selected from a list of possible values, the selected value.
            
        </member>
        <member name="T:Mozu.Api.Contracts.PricingRuntime.TaxableLineItem">
            
            	Properties of a line item in an order that is subject to tax.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.TaxableLineItem.Id">
            
            Unique identifier of the taxable line item.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.TaxableLineItem.IsTaxable">
            
            If true, the line item in the order is subject to tax.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.TaxableLineItem.LineItemPrice">
            
            The sale price of the line item in the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.TaxableLineItem.Quantity">
            
            The quantity of the line item in the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.TaxableLineItem.ShippingAmount">
            
            The amount of shipping calculated for a line item in an order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.TaxableLineItem.ProductProperties">
            
            Properties of the product that represents the line item in the order.
            
        </member>
        <member name="T:Mozu.Api.Contracts.PricingRuntime.TaxableOrder">
            
            	Properties of an order for which to calculate tax. When a tax capability is enabled for a tenant, Mozu sends the TaxableOrder properties to the capability as read-only, system-supplied information.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.TaxableOrder.HandlingFee">
            
            Handling fee associated with the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.TaxableOrder.OrderDate">
            
            The date and time the order was submitted.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.TaxableOrder.ShippingAmount">
            
            The total shipping amount calculated for the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.TaxableOrder.LineItems">
            
            The line items associated with the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.TaxableOrder.TaxContext">
            
            The tax properties associated with the order.
            
        </member>
        <member name="T:Mozu.Api.Contracts.PricingRuntime.TaxContext">
            
            	The tax properties associated with the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.TaxContext.CustomerId">
            
            Unique identifier of the customer.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.TaxContext.TaxContextId">
            
            Unique identifier of the tax context.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.TaxContext.TaxExemptId">
            
            If the order is exempt from sales tax, the unique identifier of the tax exempt entity.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.TaxContext.DestinationAddress">
            
            The address to which the order ships.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.TaxContext.OriginAddress">
            
            The address from which the order ships.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.Attribute">
            
            	Details of an attribute used to describe individual aspects of a product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Attribute.AdminName">
            
            The administrative name of the product attribute as it appears in Mozu Admin.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Attribute.AttributeCode">
            
            Merchant-defined identifier of the product attribute used to generate the attribute's fully qualified name.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Attribute.AttributeDataTypeSequence">
            
            Generated sequence that increments for each attribute and data type combination created. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Attribute.AttributeFQN">
            
            The fully qualified name of the attribute, which is a user defined attribute identifier.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Attribute.AttributeSequence">
            
            Generated sequence that increments for each product attribute created. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Attribute.DataType">
            
            The data type of the product attribute, which is a Bool, DateTime, Number, or String. The attribute's data type cannot be changed.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Attribute.InputType">
            
            The storefront interface input type for the product attribute, which is a Date, DateTime, List, TextArea, TextBox, or YesNo. The attribute's input type cannot be changed.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Attribute.IsExtra">
            
            If true, the product attribute is an add-on configuration made by the shopper that does not represent a product variation, such as a monogram.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Attribute.IsOption">
            
            If true, the product attribute is a merchant- or shopper-configurable option, such as size or color, that represents a product variation.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Attribute.IsProperty">
            
            If true, the product attribute describes aspects of the product that do not represent an option configurable by the shopper, such as screen resolution or brand.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Attribute.Namespace">
            
            If applicable, the registered namespace associated with the product attribute, used to generate the fully qualified name. If no namespace is defined, the namespace associated with the tenant is automatically assigned.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Attribute.ValueType">
            
            The type of value associated with the product attribute, which is ShopperEntered (the shopper selects or enters an attribute value during checkout), Predefined (the merchant sets the attribute value from a list during product attribute definition), or AdminEntered (the merchant selects or enters a value during product definition). The attribute value type cannot be changed.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Attribute.AttributeMetadata">
            
            List of key-value pairs that store metadata associated with the product attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Attribute.AuditInfo">
            
            Identifier and datetime stamp information recorded when creating or updating a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Attribute.Content">
            
            Complex type that contains content for a language specified by LocaleCode.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Attribute.Validation">
            
            Properties of the validation of a product attribute, which contains rules that dictate what values are valid entries for product attributes.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Attribute.VocabularyValues">
            
            Array list of the defined vocabulary values for the specified product attribute. For example, for a Color attribute, vocabulary values might include black, white, and purple.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.AttributeCollection">
            
            	Paged list of defined product attributes.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeCollection.PageSize">
            
            Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType">
            
            	A product type is like a product template that can be reused in the product admin service. Assign a product type to have certain attributes.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType.AttributeFQN">
            
            The fully qualified name of the attribute, which is a user defined attribute identifier.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType.IsHiddenProperty">
            
            If true, this property is hidden on the storefront. If false, this property is not hidden from the storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType.IsInheritedFromBaseType">
            
            If true, this entity is inherited from the base type. If false, this entity is not inherited from the base type.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType.IsMultiValueProperty">
            
            If true, this attribute has more than one possible value.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType.IsRequiredByAdmin">
            
            If true, the entity is required by the admin. If false, the entity is not required by the admin.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType.Order">
            
            The sequence of this attribute within its product type.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType.AttributeDetail">
            
            The wrapper for the properties of the product attribute to set up or generate from the system in the product admin. Properties include namespace, attribute code, attribute sequence, site group ID, input type, value type, data type, boolean flags, and metadata key value pairs.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType.VocabularyValues">
            
            The list of vocabulary values available for the attribute associated with the product type.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.AttributeLocalizedContent">
            
            	Localized content displayed in the storefront for this attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeLocalizedContent.Description">
            
            Localized content for the description of this attribute displayed in the storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeLocalizedContent.LocaleCode">
            
            Language used for the entity. Currently, only "en-US" is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeLocalizedContent.Name">
            
            Localized content for the attribute name displayed in the storefront.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.AttributeMetadataItem">
            
            	Item used to define additional key-value pairs of data associated with a product attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeMetadataItem.Key">
            
            User-defined key for attribute metadata.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeMetadataItem.Value">
            
            Value for the user-defined key.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.AttributeTypeRule">
            
            	Properties of the attribute type rule.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeTypeRule.AttributeDataType">
            
            The data type of the attribute. There are four valid data types: "Bool", "DateTime", "Number", "String"
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeTypeRule.AttributeInputType">
            
            An attribute's data type would be either "NotSpecified", "Textbox", "Textarea", "Date", "DateTime", "Dropdown", "Listbox", "Radio", "Currency", or "Checkbox" and will be a valid value defined in the type rules resource.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeTypeRule.AttributeUsageType">
            
            Describes how an attribute will be used. Valid types are "Extra", "Option", and "Property".
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeTypeRule.AttributeValueType">
            
            An attribute value type is either predefined vocabulary by the admin during product attribute set up or it can be "AdminEntered" or "ShopperEntered". The difference between predefined values versus manually entered values is such that the first choice is a set of options to choose from. AdminEntered and ShopperEntered are values that are entered rather than system-supplied and are not stored in the database, but captured during a live commerce operations such as during an order.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.AttributeTypeRuleCollection">
            
            	Collection of attribute type rules.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeTypeRuleCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeTypeRuleCollection.PageSize">
            
            Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeTypeRuleCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeTypeRuleCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.AttributeValidation">
            
            	Validates the attribute configured for the product in the storefront against the attribute configured in product admin.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeValidation.MaxDateValue">
            
             System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeValidation.MaxNumericValue">
            
            The maximum number of characters for the numeric length.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeValidation.MaxStringLength">
            
            The maximum number of characters for the string length.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeValidation.MinDateValue">
            
             System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeValidation.MinNumericValue">
            
            The minimum number of characters for the numeric length.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeValidation.MinStringLength">
            
            The minimum character length of the string.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeValidation.RegularExpression">
            
            Regular expression used to process attribute values that require special formatting such as phone numbers.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValue">
            
            	Properties of an individual vocabulary value for an attribute. For example, a "color" attribute might have the following vocabulary values: Red, Blue, Green.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValue.Value">
            
            The actual vocabulary value.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValue.ValueSequence">
            
            The number that denotes the order of the entity value within a list of entity values.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValue.Content">
            
            Complex type that contains content for a language specified by LocaleCode.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValueInProductType">
            
            	The actual vocabulary value of the attribute that exists as a part of the product type.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValueInProductType.Order">
            
            Sequence of the attribute value within the product type.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValueInProductType.Value">
            
            The vocabulary value of an attribute defined for a product type.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValueInProductType.VocabularyValueDetail">
            
            Navigates vocabulary value details for an attribute defined for a product type.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValueLocalizedContent">
            
            	The localized text for the string value of a product attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValueLocalizedContent.LocaleCode">
            
            Language used for the entity. Currently, only "en-US" is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValueLocalizedContent.StringValue">
            
            The localized value of the string in the language of the locale code.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.Category">
            
            	A descriptive container in a storefront hierarchy to organize collections of products. Only available at the site-level when multiple sites and site groups exist.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Category.ChildCount">
            
            The number of children (subcategories, for example) that stem from a parent (top-level category).
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Category.Id">
            
            Identifier of the entity.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Category.IsDisplayed">
            
            If true, the admin product category is displayed in the store. If true, the category is not displayed.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Category.ParentCategoryId">
            
            Identifier of the parent or top-level category.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Category.ProductCount">
            
            The number of products in a list.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Category.Sequence">
            
            The numeric value that denotes the place this entity occupies in the order of the entity list.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Category.AuditInfo">
            
            Identifier and datetime stamp information recorded when creating or updating a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Category.Content">
            
            Complex type that contains content for a language specified by LocaleCode.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.CategoryCollection">
            
            	The container for a non-paged list of related site-specific product category properties.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.CategoryCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.CategoryCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.CategoryLocalizedContent">
            
            	The container for category properties that are shown in the language specified by the locale code.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.CategoryLocalizedContent.Description">
            
            Description of the product category in the language specified by the locale code.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.CategoryLocalizedContent.LocaleCode">
            
            Language used for the entity. Currently, only "en-US" is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.CategoryLocalizedContent.MetaTagDescription">
            
            Description defined for the product category metadata, used to manage internal product information, in the language specified by the locale code.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.CategoryLocalizedContent.MetaTagKeywords">
            
            Keywords defined for the product category metadata, used to manage internal product information, in the language specified by the locale code.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.CategoryLocalizedContent.MetaTagTitle">
            
            Title defined for the product category metadata, used to manage internal product information, in the language specified by the locale code.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.CategoryLocalizedContent.Name">
            
            The name of the product category in the language specified by the locale code.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.CategoryLocalizedContent.PageTitle">
            
            Title that appears on new product category pages, in the language specified by the locale code.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.CategoryLocalizedContent.Slug">
            
            Human-readable identifier to assign to the category to generate user-friendly URLs.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.CategoryPagedCollection">
            
            	The container for paged lists of related site-specific product category properties.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.CategoryPagedCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.CategoryPagedCollection.PageSize">
            
            Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.CategoryPagedCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.CategoryPagedCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.Discount">
            
            	Discount used to calculate SalePrice. Includes coupon code if applicable, amount of the discount, and discount savings. Discounts can be either an absolute price or a percentage off. The sale price beats any discounts.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Discount.Amount">
            
            The integer amount of the discount. For example, an entry of "10" could represent a discount of $10.00 or a discount of 10%, depending on the type.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Discount.AmountType">
            
            The type of discount amount, such as an amount or a percentage.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Discount.CouponCode">
            
            Alphanumeric code associated with the coupon or promotion that results in a discounted price.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Discount.CurrentRedemptionCount">
            
            The most recent number of redeemed discounts.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Discount.ExpirationDate">
            
             The date when the order will no longer be active or considered abandoned. For example, if a guest or anonymous shoppper has 14 days of inactivity, the order is considered abandoned after that period of inactivity. An order never expires for shoppers who are logged into their account. Date in UTC Date/Time. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Discount.Id">
            
            Unique identifier of the discount.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Discount.MaxRedemptionCount">
            
            The maximum number of discount redemptions accepted.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Discount.RequiresCoupon">
            
            If true, a coupon code entry is required to redeem the discount.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Discount.Scope">
            
            The scope to which the discount applies, which is "Order" for order discounts or "LineItem" for individual product discounts.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Discount.StartDate">
            
            Date when the product discount goes into effect. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Discount.Status">
            
            Current status of the product discount. Possible values are "Active", "Scheduled", or "Expired".
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Discount.AuditInfo">
            
            Identifier and datetime stamp information recorded when creating or updating a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Discount.Content">
            
            Complex type that contains content for a language specified by LocaleCode.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Discount.Target">
            
            Properties of the target object to which the discount applies, such as a product or an order.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.DiscountCollection">
            
            	The container for a list of discounts.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.DiscountCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.DiscountCollection.PageSize">
            
            Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.DiscountCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.DiscountCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.DiscountLocalizedContent">
            
            	The container for the language-specific name of the discount. A container exists for each supported language (LocaleCode). This parameter enables you to display the discount name in multiple languages yet manage it as a single discount internally.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.DiscountLocalizedContent.LocaleCode">
            
            Language used for the entity. Currently, only "en-US" is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.DiscountLocalizedContent.Name">
            
            Name of the localized content.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.DiscountLocalizedContent.AuditInfo">
            
            Identifier and datetime stamp information recorded when creating or updating a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.Discounts.Redemption">
            
            	Properties of a discount redemption.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Discounts.Redemption.DiscountId">
            
            Unique identifier of the discount associated with the redemption.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Discounts.Redemption.OrderNumber">
            
            Number of the order associated with the discount redemption.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Discounts.Redemption.RedeemedOn">
            
            The date and time on which the discount was redeemed.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Discounts.Redemption.UserId">
            
            Unique identifier of the user who redeemed the discount.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.DiscountTarget">
            
            	Specifies what to discount such as the type of discount and which products, categories, or shipping methods are eligible for the discount. Discount types can include the percentage off, specific monetary amount, or free shipping. This parameter also specifies the minimum monetary amount that the order must meet for the discount to apply.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.DiscountTarget.IncludeAllProducts">
            
            If true, the target discount applies to all products sold on the storefront. Applies only if the discount type is "Product".
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.DiscountTarget.MinimumOrderAmount">
            
            The minimum monetary value the order subtotal must meet in order to qualify for the discount.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.DiscountTarget.Type">
            
            The type of target to which the discount applies, such as a product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.DiscountTarget.Categories">
            
            The product categories to which the discount can apply.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.DiscountTarget.Products">
            
            The products to which the discount can apply.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.DiscountTarget.ShippingMethods">
            
            The list of shipping method parameters that describe a method including the code, localized content, and audit information.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.Facet">
            
            	Properties of the category, price, or attribute facet shoppers use to filter product display results on a storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Facet.CategoryId">
            
            Unique identifier for the storefront container used to organize products.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Facet.FacetId">
            
            Unique identifier of the facet.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Facet.FacetType">
            
            The type of facet. Valid values are "range," which enables creation of a range of values, or "value," which populates the facet values based on the associated attribute or category.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Facet.IsHidden">
            
            If true, disables a facet inherited from a parent category.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Facet.Order">
            
            The numeric sequence of the facet for its associated category.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Facet.OverrideFacetId">
            
            Overrides a facet inherited from a parent category for a specified subcategory. System-supplied and read only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Facet.AuditInfo">
            
            Identifier and datetime stamp information recorded when creating or updating a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Facet.RangeQueries">
            
            For range type facets, an array of ranges to use for the facet values. For example, a price facet might have range queries for $0-$25, $25-$50, and $50-$100.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Facet.Source">
            
            Container for the facet source information, which includes the category, price, or attribute properties.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Facet.Validity">
            
            System-supplied and read only parameter that validates a facet for its associated category.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.FacetRangeQuery">
            
            	For range type facets, a single range of facet values. For example, a price facet might have a $0-$25 range query.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.FacetRangeQuery.RangeValueEnd">
            
            The maximum value to use for the facet range query.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.FacetRangeQuery.RangeValueStart">
            
            The minimum value to use for the facet range query.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.FacetSet">
            
            	The list of category, price, and attribute facets defined or available for definition for the category.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.FacetSet.Available">
            
            The list of subcategories and attributes that have not been defined as facets for the category.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.FacetSet.Configured">
            
            The list of category, price, and attribute facets defined for the category.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.FacetSource">
            
            	Container for the facet source information, which includes the category, price, or attribute properties.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.FacetSource.AllowsRangeQuery">
            
            If true, the facet allows for values that consist of one or more ranges, such as 0-100, 100-200, and 200-300.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.FacetSource.DataType">
            
            The data type associated with the attribute or category that generates the facet, such as bool or string.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.FacetSource.Id">
            
            Identifier of the facet source, which is attribute, category, or price. For attribute facets, the AttributeFQN.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.FacetSource.Name">
            
            System-supplied and read-only name of the associated facet source.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.FacetSource.Type">
            
            The source type for the facet, either "Attribute" or "Element". Category and price facets are elements.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.FacetValidity">
            
            	System-supplied and read only parameter that validates a facet for its associated category.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.FacetValidity.IsValid">
            
            If true, the facet source is valid for its associated category.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.FacetValidity.ReasonCode">
            
            Code associated with a reason for facet validation to return false for its associated category.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.Product">
            
            	Properties of the product such as product code, product name, and product price.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.BaseProductCode">
            
            Merchant-generated product code for the product that any variation stems from.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.HasConfigurableOptions">
            
            If true, the product has configurable options. This option means that a product is not purchasable until the shopper selects options that resolve into a product variation. Configurable options for a product are the choices a shopper makes when ordering a product. Size and color are configurable options. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.HasStandAloneOptions">
            
            If true, this product has stand alone options that a shopper can select which can exist without product variations. Stand alone options. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.IsBackOrderAllowed">
            
            If true, a shopper can order the product when it is out of stock through the site, but can get the product once it is available again in inventory or through dropshipping.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.IsHiddenWhenOutOfStock">
            
            If true, the product does not appear on the storefront when it is not in stock. If false, the product stays on the storefront even when it is out of stock.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.IsPackagedStandAlone">
            
            If true, the product must be packaged on its own and should not be jointly packaged with other products.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.IsRecurring">
            
            If true, the product can be purchased or fulfilled at regular intervals such as a monthly billing cycle or a digital or physical subscription.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.IsTaxable">
            
            If true, the entity is subject to tax based on the relevant tax rate.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.IsValidForProductType">
            
            If true, the entity is valid for the product type provided.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.IsVariation">
            
            If true, the product in this request is a product variation of a product that has configurable options. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.ManageStock">
            
            If true, the Products services will manage inventory for this product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.ProductCode">
            
            Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.ProductTypeId">
            
            Identifier of the product type.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.ShippingClassId">
            
            Identifier of the shipping class.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.StandAlonePackageType">
            
            If the product must be packaged separately, the type of standalone package to use.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.StockAvailable">
            
            The number of products accounted for in inventory that are available for purchase.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.StockOnBackOrder">
            
            The number of products that are unavailable for current purchase, but placed on back order so that the shopper's order can still be fulfilled, for example, by dropshipping or just waiting for stock to be available again.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.StockOnHand">
            
            The number of products currently available in inventory.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.UPC">
            
            The universal product code (UPC code) of the product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.VariationKey">
            
            System-generated key that represents the attribute values that uniquely identify a specific product variation.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.ApplicableDiscounts">
            
            List of discounts available for a product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.AuditInfo">
            
            Identifier and datetime stamp information recorded when creating or updating a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.Content">
            
            Product content set in product admin.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.Extras">
            
            The list of extras set up in product admin.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.Options">
            
            The list of options set up in product admin.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.PackageHeight">
            
            Height of the package in imperial units of feet and inches.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.PackageLength">
            
            Length of the package in imperial units of feet and inches.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.PackageWeight">
            
            Weight of the package in imperial units of pounds and ounces.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.PackageWidth">
            
            Width of the package in imperial units of feet and inches.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.ProductInSites">
            
            List of products that belong to a specific site ID.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.Properties">
            
            The list of product properties to set in product admin.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.SEOContent">
            
            search engine optimized product content.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.StockOnHandAdjustment">
            
            The change made to the number of products currently available in inventory.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.VariationOptions">
            
            The list of product variation options that exist in product admin.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.ProductCategory">
            
            	The category to which a product belongs.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductCategory.CategoryId">
            
            Unique identifier for the storefront container used to organize products.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.ProductCollection">
            
            	The container for a set of products.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductCollection.PageSize">
            
            Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.ProductExtra">
            
            	Properties of an extra attribute to defined for a product that is associated with a product type that uses the extra. Setting up extras for a product enables shopper-entered information, such as initials for a monogram.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductExtra.AttributeFQN">
            
            The fully qualified name of the attribute, which is a user defined attribute identifier.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductExtra.IsMultiSelect">
            
            If true, the shopper can select more than one value from a predefined list for this extra.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductExtra.IsRequired">
            
            If true, the shopper must select the product extra and specify a value for it during checkout.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductExtra.Values">
            
            The list of predefined values a shopper can select for the product when defining this extra.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.ProductExtraValue">
            
            	Properties of a defined value for a product extra attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductExtraValue.DeltaWeight">
            
            The difference between the weight associated with this product extra and the base product. For example, if a product with a monogram weighs an extra 1/4 lb, the DeltaWeight value is "0.25".
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductExtraValue.IsDefaulted">
            
            If true, the value for the product extra is selected by default. Shopper entered extras cannot be defaulted.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductExtraValue.Value">
            
            Properties of a defined value for a product extra attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductExtraValue.AttributeVocabularyValueDetail">
            
            Detail of the product extra attribute vocabulary value.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductExtraValue.DeltaPrice">
            
            The difference between the price associated with this product extra and the base product. For example, if a product with a defined monogram extra costs an additional $10, the DeltaPrice value is "10".
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.ProductExtraValueDeltaPrice">
            
            	The properties of the price difference between the product extra and the base product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductExtraValueDeltaPrice.CurrencyCode">
            
            3-letter ISO 4217 standard global currency code. Currently, only "USD" (US Dollar) is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductExtraValueDeltaPrice.DeltaPrice">
            
            The difference between the price associated with this product extra and the base product. For example, if a product with a defined monogram extra costs an additional $10, the DeltaPrice value is "10".
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.ProductInSiteInfo">
            
            	The properties of a product where the product is associated with a specific site. Associate the product to the site using the AddProductInSite operation.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductInSiteInfo.IsActive">
            
            If true, the product info is available in the site-level from product admin.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductInSiteInfo.IsContentOverridden">
            
            If true, the price for this product is overridden in the site by the price provided in the request body of the operation. If false, the siteGroup level price will be used for the product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductInSiteInfo.IsPriceOverridden">
            
            If true, the price for this product is overridden in the site by the price provided in the request body of the operation. If false, the siteGroup level price will be used for the product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductInSiteInfo.IsSEOContentOverridden">
            
            If true, the search engine optimized (SEO) content for this product is overridden in the site by the SEO content provided in the request body of the operation. If false, the siteGroup level SEO content will be used for the product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductInSiteInfo.AuditInfo">
            
            Identifier and datetime stamp information recorded when creating or updating a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductInSiteInfo.Content">
            
            The content for an existing product associated with a site.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductInSiteInfo.Price">
            
            The price that the merchant intends to sell the product associated with a specific site which is not necessarily the list price. This is the price the merchant intends to sell the product if no sale price is present.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductInSiteInfo.ProductCategories">
            
            The list of containers that group products assigned to a specific site.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductInSiteInfo.SEOContent">
            
            List of search engine optimized product content.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.ProductLocalizedContent">
            
            	The localized product content in the language specified by the LocaleCode.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductLocalizedContent.LocaleCode">
            
            Language used for the entity. Currently, only "en-US" is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductLocalizedContent.ProductFullDescription">
            
            More detailed or full product description typically used for a product details page.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductLocalizedContent.ProductName">
            
            The descriptive brief product name.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductLocalizedContent.ProductShortDescription">
            
            Brief description of the product typically used when the product is displayed in a list or in search results.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductLocalizedContent.ProductImages">
            
            List of product images associated with a product.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.ProductLocalizedImage">
            
            	The localized product image in the language specified by the LocaleCode.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductLocalizedImage.AltText">
            
            Descriptive text associated with the image or video that appears on the storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductLocalizedImage.Id">
            
            Identifier of the localized product image.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductLocalizedImage.ImageLabel">
            
            Image title that appears on the storefront set to the language specified by the site's LocaleCode.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductLocalizedImage.ImagePath">
            
            Directory path where the physical product image is stored.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductLocalizedImage.ImageUrl">
            
            URL of the image.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductLocalizedImage.LocaleCode">
            
            Language used for the entity. Currently, only "en-US" is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductLocalizedImage.VideoUrl">
            
            The physical link or URL of the product video. The physical path name is set in the language specified by the LocaleCode.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.ProductLocalizedSEOContent">
            
            	The localized product search engine optimized content in the language specified by the LocaleCode.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductLocalizedSEOContent.LocaleCode">
            
            Language used for the entity. Currently, only "en-US" is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductLocalizedSEOContent.MetaTagDescription">
            
            The description of the metatag used for the product SEO content set to the locale code language. The metadata description is used to manage information internally.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductLocalizedSEOContent.MetaTagKeywords">
            
            The metatag keywords for the product SEO content set in the locale code language. The metatag keywords are used to manage information internally.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductLocalizedSEOContent.MetaTagTitle">
            
            The metatag title for the product SEO content set in the locale code language. The metatag title is used to manage information internally.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductLocalizedSEOContent.SEOFriendlyUrl">
            
            The search engine optimized human-readable portion of the URL in the language of the product's locale code.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductLocalizedSEOContent.TitleTagTitle">
            
            Customizes the HTML title tag within the header section of the product details page for the specified product.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.ProductOption">
            
            	Properties of the product option to create such as attribute detail, fully qualified name, and list of product option values.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductOption.AttributeFQN">
            
            The fully qualified name of the attribute, which is a user defined attribute identifier.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductOption.Values">
            
            List of values for the product option. Each value includes an attribute vocabulary value detail and value object.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.ProductOptionValue">
            
            	Properties of a value associated with a product option attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductOptionValue.Value">
            
            Value of the product option attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductOptionValue.AttributeVocabularyValueDetail">
            
            Detailed properties of the product option attribute's vocabulary value.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.ProductPrice">
            
            	The price of the product in the specified currency code (USD). This price can either be the sale price or the price for which the merchang intends to sell the product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductPrice.ISOCurrencyCode">
            
            3-letter ISO 4217 standard global currency code. Currently, only "USD" (US Dollar) is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductPrice.Price">
            
            Price that the merchant intends to sell the product which is not necessarily the list price. This is the price the merchant intends to sell the product if no sale price is present.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductPrice.SalePrice">
            
            Price of the product with a discount already applied which the merchant intends to sell the product.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.ProductProperty">
            
            	Properties of the product property to create such as attribute detail, fully qualified name, and list of product property values.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductProperty.AttributeFQN">
            
            The fully qualified name of the attribute, which is a user defined attribute identifier.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductProperty.Values">
            
            The actual values that populate a product property to set in the Admin to appear on the Storefront.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.ProductPropertyValue">
            
            	Value details for a product property attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductPropertyValue.Value">
            
            Value details for a product property attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductPropertyValue.AttributeVocabularyValueDetail">
            
            Details of the vocabulary value for predefined product property attributes.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductPropertyValue.Content">
            
            Content of the product property value.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.ProductPropertyValueLocalizedContent">
            
            	Content of the product property value in the language defined for the locale code.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductPropertyValueLocalizedContent.LocaleCode">
            
            Language used for the entity. Currently, only "en-US" is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductPropertyValueLocalizedContent.StringValue">
            
            The string value of the product property set in the language specified the locale code.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.ProductReservation">
            
            	A hold placed on product inventory for a particular product so that the quantity specified is set aside and available for purchase during the ordering process.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductReservation.Id">
            
            Identifier of the entity.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductReservation.OrderId">
            
            Unique identifier of the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductReservation.OrderItemId">
            
            The unique identifier of the item in the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductReservation.ProductCode">
            
            Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductReservation.Quantity">
            
            The quantity of items associated with the product reservation.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductReservation.AuditInfo">
            
            Identifier and datetime stamp information recorded when creating or updating a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.ProductReservationCollection">
            
            	A collection of holds placed on product inventory so that the quantities specified are made available for the ordering process.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductReservationCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductReservationCollection.PageSize">
            
            Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductReservationCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductReservationCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.ProductType">
            
            	A product type is like a product template.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductType.Id">
            
            Identifier of the entity.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductType.IsBaseProductType">
            
            If true, this product is associated with the overall product type. There is only one BaseProductType per site group. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductType.Name">
            
            Name of the product type, such as "Shoes" or "TVs".
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductType.AuditInfo">
            
            Identifier and datetime stamp information recorded when creating or updating a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductType.Extras">
            
            The list of product type attributes which exist as extras. Example: monogram
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductType.Options">
            
            The list of product type attributes which exist as options.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductType.Properties">
            
            The list of product type attributes which exist as properties, such as color.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.ProductTypeCollection">
            
            	A group of product type lists.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductTypeCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductTypeCollection.PageSize">
            
            Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductTypeCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductTypeCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.ProductVariation">
            
            	Properties of a specific product variation.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductVariation.DeltaWeight">
            
            The difference between the base weight for a product and this variation of the product, which can be a positive or negative decimal value.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductVariation.IsActive">
            
            If true, this variation of this product is marked available for sale.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductVariation.IsOrphan">
            
            If true, the production variation is no longer available for sale. For example, if a merchant stops selling all "small" shirts, all product variations with the "small" option are set to IsOrphan. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductVariation.StockOnHand">
            
            The number of product variations currently available in inventory.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductVariation.StockOnOrder">
            
            The number of product variations that are unavailable for current purchase, but placed on back order so that the shopper's order can still be fulfilled, for example, by dropshipping or just waiting for stock to be available again.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductVariation.VariationExists">
            
            If true, one or more product variations are configured for the specified product code.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductVariation.Variationkey">
            
            System-generated key that represents the attribute values that uniquely identify a specific product variation.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductVariation.VariationProductCode">
            
            Merchant-created code associated with a specific product variation. Variation product codes maintain an association with the base product code.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductVariation.DeltaPrice">
            
            The difference between the base price for the product and this variation of the product, which can be a positive or negative decimal value. For example, if the base price for a t-shirt product is $10, but the XL variation should cost $12, the DeltaPrice value should be "2". However, if the XS variation should only cost $8, the DeltaPrice value should be "-2".
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductVariation.Options">
            
            Wrapper for the list of option attributes configured for the product variation.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductVariation.StockOnHandAdjustment">
            
            The change made to the number of product variations currently available in inventory.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.ProductVariationCollection">
            
            	Collection of variations configured for a product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductVariationCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductVariationCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.ProductVariationDeltaPrice">
            
            	The difference between the base price for the product and this variation of the product, which can be a positive or negative decimal value. For example, if the base price for a t-shirt product is $10, but the XL variation should cost $12, the DeltaPrice value should be "2". However, if the XS variation should only cost $8, the DeltaPrice value should be "-2".
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductVariationDeltaPrice.CurrencyCode">
            
            3-letter ISO 4217 standard global currency code. Currently, only "USD" (US Dollar) is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductVariationDeltaPrice.Value">
            
            Positive or negative decimal value that represents the difference between this variation and the base product.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.ProductVariationOption">
            
            	Details of a product variation option.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductVariationOption.AttributeFQN">
            
            The fully qualified name of the attribute, which is a user defined attribute identifier.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductVariationOption.Value">
            
            The value of an attribute option specified for this product variation.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductVariationOption.Content">
            
            Complex type that contains content for a language specified by LocaleCode.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.ProductVariationPagedCollection">
            
            	Paged list of collections of variations for a product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductVariationPagedCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductVariationPagedCollection.PageSize">
            
            Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductVariationPagedCollection.StartIndex">
            
            Indicates the zero-based offset in the complete result set where the returned entities begin, when creating paged results from a query. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductVariationPagedCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductVariationPagedCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.StockOnHandAdjustment">
            
            	The change made to the number of products or product variations currently available in inventory.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.StockOnHandAdjustment.Type">
            
            Use a string value: Absolute or Delta
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.StockOnHandAdjustment.Value">
            
            The inventory value being adjusted expressed as a 32-bit integer.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.TargetedCategory">
            
            	Properties of a product category targeted for a defined discount.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.TargetedCategory.Id">
            
            Identifier of the product category associated with the targeted discount.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.TargetedCategory.Name">
            
            Name of the product category associated with the targeted discount.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.TargetedProduct">
            
            	Product definition targeted for a defined discount.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.TargetedProduct.Code">
            
            Product code of the product associated with the targeted discount.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.TargetedProduct.Name">
            
            Name of the product associated with the targeted discount.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.TargetedShippingMethod">
            
            	Shipping method service type, such as UPS Ground or USPS Priority Mail, targeted for a defined discount.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.TargetedShippingMethod.Code">
            
            The code associated with the carrier's shipping method service type. Service type codes include a prefix that indicates the carrier. For example: FEDEX_INTERNATIONAL_STANDARD
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.TargetedShippingMethod.Name">
            
            Name of the shipping method service type associated with the targeted discount.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.AppliedDiscount">
            
            	The discount currently applied to the cart or order, represented as a negative currency amount to be subtracted from the final price. If multiple discounts are applied to the same order, the Applied Discount displays the most valuable discount for the shopper.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.AppliedDiscount.CouponCode">
            
            Alphanumeric code associated with the coupon or promotion that results in a discounted price.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.AppliedDiscount.Impact">
            
            The value of the discount applied to the product, represented as a negative currency amount to apply to the original price.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.AppliedDiscount.Discount">
            
            Properties of the discount currently applied to the product.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.AttributeDetail">
            
            	The product attribute details common between all attribute types - properties, options, and extras.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.AttributeDetail.DataType">
            
            The data type (such as datetime or string) associated with the attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.AttributeDetail.DataTypeSequence">
            
            Unique sequence of the attribute for its data type.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.AttributeDetail.Description">
            
            Description of the attribute in the language specified by the locale code.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.AttributeDetail.InputType">
            
            The input type (such as date or text area) accepted for the attribute's data type.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.AttributeDetail.Name">
            
            Name of the atrribute in the language specified by the locale code.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.AttributeDetail.UsageType">
            
            The usage type of the product attribute, which is property, option, or extra.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.AttributeDetail.ValueType">
            
            The type of value for the attribute, which is either ShopperEntered, AdminEntered, or Predefined.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.AttributeDetail.Validation">
            
            Validation rules of an attribute that determine which values are valid for ShopperEntered and AdminEntered ValueTypes.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.AttributeValidation">
            
            	Validates the attribute configured for the product in the storefront against the attribute configured in product admin.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.AttributeValidation.MaxDateValue">
            
             System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.AttributeValidation.MaxNumericValue">
            
            The maximum number of characters for the numeric length.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.AttributeValidation.MaxStringLength">
            
            The maximum number of characters for the string length.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.AttributeValidation.MinDateValue">
            
             System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.AttributeValidation.MinNumericValue">
            
            The minimum number of characters for the numeric length.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.AttributeValidation.MinStringLength">
            
            The minimum character length of the string.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.AttributeValidation.RegularExpression">
            
            Regular expression used to process attribute values that require special formatting such as phone numbers.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.Category">
            
            	Properties of the product category that appears on the storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Category.CategoryId">
            
            Unique identifier for the storefront container used to organize products.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Category.Sequence">
            
            The numeric value that denotes the place this entity occupies in the order of the entity list.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Category.Content">
            
            Complex type that contains content for a language specified by LocaleCode.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Category.ChildrenCategories">
            
            List of the subcategories in the hierarchy for the specified categories.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Category.ParentCategory">
            
            If applicable, the parent category in the hierarchy for the specified category.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.CategoryCollection">
            
            	The container for a non-paged list of related site-specific product category properties.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.CategoryCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.CategoryCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.CategoryContent">
            
            	Localized page content for a product category.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.CategoryContent.Description">
            
            The localized description of the category to display on a storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.CategoryContent.MetaTagDescription">
            
            Defined description of the metadata used to manage product information internally, such as search engine optimization.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.CategoryContent.MetaTagKeywords">
            
            Defined keywords of the metadata used to manage product information internally, such as search engine optimization.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.CategoryContent.MetaTagTitle">
            
            Defined title of the metadata used to manage product information internally, such as search engine optimization.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.CategoryContent.Name">
            
            Name of the product category.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.CategoryContent.PageTitle">
            
            Title that appears on the top of new pages associated with the product category on the storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.CategoryContent.Slug">
            
            Human-readable identifier to associated with a product category to create friendly URLs.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.CategoryPagedCollection">
            
            	Paged collection of categories and related properties.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.CategoryPagedCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.CategoryPagedCollection.PageSize">
            
            Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.CategoryPagedCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.CategoryPagedCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.ConfiguredProduct">
            
            	Properties of a created product selection.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ConfiguredProduct.ProductCode">
            
            Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ConfiguredProduct.VariationProductCode">
            
            Merchant-created code associated with a specific product variation. Variation product codes maintain an association with the base product code.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ConfiguredProduct.AvailableShippingDiscounts">
            
            List of shipping discounts that can be applied to the configured product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ConfiguredProduct.Measurements">
            
            Dimensions of the packaged product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ConfiguredProduct.Options">
            
            The list of options set up in product admin.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ConfiguredProduct.Price">
            
            Price that the merchant intends to sell the product which is not necessarily the list price. This is the price the merchant intends to sell the product if no sale price is present.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ConfiguredProduct.PriceRange">
            
            For products with options that vary the cost of the product, the range between lowest and highest possible price of the product based on the current selection of options.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ConfiguredProduct.PurchasableState">
            
            The current state of the configured product determines whether or not the product is eligible for purchase. Products with options are only purchasable if the shopper has selected all required options. If the product is not ready for purchase, a message lists missing options that are required.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ConfiguredProduct.Stock">
            
            The number of products accounted for in inventory that are available for purchase.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.Discount">
            
            	Properties of a defined product discount.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Discount.ExpirationDate">
            
            The date and time when the product discount will no longer be active. Date in UTC Date/Time. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Discount.Name">
            
            The name assigned for the product discount.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.Facet">
            
            	Properties of the facet used to index product searches on a storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Facet.FacetType">
            
            The type of facet. Valid values are "range," which enables creation of a range of values, or "value," which populates the facet values based on the associated attribute or category.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Facet.Field">
            
            The field name associated with the facet.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Facet.Label">
            
            The descriptive label for the facet.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Facet.Values">
            
            The values associated with the facet.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.FacetValue">
            
            	The value selected for a facet when indexing a product search.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.FacetValue.Count">
            
            The number of facet value selections in a product search result set.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.FacetValue.FilterValue">
            
            Submits the selected facet value as a facet value filter.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.FacetValue.IsApplied">
            
            If true, the facet value is applied as a filter in the storefront product search.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.FacetValue.Label">
            
            The descriptive label of the facet value.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.FacetValue.ParentFacetValue">
            
            If applicable, the values of any parent category facets in a hierarchy. Hierarchical facets only apply for product categories.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.FacetValue.RangeQueryValueEnd">
            
            The maximum value selected or entered for the facet range query.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.FacetValue.RangeQueryValueStart">
            
            The minimum value selected or entered for the facet range query.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.FacetValue.Value">
            
            String representation of the facet value selected for the product search.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.FacetValue.ChildrenFacetValues">
            
            If applicable, the values of any subcategory facets in a hierarchy. Hierarchical facets only apply for product categories.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.PackageMeasurements">
            
            	Dimensions of the packaged product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.PackageMeasurements.PackageHeight">
            
            Height of the package in imperial units of feet and inches.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.PackageMeasurements.PackageLength">
            
            Length of the package in imperial units of feet and inches.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.PackageMeasurements.PackageWeight">
            
            Weight of the package in imperial units of pounds and ounces.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.PackageMeasurements.PackageWidth">
            
            Width of the package in imperial units of feet and inches.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.Product">
            
            	Properties of the product that appears on the site storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Product.AttributeSetId">
            
            Identifier of the attribute set.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Product.CreateDate">
            
            Date and time when the entity was created, represented in UTC Date/Time.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Product.IsActive">
            
            If true, the product is marked as available for sale. Setting a product to IsActive = false will prevent it from being shown on the customer facing storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Product.IsRecurring">
            
            If true, the product can be purchased or fulfilled at regular intervals such as a monthly billing cycle or a digital or physical subscription.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Product.IsTaxable">
            
            If true, the entity is subject to tax based on the relevant tax rate.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Product.ProductCode">
            
            Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Product.ProductType">
            
            A product type is like a product template that can be reused.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Product.UPC">
            
            The universal product code (UPC code) of the product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Product.AvailableShippingDiscounts">
            
            List of shipping discounts that can be applied to the product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Product.Categories">
            
            List of categories associated with the product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Product.Content">
            
            Complex type that contains content for a language specified by LocaleCode.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Product.Measurements">
            
            Dimensions of the packaged product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Product.Options">
            
            The list of options set up in product admin.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Product.Price">
            
            Price that the merchant intends to sell the product which is not necessarily the list price. This is the price the merchant intends to sell the product if no sale price is present.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Product.PriceRange">
            
            For products with options that vary the cost of the product, the range between lowest and highest possible price of the product based on the current selection of options.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Product.Properties">
            
            The list of product properties set up in product admin.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Product.PurchasableState">
            
            The current state of the configured product determines whether or not the product is eligible for purchase. Products with options are only purchasable if the shopper has selected all required options. If the product is not ready for purchase, a message lists missing options that are required.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Product.Stock">
            
            The number of products accounted for in inventory that are available for purchase.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.ProductCollection">
            
            	Collection of products and their related properties.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductCollection.PageSize">
            
            Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.ProductContent">
            
            	Content associated with a product definition that can be localized.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductContent.MetaTagDescription">
            
            Description defined for the metadata used to internally manage information about the product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductContent.MetaTagKeywords">
            
            Keywords defined for the metadata used to internally manage information about the product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductContent.MetaTagTitle">
            
            Title defined for the metadata used to internally manage information about the product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductContent.ProductFullDescription">
            
            Full description of the product, which typically appears on the product details page.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductContent.ProductName">
            
            The descriptive brief product name.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductContent.ProductShortDescription">
            
            Brief description of the product typically used when the product is displayed in a list or in search results.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductContent.SEOFriendlyUrl">
            
            Product URL defined for search engine optimization.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductContent.ProductImages">
            
            List of image files associated with the product.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.ProductImage">
            
            	Properties of an image defined for a product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductImage.AltText">
            
            Descriptive text associated with the image or video that appears on the storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductImage.ImageLabel">
            
            Image title that appears on the storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductImage.ImagePath">
            
            Directory path where the product image file is stored.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductImage.ImageUrl">
            
            URL of the product image.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductImage.Sequence">
            
            The numeric value that denotes the place this entity occupies in the order of the entity list.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductImage.VideoUrl">
            
            The file link or URL of the product video.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.ProductOption">
            
            	Represents configurable options that a shopper can choose when ordering a product, such as a T-shirt's color and size.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductOption.AttributeFQN">
            
            The fully qualified name of the attribute, which is a user defined attribute identifier.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductOption.IsMultiValue">
            
            If true, the product attribute or option has multiple values.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductOption.IsRequired">
            
            If true, the entity is required for the request to return a valid response.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductOption.AttributeDetail">
            
            Details of the product option attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductOption.Values">
            
            List of possible values for a product option attribute.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.ProductOptionSelection">
            
            	The selection the shopper made from a list of options set up in product admin.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductOptionSelection.AttributeFQN">
            
            The fully qualified name of the attribute, which is a user defined attribute identifier.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductOptionSelection.AttributeValueId">
            
            Identifier of the value of this attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductOptionSelection.ShopperEnteredValue">
            
            The custom value the shopper entered for an option set up in product admin.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductOptionSelection.Value">
            
            The attribute value.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.ProductOptionSelections">
            
            	For a product with shopper-configurable options, the properties of the product options selected by the shopper.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductOptionSelections.VariationProductCode">
            
            Product code that represents the product variation selected based on the option values the shopper entered.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductOptionSelections.Options">
            
            List of product options and values currently selected.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.ProductOptionValue">
            
            	Represents the values that are the product option selections for a shopper to choose when ordering a product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductOptionValue.AttributeValueId">
            
            Unique identifier of the product attribute value.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductOptionValue.DeltaPrice">
            
            The difference between the highest price and the lowest price.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductOptionValue.DeltaWeight">
            
            The difference between the highest weight and the lowest weight.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductOptionValue.IsDefault">
            
            If true, the product option value is the default value that the merchant supplied.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductOptionValue.IsEnabled">
            
            If true, the product option value is available for a shopper to choose. During configuration, this property will be false if the option value is invalid with other selected options.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductOptionValue.IsSelected">
            
            If true, the entity is selected. If false, the entity is not selected.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductOptionValue.ShopperEnteredValue">
            
            The product attribute value entered by the shopper, if applicable.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductOptionValue.StringValue">
            
            The string value entered for a product option attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductOptionValue.Value">
            
            The value of a product option attribute.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.ProductPrice">
            
            	The price of the product in the specified currency code (USD). This price can either be the sale price or the price for which the merchang intends to sell the product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductPrice.Price">
            
            The price the merchant intends to charge for the product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductPrice.SalePrice">
            
            The sale price defined for the product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductPrice.Discount">
            
            The discount applied to the product price.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.ProductPriceRange">
            
            	For products with options that vary the cost of the product, the range between lowest and highest possible price of the product based on the current selection of options.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductPriceRange.Lower">
            
            The lowest possible price value for a product with options that vary the cost of the product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductPriceRange.Upper">
            
            Thw highest possible price value for a product with options that vary the cost of the product.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.ProductProperty">
            
            	Details of a property attribute defined for a product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductProperty.AttributeFQN">
            
            The fully qualified name of the attribute, which is a user defined attribute identifier.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductProperty.IsHidden">
            
            If true, the product property does not appear for the product in the storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductProperty.IsMultiValue">
            
            If true, the product property can have more than one selected value.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductProperty.AttributeDetail">
            
            Details of the attribute defined as a product property.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductProperty.Values">
            
            List of values defined for the product property attribute.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.ProductPropertyValue">
            
            	Values of a product property attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductPropertyValue.StringValue">
            
            Property string value in the language specified in the locale code for the product storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductPropertyValue.Value">
            
            Value of the product property.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.ProductPurchasableState">
            
            	The current state of the product purchase determines whether or not the product is eligible for purchase. Products with options are only purchasable if the shopper has selected all required options. If the product is not ready for purchase, a message lists missing options that are required.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductPurchasableState.IsPurchasable">
            
            If true, the entity has met all requirements and considered a purchasable entity.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductPurchasableState.Messages">
            
            List of messages associated with the product if the product is not ready for purchase.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.ProductSearchResult">
            
            	The result of a product search.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductSearchResult.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductSearchResult.PageSize">
            
            Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductSearchResult.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductSearchResult.Facets">
            
            The facets applied to index products in the product search result.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductSearchResult.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.ProductStock">
            
            	Properties of products accounted for in inventory that are available for purchase.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductStock.IsBackOrderAllowed">
            
            If true, a shopper can order the product when it is out of stock through the site, but can get the product once it is available again in inventory or through dropshipping.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductStock.IsHiddenWhenOutOfStock">
            
            If true, the product does not appear on the storefront when it is not in stock. If false, the product stays on the storefront even when it is out of stock.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductStock.ManageStock">
            
            If true, the Products services will manage inventory for this product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductStock.StockAvailable">
            
            The number of products accounted for in inventory that are available for purchase.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.ProductValidationSummary">
            
            	Summary list of the product validation in a storefront, including options selected by the shopper.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductValidationSummary.IsTaxable">
            
            If true, the entity is subject to tax based on the relevant tax rate.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductValidationSummary.ProductCode">
            
            Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductValidationSummary.ProductName">
            
            The descriptive brief product name.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductValidationSummary.ProductShortDescription">
            
            Brief description of the product typically used when the product is displayed in a list or in search results.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductValidationSummary.VariationProductCode">
            
            Merchant-created code associated with a specific product variation. Variation product codes maintain an association with the base product code.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductValidationSummary.Categories">
            
            The list of product categories for the storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductValidationSummary.Image">
            
            The image configured for the product on the storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductValidationSummary.Measurements">
            
            Dimensions of the packaged product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductValidationSummary.Price">
            
            Price that the merchant intends to sell the product which is not necessarily the list price. This is the price the merchant intends to sell the product if no sale price is present.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductValidationSummary.Properties">
            
            The list of product properties configured in product admin.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductValidationSummary.PurchasableState">
            
            The current state of the product and whether or not it is available for purchasing. If the product is not eligible for purchase, the validation message is included.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductValidationSummary.Stock">
            
            The number of products accounted for in inventory that are available for purchase.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.SearchSuggestion">
            
            	Suggest product search terms to a customer based on defined queries.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.SearchSuggestion.Query">
            
            The query term entered by the shopper.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.SearchSuggestion.Suggestions">
            
            The term suggestions to return based on the specified query value.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.ValidationMessage">
            
            	Properties of a message displayed when a product validation failure occurs for a shopper in a storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ValidationMessage.Message">
            
            The contents of the message displayed to the user when the product validation failure occurs.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ValidationMessage.Severity">
            
            The severity level of the product validation failure.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ValidationMessage.Source">
            
            The entity that triggered the product validation.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ValidationMessage.SourceId">
            
            Unique identifier of the entity that triggered the validation.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Reference.AddressSchema">
            
            	The structure of postal addresses based on the country specified. Since addresses vary from country to country, this schema allows a flexible storage structure.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.AddressSchema.CountryCode">
            
            2 letter geographic code representing the country for the physical or mailing address. Currently limited to the US.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.AddressSchema.CountryLabel">
            
            The label associated with this country.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.AddressSchema.Id">
            
            The unique identifier of this postal address schema.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.AddressSchema.Fields">
            
            The fields to display for postal addresses associated with this country.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Reference.AddressSchemaCollection">
            
            	The paged collection of address schema components.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.AddressSchemaCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.AddressSchemaCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Reference.ContentLocale">
            
            	The content locale indicates the language spoken and the country where the language is spoken. Currently, only code "en-US" for name "English - United States" is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.ContentLocale.Code">
            
            Language used for the entity. Currently, only "en-US" is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.ContentLocale.Name">
            
            The name of the content locale.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Reference.ContentLocaleCollection">
            
            	The paged collection of content locale codes that the system supports.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.ContentLocaleCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.ContentLocaleCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Reference.Country">
            
            	2-letter code and corresponding country name that the system supports.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.Country.Code">
            
            2 letter geographic code representing the country for the physical or mailing address. Currently limited to the US.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.Country.Name">
            
            The name of the country.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Reference.CountryCollection">
            
            	The paged collection of country codes and their corresponding names.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.CountryCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.CountryCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Reference.Currency">
            
            	Three-letter currency code that the system supports. Derived from the ISO 4217 standard. For example, the code "EUR" for the name "Euro Member Countries" is an entry that returns in a list of items.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.Currency.Code">
            
            3-letter ISO 4217 standard global currency code. Currently, only "USD" (US Dollar) is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.Currency.Name">
            
            The name of the currency represented by the ISO currency code.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Reference.CurrencyCollection">
            
            	The paged collection of currency codes.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.CurrencyCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.CurrencyCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Reference.Field">
            
            	An property that is a wrapper for additional properties pertaining to the schema such as the type, label, any associated data, an ID, and the order of the response.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.Field.Id">
            
            Identifier of the field.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.Field.Label">
            
            Label for the field.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.Field.Order">
            
            Sequence of the field.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.Field.Type">
            
            Type of field.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.Field.Data">
            
            Data for the field property.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Reference.FieldData">
            
            	The field property that describes the type of information pertaining to how the field renders and functions.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.FieldData.Code">
            
            Code of the field.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.FieldData.Value">
            
            The field value.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Reference.TimeZone">
            
            	A world date and time standard such as "Dateline Standard Time" or "UTC-12".
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.TimeZone.Id">
            
            Identifier of the time zone.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.TimeZone.IsDaylightSavingsTime">
            
            If true, the time zone standard observes daylight savings time advancements, for example, twice a year so that evenings have more daylight and mornings have less. If false, the time zone standard does not adhere to daylight savings changes.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.TimeZone.Offset">
            
            The offset associated with the time zone, such as "-12".
            
        </member>
        <member name="T:Mozu.Api.Contracts.Reference.TimeZoneCollection">
            
            	The paged collection of time zone properties.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.TimeZoneCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.TimeZoneCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Reference.TopLevelDomainCollection">
            
            	The paged collection of all top level Internet domains that the system supports including general, USA-specific, infrastructure, and country codes. The Internet Assigned Numbers Authority (IANA) maintains this list.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.TopLevelDomainCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.TopLevelDomainCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Reference.UnitOfMeasure">
            
            	Properties to describe the unit of measure.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.UnitOfMeasure.Name">
            
            The name of the unit of measure, such as "foot".
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.UnitOfMeasure.PluralName">
            
            The plural name of the unit of measure, such as "feet".
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.UnitOfMeasure.Symbol">
            
            The abbreviated symbol for the unit of measure, such as "ft".
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.UnitOfMeasure.UnitOfMeasureType">
            
            The type of measurement, such as length or volume.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Reference.UnitOfMeasureCollection">
            
            	The paged collection of all units of measure that the system currently supports.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.UnitOfMeasureCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.UnitOfMeasureCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ShippingAdmin.CarrierConfiguration">
            
            	Properties of a carrier configured in the shipping admin.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingAdmin.CarrierConfiguration.Id">
            
            Identifier of the carrier configuration.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingAdmin.CarrierConfiguration.AuditInfo">
            
            Identifier and datetime stamp information recorded when creating or updating a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingAdmin.CarrierConfiguration.ConfiguredServiceTypes">
            
            List of shipping carrier service types configured in the shipping admin. For example, in the request body, the service types have a code, localized content, and several other parameters to add information about a service type.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingAdmin.CarrierConfiguration.Settings">
            
            Wrapper for a group of properties such as a label that includes a value and a locale code, audit information, and a key-value pair.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ShippingAdmin.CarrierConfigurationCollection">
            
            	Collection of carrier configurations from the shipping admin.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingAdmin.CarrierConfigurationCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingAdmin.CarrierConfigurationCollection.PageSize">
            
            Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingAdmin.CarrierConfigurationCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingAdmin.CarrierConfigurationCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ShippingAdmin.LocalizableString">
            
            	Properties of a localized string value used in the shipping admin.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingAdmin.LocalizableString.LocaleCode">
            
            Language used for the entity. Currently, only "en-US" is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingAdmin.LocalizableString.Value">
            
            Value of the localizable string in the language specified by the locale code.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ShippingAdmin.ServiceType">
            
            	Properties of the service type, or shipping method, for a specific shipping carrier.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingAdmin.ServiceType.Code">
            
            The service type code supplied by the carrier. Service type codes include a prefix that indicates the carrier name. For example: FEDEX_INTERNATIONAL_STANDARD.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingAdmin.ServiceType.IsActive">
            
            If true, the shipping service type is available for use. Certain service types are locale-dependent.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingAdmin.ServiceType.IsInternational">
            
            If true, the shipping service type is available for international parcel. If false, the shipping service type is only available for domestic parcel.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingAdmin.ServiceType.Sequence">
            
            The numeric value that denotes the place this entity occupies in the order of the entity list.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingAdmin.ServiceType.Content">
            
            Complex type that contains content for a language specified by LocaleCode.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ShippingAdmin.ServiceTypeLocalizedContent">
            
            	Complex type that contains content for a language specified by LocaleCode.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingAdmin.ServiceTypeLocalizedContent.LocaleCode">
            
            Language used for the entity. Currently, only "en-US" is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingAdmin.ServiceTypeLocalizedContent.Name">
            
            The localized name of this shipping service type.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ShippingAdmin.Setting">
            
            	Properties of a shipping carrier-specific setting associated with a carrier configuration.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingAdmin.Setting.Key">
            
            Carrier-specific key field.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingAdmin.Setting.Value">
            
            Carrier-specific value for the associated key.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingAdmin.Setting.AuditInfo">
            
            Identifier and datetime stamp information recorded when creating or updating a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingAdmin.Setting.Label">
            
            The label of the carrier-specific key.
            
        </member>
        <member name="T:Mozu.Api.Contracts.SiteSettings.Application.Application">
            
            	Properties of an application installed in a tenant.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Application.Application.AppId">
            
            The unique identifier of the application in Dev Center.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Application.Application.Enabled">
            
            If true, the application is enabled for the tenant. System-supplied and read only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Application.Application.Initialized">
            
            If true, the third party application settings have been configured and the application is initialized.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Application.Application.UIConfigurationUrl">
            
            URL of the application's setting configuration user interface. System-supplied and read only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Application.Application.Capabilities">
            
            List of capabilities installed in a tenant.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Application.Application.Entitlement">
            
            Properties of the capability application entitlement record, including the merchant it is licensed to and the duration of the license.
            
        </member>
        <member name="T:Mozu.Api.Contracts.SiteSettings.General.GeneralSettings">
            
            	General settings used on the storefront site.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.GeneralSettings.AllowInvalidAddresses">
            
            If true, the site allows entry of addresses not verified by an address validation service.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.GeneralSettings.FavIconMobilePath">
            
            The physical directory path or URL where the mobile favicon image file is stored. The favicon icon is generally 57x57 pixels. The icon appears on a mobile website or on the mobile device's OS Home.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.GeneralSettings.FavIconPath">
            
            The physical directory path or URL where the mobile favicon image file is stored. The favicon icon is generally 16x16 pixels. The icon appears on a a browser tab as the website's mini logo or on a browser address bar, or next to the page name in a list of bookmarks.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.GeneralSettings.GoogleAnalyticsCode">
            
            The Google Analytics code associated with a particular store. This could be the web tracking code.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.GeneralSettings.IsAddressValidationEnabled">
            
            If true, a service to verify addresses as valid is enabled for the site.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.GeneralSettings.IsGoogleAnalyticsEcommerceEnabled">
            
            If true, the Google analytics for eCommerce is enabled for this site. If false, the analytics are not enabled.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.GeneralSettings.IsGoogleAnalyticsEnabled">
            
            If true, enable Google analytics for this site. If false, analytics are not enabled.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.GeneralSettings.LogoPath">
            
            They physical directory path or URL where the website logo is stored.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.GeneralSettings.LogoText">
            
            The tagline or text that appears when hovering over the site logo.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.GeneralSettings.MobileTheme">
            
            The mobile theme is the storefront name for the theme.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.GeneralSettings.ReplyToEmailAddress">
            
            Email address to display on email messages sent from the site.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.GeneralSettings.SenderEmailAddress">
            
            Email address to set up so that shoppers and users browsing the site can use to contact the merchant.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.GeneralSettings.SiteTimeFormat">
            
            Choose a format to use on the site: 12-hour (hh:mm:ss tt) or 24-hour format (HH:mm:ss).
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.GeneralSettings.SiteTimeZone">
            
            Choose the time zone to use for the site.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.GeneralSettings.Theme">
            
            The name of the theme used on the storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.GeneralSettings.WebsiteName">
            
            The name of the website to display on the storefront with no spaces.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.GeneralSettings.AuditInfo">
            
            Identifier and datetime stamp information recorded when creating or updating a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.GeneralSettings.TaxableTerritories">
            
            The territories configured for the site that are subject to sales tax.
            
        </member>
        <member name="T:Mozu.Api.Contracts.SiteSettings.General.IPBlock">
            
            	Use the IP Blocks subresource to manage site blocking settings for an individual IP address or for a range of IP addresses that are potentially malicious.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.IPBlock.AdminBlock">
            
            If true, the IP block prevents access to the site's admin area. Default: False.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.IPBlock.Id">
            
            Identifier of the IP block.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.IPBlock.RangeEnd">
            
            In a range of IP addresses to block, this string is the last IP address in the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.IPBlock.RangeStart">
            
            In a range of IP addresses to block, this string is the first IP address to block. If no RangeEnd is specified, the system will block the only IP address provided.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.IPBlock.StoreFrontBlock">
            
            If true, the IP block prevents access to the site's storefront. Default: False.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.IPBlock.AuditInfo">
            
            Identifier and datetime stamp information recorded when creating or updating a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.SiteSettings.General.IPBlockCollection">
            
            	Collection of configured IPBlocks.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.IPBlockCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.IPBlockCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.SiteSettings.General.TaxableTerritory">
            
            	Properties of the territory which is subject to sales tax.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.TaxableTerritory.CountryCode">
            
            2 letter geographic code representing the country for the physical or mailing address. Currently limited to the US.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.TaxableTerritory.IsShippingTaxable">
            
            If true, all shipping charges for this territory are subject to sales tax.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.TaxableTerritory.StateOrProvinceCode">
            
            The two-letter geographic code representing the state for the physical or mailing address. This is currently limited to the US.
            
        </member>
        <member name="T:Mozu.Api.Contracts.SiteSettings.Order.CheckoutSettings">
            
            	Settings used when checking out an active order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Order.CheckoutSettings.CustomerCheckoutSettings">
            
            Settings for the checkout login. Choose whether or not shoppers must first login before a purchase can be processed. Choose the option for guests to purchase without logging in, prompt guests to login, or require them to login before a purchase can be completed.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Order.CheckoutSettings.OrderProcessingSettings">
            
            Credit card payment authorization setting defined for the site. Choose whether or not the shopper's credit card is authorized and charged. Possibilities include, "authorize and charge the shopper's credit card for the full order amount when the order is placed," "authorize the shopper's credit card for the full amount when the order is placed and charge the credit card when the order is shipped," or "authorize and charge the shopper's credit card for the full amount when the order is shipped." Check on these phrases. According to Eric Swann, they may have changed]
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Order.CheckoutSettings.PaymentSettings">
            
            Payment gateway settings defined for the site. A payment gateway is an eCommerce application service provider that authorizes payments for eBusinesses, online retailers, and other stores that have an online commerce component. Currently, only the Authorize.net gateway is supported.
            
        </member>
        <member name="T:Mozu.Api.Contracts.SiteSettings.Order.CustomerCheckoutSettings">
            
            	The properties of the customer checkout settings such as whether shoppers must be logged in.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Order.CustomerCheckoutSettings.CustomerCheckoutType">
            
            The type of customer checking out in the order such as a guest who has not logged in or a customer who has logged in. Valid strings are either "LoginOptional," where shoppers are prompted to sign in but are not required to do so, or "LoginRequired," where shopppers must login before purchasing.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Order.CustomerCheckoutSettings.AuditInfo">
            
            Identifier and datetime stamp information recorded when creating or updating a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.SiteSettings.Order.Gateway">
            
            	Properties of a payment gateway defined for the site.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Order.Gateway.AreGatewayCredentialFieldsSet">
            
            If true, the credential fields for the gateway are configured with valid values. For security purposes, Mozu does not return the credential fields for the gateway subresource.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Order.Gateway.SupportedCards">
            
            The types of credit cards the merchant supports using this payment gateway.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Order.Gateway.GatewayAccount">
            
            Account information associated with the specified payment gateway.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Order.Gateway.GatewayDefinition">
            
            Properties of the payment gateway definition.
            
        </member>
        <member name="T:Mozu.Api.Contracts.SiteSettings.Order.OrderProcessingSettings">
            
            	Settings that determine how orders are processed and order payments are authorized for the site.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Order.OrderProcessingSettings.PaymentProcessingFlowType">
            
            Determines whether payment authorization occurs when the order is placed or when the order is shipped.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Order.OrderProcessingSettings.UseOverridePriceToCalculateDiscounts">
            
            If true, use the override price defined for products in the order to calculate discounts for the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Order.OrderProcessingSettings.AuditInfo">
            
            Identifier and datetime stamp information recorded when creating or updating a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.SiteSettings.Order.PaymentSettings">
            
            	Properties of the payment settings used at order checkout time for the site.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Order.PaymentSettings.PayByMail">
            
            Settings that provide for the ability to pay for an order by mail.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Order.PaymentSettings.AuditInfo">
            
            Identifier and datetime stamp information recorded when creating or updating a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Order.PaymentSettings.Gateways">
            
            List of name and account information for a payment gateway. Additional payment gateway providers will be supported in future releases.
            
        </member>
        <member name="T:Mozu.Api.Contracts.SiteSettings.Shipping.SiteShippingHandlingFee">
            
            	Properties of the handling fee to apply to order shipments for the site.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Shipping.SiteShippingHandlingFee.Amount">
            
            The amount of the order handling fee.
            
        </member>
        <member name="T:Mozu.Api.Contracts.SiteSettings.Shipping.SiteShippingRegion">
            
            	Properties of the site shipping region.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Shipping.SiteShippingRegion.ISOCountryCode">
            
            2 letter geographic code representing the country for the physical or mailing address. Currently limited to the US.
            
        </member>
        <member name="T:Mozu.Api.Contracts.SiteSettings.Shipping.SiteShippingSettings">
            
            	Properties of the shipping settings configured for an individual site.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Shipping.SiteShippingSettings.ActiveRateProviders">
            
            Collection of entities that provide estimated shipping rate calculations for a site.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Shipping.SiteShippingSettings.AuditInfo">
            
            Identifier and datetime stamp information recorded when creating or updating a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Shipping.SiteShippingSettings.OrderHandlingFee">
            
            The combined price for all items in the order, including all selected options but excluding any discounts.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Shipping.SiteShippingSettings.SignatureRequirement">
            
            Properties of the package signature requirements for the site.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Shipping.SiteShippingSettings.SiteShippingOriginAddress">
            
            The physical address from which packages will originate for shipping.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Shipping.SiteShippingSettings.SiteShippingRegions">
            
            The regions to which products for the site will ship. International shipping will be supported in a future release.
            
        </member>
        <member name="T:Mozu.Api.Contracts.SiteSettings.Shipping.SiteShippingSignatureRequirement">
            
            	Properties of the shipment signature requirements for the specified site.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Shipping.SiteShippingSignatureRequirement.IsSignatureRequired">
            
            If true, this site requires signatures on shipments for orders that exceed the minimum value threshold.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Shipping.SiteShippingSignatureRequirement.MinimumValueThreshold">
            
            The minimum order amount that requires a signature on shipments. For example, if you want to require customer signatures on all orders over $5,000, the MinimumValueThreshold would be 5001.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Tenant.Domain">
            
            	Properties of the domain that the tenant is associated with such as the domain name, the zone string, audit information (system-supplied and read-only), assignment data, and whether or not the domain is primary or requires a SSL for authentication.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.Domain.CreateDate">
            
            Date and time when the entity was created, represented in UTC Date/Time.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.Domain.DomainName">
            
            The domain name of the tenant.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.Domain.IPAddress">
            
            The IP address of the tenant domain.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.Domain.IsPrimary">
            
            If true, this marker indicates that the entity is the primary entity in a set.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.Domain.IsSystemAssigned">
            
            If true, the entity is assigned by the system.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.Domain.RequiresSSL">
            
            If true, this domain requires a secure transport security layer (secure socket layer (SSL)) to encrypt the information contained on the site. The SSL is usually used for authentication.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.Domain.UpdateDate">
            
            Date and time when the entity was last updated, represented in UTC Date/Time.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.Domain.Zone">
            
            The zone string for the tenant domain.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Tenant.Entitlement">
            
            	***Always private and should not be published.***
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.Entitlement.ApplicationVersionId">
            
            ***Always private and should not be published.***
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.Entitlement.CreateDate">
            
            Date and time when the entity was created, represented in UTC Date/Time.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.Entitlement.Id">
            
            Identifier of the entity.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.Entitlement.PublishedDate">
            
            When the document was published. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.Entitlement.TenantId">
            
            Unique identifier of the Mozu tenant.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.Entitlement.UpdateDate">
            
            Date and time when the entity was last updated, represented in UTC Date/Time.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Tenant.Site">
            
            	The properties of a site including the country code, currency code, locale code, domains, name, public IP address, audit information, and tenant and site group IDs.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.Site.CountryCode">
            
            2 letter geographic code representing the country for the physical or mailing address. Currently limited to the US.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.Site.CreateDate">
            
            Date and time when the entity was created, represented in UTC Date/Time.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.Site.CurrencyCode">
            
            3-letter ISO 4217 standard global currency code. Currently, only "USD" (US Dollar) is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.Site.Id">
            
            Identifier of the site.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.Site.LocaleCode">
            
            Language used for the entity. Currently, only "en-US" is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.Site.Name">
            
            The name of the site, if applicable.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.Site.ProvisioningStatus">
            
            Current state of store provisioning for the site.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.Site.TenantId">
            
            Unique identifier of the Mozu tenant.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.Site.UpdateDate">
            
            Date and time when the entity was last updated, represented in UTC Date/Time.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.Site.Domains">
            
            A list of domains associated with the site.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Tenant.SiteGroup">
            
            	The properties that describe a site group including the create and update dates, default currency and locale codes, name, the tenant ID who owns the site group, and the site group name.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.SiteGroup.CreateDate">
            
            Date and time when the entity was created, represented in UTC Date/Time.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.SiteGroup.DefaultCurrencyCode">
            
            The currency code associated with the default currency for this site group.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.SiteGroup.DefaultLocaleCode">
            
            Language used for the entity. Currently, only "en-US" is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.SiteGroup.Id">
            
            Identifier of the site group.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.SiteGroup.Name">
            
            The name of the site group, if applicable.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.SiteGroup.TenantId">
            
            Unique identifier of the Mozu tenant.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.SiteGroup.UpdateDate">
            
            Date and time when the entity was last updated, represented in UTC Date/Time.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.SiteGroup.Sites">
            
            Collection of sites that belong to this site group and their properties.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Tenant.Tenant">
            
            	A Mozu tenant is a scope that can create roles and assign behaviors to a role.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.Tenant.CreateDate">
            
            Date and time when the entity was created, represented in UTC Date/Time.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.Tenant.CustomerId">
            
            Alphanumeric identifier of the customer.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.Tenant.DevAccountId">
            
            Numeric identifier of the developer account.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.Tenant.Id">
            
            Identifier of the Mozu tenant.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.Tenant.IsDevTenant">
            
            If true, the tenant is a development store.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.Tenant.Name">
            
            The name of the tenant, if applicable.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.Tenant.ScaleUnitId">
            
            Identifier of the ZuKeeper scale unit this tenant belongs to.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.Tenant.Status">
            
            Current status of this tenant.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.Tenant.UpdateDate">
            
            Date and time when the entity was last updated, represented in UTC Date/Time.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.Tenant.Domain">
            
            The domain information associated with the tenant.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.Tenant.SiteGroups">
            
            List of site groups associated with this tenant, if applicable.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Tenant.TenantCollection">
            
            	A paged collection containing a grouping of tenant details.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.TenantCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.TenantCollection.PageSize">
            
            Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.TenantCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.TenantCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.User.ResetPasswordInfo">
            
            	Information required to reset the user's password, which consists of an email address.
            
        </member>
        <member name="P:Mozu.Api.Contracts.User.ResetPasswordInfo.EmailAddress">
            
            The email address of the specified user or the email address associated with the specified entity.
            
        </member>
        <member name="T:Mozu.Api.Contracts.User.UserLoginResult">
            
            	The user login result contains an authentication token and the list of tenants which is the collection of all the sites that below to that tenant.
            
        </member>
        <member name="P:Mozu.Api.Contracts.User.UserLoginResult.AuthTicket">
            
            The authentication ticket associated with a user session.
            
        </member>
        <member name="T:Mozu.Api.MozuClient`1">
            <summary>
            
            </summary>
            <typeparam name="TResult"></typeparam>
        </member>
        <member name="T:Mozu.Api.MozuClient`2">
            <summary>
            
            </summary>
        </member>
        <member name="T:Mozu.Api.MozuClient">
            <summary>
            
            </summary>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.CartResource">
            <summary>
            Use the Carts resource to manage storefront shopping carts as items are added and removed. Each time a shopper's cart is modified, the Carts resource updates estimated prices, discounts, tax, and shipping.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.CartResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.CartResource.GetCart(System.String)">
            <summary>
            Retrieve a cart specified by its cart ID.
            </summary>
            <param name="cartId">Identifier of the cart being retrieved.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart"/>
            </returns>
            <example>
            <code>
              var cart = new Cart();
              var cart = cart.GetCart( cartId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.CartResource.GetOrCreateCart">
            <summary>
            Retrieves a cart's contents for the current shopper. If the shopper does not have an active cart on the site, the service creates one.
            </summary>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart"/>
            </returns>
            <example>
            <code>
              var cart = new Cart();
              var cart = cart.GetOrCreateCart();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.CartResource.GetCartSummary">
            <summary>
            Retrieves the number of items in the active cart and the status of the cart such as whether or not it has expired. Only an anonymous user's cart (guest that does not log in) that is emptied and idle will expire after 14 days. Note that the expiration counter is renewed each time action is made to the cart. For shoppers or users that are logged in, the cart does not expire.
            </summary>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.CartSummary"/>
            </returns>
            <example>
            <code>
              var cart = new Cart();
              var cartSummary = cart.GetCartSummary();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.CartResource.GetUserCart(System.String)">
            <summary>
            Retrieve a user's cart by specifying the user ID.
            </summary>
            <param name="userId">Unique identifier of the user whose cart you want to retrieve.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart"/>
            </returns>
            <example>
            <code>
              var cart = new Cart();
              var cart = cart.GetUserCart( userId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.CartResource.GetUserCartSummary(System.String)">
            <summary>
            Retrieves the current status of the specified user's cart, including the number of items in the active cart.
            </summary>
            <param name="userId">Unique identifier of the user whose cart details you want to retrieve.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.CartSummary"/>
            </returns>
            <example>
            <code>
              var cart = new Cart();
              var cartSummary = cart.GetUserCartSummary( userId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.CartResource.UpdateCart(Mozu.Api.Contracts.CommerceRuntime.Carts.Cart)">
            <summary>
            Update the current shopper's cart.
            </summary>
            <param name="cart">All of the properties of the cart to update. The product code is required.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart"/>
            </returns>
            <example>
            <code>
              var cart = new Cart();
              var cart = cart.UpdateCart( cart);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.CartResource.DeleteCart(System.String)">
            <summary>
            Delete the cart specified by its cart ID.
            </summary>
            <param name="cartId">Identifier of the cart being deleted.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var cart = new Cart();
              cart.DeleteCart( cartId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.CartResource.DeleteCurrentCart">
            <summary>
            Deletes the cart of the currently active shopper.
            </summary>
            <returns>
            
            </returns>
            <example>
            <code>
              var cart = new Cart();
              cart.DeleteCurrentCart();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Carts.CartItemResource">
            <summary>
            Use the cart items subresource to manage a collection of items in an active shopping cart.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Carts.CartItemResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Carts.CartItemResource.GetCartItems">
            <summary>
            Retrieves a list of cart items including the total number of items in the cart.
            </summary>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItemCollection"/>
            </returns>
            <example>
            <code>
              var cartitem = new CartItem();
              var cartItemCollection = cartitem.GetCartItems();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Carts.CartItemResource.GetCartItem(System.String)">
            <summary>
            Retrieves a particular cart item by providing the cart item ID.
            </summary>
            <param name="cartItemId">Identifier of the cart item to retrieve.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem"/>
            </returns>
            <example>
            <code>
              var cartitem = new CartItem();
              var cartItem = cartitem.GetCartItem( cartItemId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Carts.CartItemResource.AddItemToCart(Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem)">
            <summary>
            Adds an item such as product to the current shopper's cart.
            </summary>
            <param name="cartItem">All properties of the new cart item. The product code is required.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem"/>
            </returns>
            <example>
            <code>
              var cartitem = new CartItem();
              var cartItem = cartitem.AddItemToCart( cartItem);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Carts.CartItemResource.UpdateCartItem(System.String,Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem)">
            <summary>
            Update properties of a specific cart item.
            </summary>
            <param name="cartItemId">Identifier of the cart item to update.</param>
            <param name="cartItem">The properties of the cart item to update.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem"/>
            </returns>
            <example>
            <code>
              var cartitem = new CartItem();
              var cartItem = cartitem.UpdateCartItem( cartItemId,  cartItem);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Carts.CartItemResource.UpdateCartItemQuantity(System.String,System.Int32)">
            <summary>
            Update the quantity of an individual cart item in the cart of a current shopper.
            </summary>
            <param name="cartItemId">Identifier of the cart item to update quantity.</param>
            <param name="quantity">The number of cart items in the shopper's active cart.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem"/>
            </returns>
            <example>
            <code>
              var cartitem = new CartItem();
              var cartItem = cartitem.UpdateCartItemQuantity( cartItemId,  quantity);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Carts.CartItemResource.RemoveAllCartItems">
            <summary>
            Removes all cart items in the shopper's active cart.
            </summary>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart"/>
            </returns>
            <example>
            <code>
              var cartitem = new CartItem();
              var cart = cartitem.RemoveAllCartItems();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Carts.CartItemResource.DeleteCartItem(System.String)">
            <summary>
            Delete a specific cart item by providing the cart item ID.
            </summary>
            <param name="cartItemId">Identifier of the cart item to delete.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var cartitem = new CartItem();
              cartitem.DeleteCartItem( cartItemId);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Carts.ChangeMessageResource">
            <summary>
            System messages for live carts to notify the shopper about a product price or inventory change. System-supplied and read-only. For example: Product price is reduced due to a buy one, get one 50% off (BOGO) sale. A message may appear if the product is out of stock during the cart shopping process.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Carts.ChangeMessageResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Carts.ChangeMessageResource.GetMessages">
            <summary>
            Retrieves messages to and from the current shopper. These are messages supplied by the system to notify the shopper of price increases or decreases or product unavailability.
            </summary>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.CartChangeMessageCollection"/>
            </returns>
            <example>
            <code>
              var changemessage = new ChangeMessage();
              var cartChangeMessageCollection = changemessage.GetMessages();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Carts.ChangeMessageResource.RemoveAllMessages">
            <summary>
            Deletes all messages associated with the cart of the current shopper.
            </summary>
            <returns>
            
            </returns>
            <example>
            <code>
              var changemessage = new ChangeMessage();
              changemessage.RemoveAllMessages();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Carts.ChangeMessageResource.RemoveMessage(System.String)">
            <summary>
            Removes a single message associated with the cart of the current shopper.
            </summary>
            <param name="messageId">Identifier of the message to remove from the cart.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var changemessage = new ChangeMessage();
              changemessage.RemoveMessage( messageId);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.AttributeResource">
            <summary>
            Use the Attribute Definition resource to manage the properties, options, and extras that uniquely describe products of a specific type. Attributes can be associated with a product type, assigned values by a merchant or shopper, and added as faceted search filters for a product category.Options are product attributes that describe unique configurations made by the shopper, such as size or color, and generate a new product variation (or unique SKU).Properties are product attributes that describe aspects of the product that do not represent an option configurable by the shopper, such as screen resolution or brand.Extras are product attributes that describe add-on configurations made by the shopper that do not represent a product variation, such as a monogram.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.AttributeResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.AttributeResource.GetAttributes">
            <summary>
            Retrieves a paged list of attributes according to any specified filter criteria and sort options.
            </summary>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeCollection"/>
            </returns>
            <example>
            <code>
              var attribute = new Attribute();
              var attributeCollection = attribute.GetAttributes();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.AttributeResource.GetAttributes(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Retrieves a paged list of attributes according to any specified filter criteria and sort options.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeCollection"/>
            </returns>
            <example>
            <code>
              var attribute = new Attribute();
              var attributeCollection = attribute.GetAttributes( filter,  pageSize,  sortBy,  startIndex);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.AttributeResource.GetAttribute(System.String)">
            <summary>
            Retrieves the details of the specified product attribute.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.Attribute"/>
            </returns>
            <example>
            <code>
              var attribute = new Attribute();
              var attribute = attribute.GetAttribute( attributeFQN);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.AttributeResource.AddAttribute(Mozu.Api.Contracts.ProductAdmin.Attribute)">
            <summary>
            Creates a new attribute to describe one aspect of a product such as color or size, based on its defined product type. The attribute name, attribute type, input type, and data type are required.
            </summary>
            <param name="attribute">Properties of the new product attribute to create.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.Attribute"/>
            </returns>
            <example>
            <code>
              var attribute = new Attribute();
              var attribute = attribute.AddAttribute( attribute);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.AttributeResource.UpdateAttribute(System.String,Mozu.Api.Contracts.ProductAdmin.Attribute)">
            <summary>
            Updates an existing attribute with attribute properties to set.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="attribute">Any properties of the attribute that to update.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.Attribute"/>
            </returns>
            <example>
            <code>
              var attribute = new Attribute();
              var attribute = attribute.UpdateAttribute( attributeFQN,  attribute);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.AttributeResource.DeleteAttribute(System.String)">
            <summary>
            Deletes a defined product attribute. You cannot delete an attribute assigned a value for a product.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var attribute = new Attribute();
              attribute.DeleteAttribute( attributeFQN);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeTypeRuleResource">
            <summary>
            Type rules are subresources of product attributes which could be specifications that can be shared across products in a store or assigned to specific products. Attribute type rules provide definitions of how attribute types will appear on the user interface.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeTypeRuleResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeTypeRuleResource.GetAttributeTypeRules">
            <summary>
            Retrieves a list of attribute type rules according to optional filter criteria and sort options. Attribute type rules help drive the behavior of attributes on a storefront page.
            </summary>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeTypeRuleCollection"/>
            </returns>
            <example>
            <code>
              var attributetyperule = new AttributeTypeRule();
              var attributeTypeRuleCollection = attributetyperule.GetAttributeTypeRules();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeTypeRuleResource.GetAttributeTypeRules(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Retrieves a list of attribute type rules according to optional filter criteria and sort options. Attribute type rules help drive the behavior of attributes on a storefront page.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeTypeRuleCollection"/>
            </returns>
            <example>
            <code>
              var attributetyperule = new AttributeTypeRule();
              var attributeTypeRuleCollection = attributetyperule.GetAttributeTypeRules( filter,  pageSize,  sortBy,  startIndex);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueResource">
            <summary>
            Vocabulary values are predefined for an attribute.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueResource.GetAttributeVocabularyValues(System.String)">
            <summary>
            Retrieves a list of attribute vocabulary values. To target a query, use one or several valid optional response groups.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValue"/>}
            </returns>
            <example>
            <code>
              var attributevocabularyvalue = new AttributeVocabularyValue();
              var attributeVocabularyValue = attributevocabularyvalue.GetAttributeVocabularyValues( attributeFQN);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueResource.GetAttributeVocabularyValue(System.String,System.String)">
            <summary>
            Retrieves an attribute vocabulary value by providing the attribute FQN and value.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="value">The actual unique value of the attribute vocabulary to retrieve. A single attribute must have a unique value and match the attribute's data type. If a string value returns null, the system will generate a value. The actual string content displayed shoud be stored as "Content" and actual content is required for string values.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValue"/>
            </returns>
            <example>
            <code>
              var attributevocabularyvalue = new AttributeVocabularyValue();
              var attributeVocabularyValue = attributevocabularyvalue.GetAttributeVocabularyValue( attributeFQN,  value);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueResource.AddAttributeVocabularyValue(System.String,Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValue)">
            <summary>
            Adds a new attribute vocabulary value.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="attributeVocabularyValue">The predefined vocabulary value to add to the attribute content.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValue"/>
            </returns>
            <example>
            <code>
              var attributevocabularyvalue = new AttributeVocabularyValue();
              var attributeVocabularyValue = attributevocabularyvalue.AddAttributeVocabularyValue( attributeFQN,  attributeVocabularyValue);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueResource.UpdateAttributeVocabularyValues(System.String,System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValue})">
            <summary>
            Update existing vocabulary values for an attribute.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="vocabularyValues">The actual vocabulary values for the attribute being updated.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValue"/>}
            </returns>
            <example>
            <code>
              var attributevocabularyvalue = new AttributeVocabularyValue();
              var attributeVocabularyValue = attributevocabularyvalue.UpdateAttributeVocabularyValues( attributeFQN,  vocabularyValues);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueResource.UpdateAttributeVocabularyValue(System.String,System.String,Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValue)">
            <summary>
            Updates existing attribute vocabulary values.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="value">The actual unique value of the attribute vocabulary value to update. A single attribute must have a unique value and match the attribute's data type. If a string value returns null, the system will generate a value. The actual string content displayed shoud be stored as "Content" and actual content is required for string values.</param>
            <param name="attributeVocabularyValue">The predefined vocabulary value to add to the attribute content to update.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValue"/>
            </returns>
            <example>
            <code>
              var attributevocabularyvalue = new AttributeVocabularyValue();
              var attributeVocabularyValue = attributevocabularyvalue.UpdateAttributeVocabularyValue( attributeFQN,  value,  attributeVocabularyValue);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueResource.DeleteAttributeVocabularyValue(System.String,System.String)">
            <summary>
            Deletes an attribute's vocabulary value.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="value">The actual unique value of the attribute vocabulary to delete. A single attribute must have a unique value and match the attribute's data type. If a string value returns null, the system will generate a value. The actual string content displayed shoud be stored as "Content" and actual content is required for string values.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var attributevocabularyvalue = new AttributeVocabularyValue();
              attributevocabularyvalue.DeleteAttributeVocabularyValue( attributeFQN,  value);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.ProductTypeResource">
            <summary>
            Use the Product Types resource to manage the types for your product catalog. Product types act as configuration templates, which store a set of attributes common to all products associated with that type. Unlike categories, products can only be associated with a single product type.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.ProductTypeResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.ProductTypeResource.GetProductTypes">
            <summary>
            Retrieves a list of product types according to any specified filter criteria and sort options.
            </summary>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductTypeCollection"/>
            </returns>
            <example>
            <code>
              var producttype = new ProductType();
              var productTypeCollection = producttype.GetProductTypes();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.ProductTypeResource.GetProductTypes(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Retrieves a list of product types according to any specified filter criteria and sort options.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. You can filter product type search results by any of its properties. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=Name+cont+shoes"</param>
            <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductTypeCollection"/>
            </returns>
            <example>
            <code>
              var producttype = new ProductType();
              var productTypeCollection = producttype.GetProductTypes( filter,  pageSize,  sortBy,  startIndex);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.ProductTypeResource.GetProductType(System.Int32)">
            <summary>
            Retrieves the details of the product type specified in the request.
            </summary>
            <param name="productTypeId">Identifier of the product type to retrieve.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductType"/>
            </returns>
            <example>
            <code>
              var producttype = new ProductType();
              var productType = producttype.GetProductType( productTypeId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.ProductTypeResource.AddProductType(Mozu.Api.Contracts.ProductAdmin.ProductType)">
            <summary>
            Creates a new product type based on the information supplied in the request.
            </summary>
            <param name="productType">Properties of the product type to create.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductType"/>
            </returns>
            <example>
            <code>
              var producttype = new ProductType();
              var productType = producttype.AddProductType( productType);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.ProductTypeResource.UpdateProductType(System.Int32,Mozu.Api.Contracts.ProductAdmin.ProductType)">
            <summary>
            Updates one or more properties of a product type.
            </summary>
            <param name="productTypeId">Identifier of the product type to update.</param>
            <param name="productType">The details of the product type to update.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductType"/>
            </returns>
            <example>
            <code>
              var producttype = new ProductType();
              var productType = producttype.UpdateProductType( productTypeId,  productType);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.ProductTypeResource.DeleteProductType(System.Int32)">
            <summary>
            Deletes the product type by providing the product type ID.
            </summary>
            <param name="productTypeId">Identifier of the product type to delete.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var producttype = new ProductType();
              producttype.DeleteProductType( productTypeId);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeExtraResource">
            <summary>
            Use the Extras subresource to define how a product attribute classified as an "extra" is used for a specific product type. Product attribute defintions are unique for each associated product type.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeExtraResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeExtraResource.GetExtras(System.Int32)">
            <summary>
            Retrieves a list of extra attributes defined for the specified product type.
            </summary>
            <param name="productTypeId">Identifier of the product type.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType"/>}
            </returns>
            <example>
            <code>
              var producttypeextra = new ProductTypeExtra();
              var attributeInProductType = producttypeextra.GetExtras( productTypeId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeExtraResource.GetExtra(System.String,System.Int32)">
            <summary>
            Retrieves the details of an extra attribute definition for the specified product type.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productTypeId">Identifier of the product type whose extra is being retrieved.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType"/>
            </returns>
            <example>
            <code>
              var producttypeextra = new ProductTypeExtra();
              var attributeInProductType = producttypeextra.GetExtra( attributeFQN,  productTypeId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeExtraResource.AddExtra(System.Int32,Mozu.Api.Contracts.ProductAdmin.AttributeInProductType)">
            <summary>
            Assigns a defined extra attribute to the product type based on the information supplied in the request.
            </summary>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="attributeInProductType">The properties of the extra attribute definition for this product type assignment.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType"/>
            </returns>
            <example>
            <code>
              var producttypeextra = new ProductTypeExtra();
              var attributeInProductType = producttypeextra.AddExtra( productTypeId,  attributeInProductType);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeExtraResource.UpdateExtra(System.String,System.Int32,Mozu.Api.Contracts.ProductAdmin.AttributeInProductType)">
            <summary>
            Update the definition of an extra attribute for the specified product type.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="attributeInProductType">The properties of the extra attribute definition to update for the product type.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType"/>
            </returns>
            <example>
            <code>
              var producttypeextra = new ProductTypeExtra();
              var attributeInProductType = producttypeextra.UpdateExtra( attributeFQN,  productTypeId,  attributeInProductType);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeExtraResource.DeleteExtra(System.String,System.Int32)">
            <summary>
            Removes an extra attribute definition from the specified product type.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productTypeId">Identifier of the product type.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var producttypeextra = new ProductTypeExtra();
              producttypeextra.DeleteExtra( attributeFQN,  productTypeId);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeOptionResource">
            <summary>
            Use the Options subresource to define how an option attribute is used for a specific product type. Product attribute definitions are unique for each associated product type.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeOptionResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeOptionResource.GetOptions(System.Int32)">
            <summary>
            Retrieves a list of option product attributes defined for the specified product type.
            </summary>
            <param name="productTypeId">Identifier of the product type to retrieve.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType"/>}
            </returns>
            <example>
            <code>
              var producttypeoption = new ProductTypeOption();
              var attributeInProductType = producttypeoption.GetOptions( productTypeId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeOptionResource.GetOption(System.String,System.Int32)">
            <summary>
            Retrieves the details of an option attribute defined for the specified product type.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productTypeId">The identifier of the product type.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType"/>
            </returns>
            <example>
            <code>
              var producttypeoption = new ProductTypeOption();
              var attributeInProductType = producttypeoption.GetOption( attributeFQN,  productTypeId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeOptionResource.AddOption(System.Int32,Mozu.Api.Contracts.ProductAdmin.AttributeInProductType)">
            <summary>
            Assigns an option attribute to the product type based on the information supplied in the request.
            </summary>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="attributeInProductType">Properties of the option attribute to define for the specified product type.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType"/>
            </returns>
            <example>
            <code>
              var producttypeoption = new ProductTypeOption();
              var attributeInProductType = producttypeoption.AddOption( productTypeId,  attributeInProductType);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeOptionResource.UpdateOption(System.String,System.Int32,Mozu.Api.Contracts.ProductAdmin.AttributeInProductType)">
            <summary>
            Updates an option attribute definition for the specified product type.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="attributeInProductType">Properties of the option product attribute to define for the specified product type.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType"/>
            </returns>
            <example>
            <code>
              var producttypeoption = new ProductTypeOption();
              var attributeInProductType = producttypeoption.UpdateOption( attributeFQN,  productTypeId,  attributeInProductType);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeOptionResource.DeleteOption(System.String,System.Int32)">
            <summary>
            Removes an option attribute definition for the specified product type.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productTypeId">Identifier of the product type.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var producttypeoption = new ProductTypeOption();
              producttypeoption.DeleteOption( attributeFQN,  productTypeId);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypePropertyResource">
            <summary>
            Use the Properties subresource to define how property product attributes are used for a specific product type. Product attribute definitions are unique for each associated product type.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypePropertyResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypePropertyResource.GetProperties(System.Int32)">
            <summary>
            Retrieves a list of product property attributes defined for a product type.
            </summary>
            <param name="productTypeId">Identifier of the product type.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType"/>}
            </returns>
            <example>
            <code>
              var producttypeproperty = new ProductTypeProperty();
              var attributeInProductType = producttypeproperty.GetProperties( productTypeId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypePropertyResource.GetProperty(System.String,System.Int32)">
            <summary>
            Retrieves a product property attribute definition for the specified product type.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productTypeId">Identifier of the product type.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType"/>
            </returns>
            <example>
            <code>
              var producttypeproperty = new ProductTypeProperty();
              var attributeInProductType = producttypeproperty.GetProperty( attributeFQN,  productTypeId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypePropertyResource.AddProperty(System.Int32,Mozu.Api.Contracts.ProductAdmin.AttributeInProductType)">
            <summary>
            Assigns a property attribute to the specified product type, according to the information defined in the request.
            </summary>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="attributeInProductType">Properties of the property attribute to define for the specified product type.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType"/>
            </returns>
            <example>
            <code>
              var producttypeproperty = new ProductTypeProperty();
              var attributeInProductType = producttypeproperty.AddProperty( productTypeId,  attributeInProductType);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypePropertyResource.UpdateProperty(System.String,System.Int32,Mozu.Api.Contracts.ProductAdmin.AttributeInProductType)">
            <summary>
            Updates the definition of a property attribute for the specified product type.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="attributeInProductType">Properties of the property attribute to define for the product type.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType"/>
            </returns>
            <example>
            <code>
              var producttypeproperty = new ProductTypeProperty();
              var attributeInProductType = producttypeproperty.UpdateProperty( attributeFQN,  productTypeId,  attributeInProductType);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypePropertyResource.DeleteProperty(System.String,System.Int32)">
            <summary>
            Removes a property attribute previously defined for the specified product type.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productTypeId">Identifier of the product type.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var producttypeproperty = new ProductTypeProperty();
              producttypeproperty.DeleteProperty( attributeFQN,  productTypeId);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeVariationResource">
            <summary>
            Use the variations resource to preview possible product variations for a specific product type based on the option attributes defined for the product type, such as size or color.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeVariationResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeVariationResource.GenerateProductVariations(System.Int32,System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.ProductOption})">
            <summary>
            Generates the variations possible for a product associated with the product type based on the option values supplied in the request.
            </summary>
            <param name="productTypeId">Unique identifier of the product type.</param>
            <param name="productOptionsIn">The product option attributes configured for this product type.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductVariationPagedCollection"/>
            </returns>
            <example>
            <code>
              var producttypevariation = new ProductTypeVariation();
              var productVariationPagedCollection = producttypevariation.GenerateProductVariations( productTypeId,  productOptionsIn);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeVariationResource.GenerateProductVariations(System.String,System.Nullable{System.Int32},System.String,System.Int32,System.String,System.Nullable{System.Int32},System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.ProductOption})">
            <summary>
            Generates the variations possible for a product associated with the product type based on the option values supplied in the request.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="productCode"></param>
            <param name="productTypeId">Unique identifier of the product type.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">Indicates the zero-based offset in the complete result set where the returned entities begin, when creating paged results from a query. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <param name="productOptionsIn">The product option attributes configured for this product type.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductVariationPagedCollection"/>
            </returns>
            <example>
            <code>
              var producttypevariation = new ProductTypeVariation();
              var productVariationPagedCollection = producttypevariation.GenerateProductVariations( filter,  pageSize,  productCode,  productTypeId,  sortBy,  startIndex,  productOptionsIn);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Catalog.Admin.CategoryResource">
            <summary>
            Use the Categories resource to organize products and control where they appear on the storefront. Create and maintain a hierarchy of categories and subcategories where the site will store properties.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Catalog.Admin.CategoryResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.CategoryResource.GetCategories">
            <summary>
            Retrieves a list of categories according to any specified filter criteria and sort options.
            </summary>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.CategoryPagedCollection"/>
            </returns>
            <example>
            <code>
              var category = new Category();
              var categoryPagedCollection = category.GetCategories();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.CategoryResource.GetCategories(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Retrieves a list of categories according to any specified filter criteria and sort options.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. You can filter product category search results by any of its properties, including its position in the category hierarchy. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.CategoryPagedCollection"/>
            </returns>
            <example>
            <code>
              var category = new Category();
              var categoryPagedCollection = category.GetCategories( filter,  pageSize,  sortBy,  startIndex);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.CategoryResource.GetCategory(System.Int32)">
            <summary>
            Retrieves the details of a single category.
            </summary>
            <param name="categoryId">Unique identifier of the category to retrieve.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.Category"/>
            </returns>
            <example>
            <code>
              var category = new Category();
              var category = category.GetCategory( categoryId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.CategoryResource.GetChildCategories(System.Int32)">
            <summary>
            Retrieves the subcategories of a category. This is a list of subcategories at the same level (siblings). Use a list of siblings, for example, to display the categories in a horizontal list.
            </summary>
            <param name="categoryId">Unique identifier of the category whose subcategories are retrieved.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.CategoryCollection"/>
            </returns>
            <example>
            <code>
              var category = new Category();
              var categoryCollection = category.GetChildCategories( categoryId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.CategoryResource.AddCategory(Mozu.Api.Contracts.ProductAdmin.Category)">
            <summary>
            Adds a new category to the site's category hierarchy. Specify a ParentCategoryID to determine where to locate the category in the hierarchy. If a ParentCategoryID is not specified, the new category becomes a top-level category.
            </summary>
            <param name="category">Properties of the new category. Required properties: ParentCategoryID and Content.Name.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.Category"/>
            </returns>
            <example>
            <code>
              var category = new Category();
              var category = category.AddCategory( category);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.CategoryResource.UpdateCategory(System.Int32,Mozu.Api.Contracts.ProductAdmin.Category)">
            <summary>
            Modifies a category such as moving it to another location in the category tree, or changing whether it is visible on the storefront. This PUT replaces the existing resource, so be sure to include all the information to maintain for the category.
            </summary>
            <param name="categoryId">Unique identifier of the category to modify.</param>
            <param name="category">Properties of the category to modify.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.Category"/>
            </returns>
            <example>
            <code>
              var category = new Category();
              var category = category.UpdateCategory( categoryId,  category);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.CategoryResource.UpdateCategory(System.Nullable{System.Boolean},System.Int32,Mozu.Api.Contracts.ProductAdmin.Category)">
            <summary>
            Modifies a category such as moving it to another location in the category tree, or changing whether it is visible on the storefront. This PUT replaces the existing resource, so be sure to include all the information to maintain for the category.
            </summary>
            <param name="cascadeVisibility">If true, when changing the display option for the category, change it for all subcategories also. Default: False.</param>
            <param name="categoryId">Unique identifier of the category to modify.</param>
            <param name="category">Properties of the category to modify.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.Category"/>
            </returns>
            <example>
            <code>
              var category = new Category();
              var category = category.UpdateCategory( cascadeVisibility,  categoryId,  category);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.CategoryResource.DeleteCategoryById(System.Int32)">
            <summary>
            Deletes the category specified by its category ID.
            </summary>
            <param name="categoryId">Unique identifier of the category to delete.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var category = new Category();
              category.DeleteCategoryById( categoryId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.CategoryResource.DeleteCategoryById(System.Nullable{System.Boolean},System.Int32)">
            <summary>
            Deletes the category specified by its category ID.
            </summary>
            <param name="cascadeDelete">If true, any subcategories of a category are deleted when this category is deleted. Default: False.</param>
            <param name="categoryId">Unique identifier of the category to delete.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var category = new Category();
              category.DeleteCategoryById( cascadeDelete,  categoryId);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Catalog.Admin.DiscountResource">
            <summary>
            Define and manage discounts to apply to products, product categories, or orders. The discounts can be a specified amount off the price, percentage off the price, or for free shipping. Create a coupon code that shoppers can use to redeem the discount.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Catalog.Admin.DiscountResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.DiscountResource.GetDiscounts">
            <summary>
            Retrieves a list of discounts according to any specified filter criteria and sort options.
            </summary>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.DiscountCollection"/>
            </returns>
            <example>
            <code>
              var discount = new Discount();
              var discountCollection = discount.GetDiscounts();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.DiscountResource.GetDiscounts(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Retrieves a list of discounts according to any specified filter criteria and sort options.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.DiscountCollection"/>
            </returns>
            <example>
            <code>
              var discount = new Discount();
              var discountCollection = discount.GetDiscounts( filter,  pageSize,  sortBy,  startIndex);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.DiscountResource.GetDiscount(System.Int32)">
            <summary>
            Retrieves the details of a single discount.
            </summary>
            <param name="discountId">Unique identifier of the discount. System-supplied and read-only.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.Discount"/>
            </returns>
            <example>
            <code>
              var discount = new Discount();
              var discount = discount.GetDiscount( discountId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.DiscountResource.GetDiscountContent(System.Int32)">
            <summary>
            Retrieves the localized content specified for the specified discount.
            </summary>
            <param name="discountId">Unique identifier of the discount. System-supplied and read-only.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.DiscountLocalizedContent"/>
            </returns>
            <example>
            <code>
              var discount = new Discount();
              var discountLocalizedContent = discount.GetDiscountContent( discountId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.DiscountResource.GenerateRandomCoupon">
            <summary>
            Generates a random code for a coupon.
            </summary>
            <returns>
            string
            </returns>
            <example>
            <code>
              var discount = new Discount();
              var string = discount.GenerateRandomCoupon();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.DiscountResource.CreateDiscount(Mozu.Api.Contracts.ProductAdmin.Discount)">
            <summary>
            Creates a discount.
            </summary>
            <param name="discount">Properties of the discount to create. Required properties: Content.Name, AmountType, StartDate, and Target.Type.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.Discount"/>
            </returns>
            <example>
            <code>
              var discount = new Discount();
              var discount = discount.CreateDiscount( discount);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.DiscountResource.RedeemDiscount(Mozu.Api.Contracts.ProductAdmin.Discounts.Redemption)">
            <summary>
            Redeems a discount configured in the product admin.
            </summary>
            <param name="redemption">Properties of the product discount redemption.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.Discounts.Redemption"/>
            </returns>
            <example>
            <code>
              var discount = new Discount();
              var redemption = discount.RedeemDiscount( redemption);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.DiscountResource.UpdateDiscount(System.Int32,Mozu.Api.Contracts.ProductAdmin.Discount)">
            <summary>
            Modifies a discount.
            </summary>
            <param name="discountId">Unique identifier of the discount. System-supplied and read-only.</param>
            <param name="discount">Properties of the discount to update. Required properties: Content.Name, AmountType, StartDate, and Target.Type. Any unspecified properties are set to null and boolean variables are set to false.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.Discount"/>
            </returns>
            <example>
            <code>
              var discount = new Discount();
              var discount = discount.UpdateDiscount( discountId,  discount);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.DiscountResource.UpdateDiscountContent(System.Int32,Mozu.Api.Contracts.ProductAdmin.DiscountLocalizedContent)">
            <summary>
            Modifies the localized content for the specified discount. Rename the discount without modifying any other discount properties.
            </summary>
            <param name="discountId">Unique identifier of the discount. System-supplied and read-only.</param>
            <param name="content">New Name and/or LocaleCode. Properties of the content to update. Required property: Name.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.DiscountLocalizedContent"/>
            </returns>
            <example>
            <code>
              var discount = new Discount();
              var discountLocalizedContent = discount.UpdateDiscountContent( discountId,  content);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.DiscountResource.DeleteDiscount(System.Int32)">
            <summary>
            Deletes a discount specified by its discount ID.
            </summary>
            <param name="discountId">Unique identifier of the discount. System-supplied and read-only.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var discount = new Discount();
              discount.DeleteDiscount( discountId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.DiscountResource.UnRedeemDiscount">
            <summary>
            Deletes a previous discount redemption from an order.
            </summary>
            <returns>
            
            </returns>
            <example>
            <code>
              var discount = new Discount();
              discount.UnRedeemDiscount();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.DiscountResource.UnRedeemDiscount(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Deletes a previous discount redemption from an order.
            </summary>
            <param name="discountId">Unique identifier of the previously redeemed discount. System-supplied and read only.</param>
            <param name="orderNumber">The number of the order associated with the redeemed product discount.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var discount = new Discount();
              discount.UnRedeemDiscount( discountId,  orderNumber);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Catalog.Admin.Discounts.DiscountTargetResource">
            <summary>
            Retrieves and modifies the products, categories, and shipping methods eligible for discounts in the form of a fixed dollar amount, percentage off a product price, or free shipping.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Catalog.Admin.Discounts.DiscountTargetResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Discounts.DiscountTargetResource.GetDiscountTarget(System.Int32)">
            <summary>
            Retrieves the discount target, that is which products, categories, or shipping methods are eligible for the discount.
            </summary>
            <param name="discountId"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.DiscountTarget"/>
            </returns>
            <example>
            <code>
              var discounttarget = new DiscountTarget();
              var discountTarget = discounttarget.GetDiscountTarget( discountId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Discounts.DiscountTargetResource.UpdateDiscountTarget(System.Int32,Mozu.Api.Contracts.ProductAdmin.DiscountTarget)">
            <summary>
            Modifies properties of the discount target, for example, the dollar amount, or precentage off the price.
            </summary>
            <param name="discountId">Unique identifier of the discount. System-supplied and read-only.</param>
            <param name="discountTarget">Properties of the discount target to modify. Required properties: Target.Type. Any unspecified properties are set to null and boolean variables to false.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.DiscountTarget"/>
            </returns>
            <example>
            <code>
              var discounttarget = new DiscountTarget();
              var discountTarget = discounttarget.UpdateDiscountTarget( discountId,  discountTarget);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Catalog.Admin.FacetResource">
            <summary>
            Use the Facets resource to manage the facets shoppers use to filter product display results on a storefront. Facets can include categories, product attributes, or prices, and use either a range of values or discrete values.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Catalog.Admin.FacetResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.FacetResource.GetFacet(System.Int32)">
            <summary>
            Retrieves a facet specified by its unique identifier and displays its properties.
            </summary>
            <param name="facetId">Unique identifier of the facet to retrieve.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.Facet"/>
            </returns>
            <example>
            <code>
              var facet = new Facet();
              var facet = facet.GetFacet( facetId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.FacetResource.GetFacet(System.Int32,System.Nullable{System.Boolean})">
            <summary>
            Retrieves a facet specified by its unique identifier and displays its properties.
            </summary>
            <param name="facetId">Unique identifier of the facet to retrieve.</param>
            <param name="validate">Validates that the product category associated with a facet is active. System-supplied and read only.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.Facet"/>
            </returns>
            <example>
            <code>
              var facet = new Facet();
              var facet = facet.GetFacet( facetId,  validate);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.FacetResource.GetFacetCategoryList(System.Int32)">
            <summary>
            Retrieves a list of the facets defined for the specified category.
            </summary>
            <param name="categoryId">Unique identifier of the category associated with the facets to retrieve.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.FacetSet"/>
            </returns>
            <example>
            <code>
              var facet = new Facet();
              var facetSet = facet.GetFacetCategoryList( categoryId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.FacetResource.GetFacetCategoryList(System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Retrieves a list of the facets defined for the specified category.
            </summary>
            <param name="categoryId">Unique identifier of the category associated with the facets to retrieve.</param>
            <param name="includeAvailable">If true, returns a list of the attributes and categories associated with a product type that have not been defined as a facet for the category.</param>
            <param name="validate">Validates that the product category associated with a facet is active. System-supplied and read only.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.FacetSet"/>
            </returns>
            <example>
            <code>
              var facet = new Facet();
              var facetSet = facet.GetFacetCategoryList( categoryId,  includeAvailable,  validate);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.FacetResource.AddFacet(Mozu.Api.Contracts.ProductAdmin.Facet)">
            <summary>
            Creates a new category, price, or attribute facet. Supply the category or attribute source to use for the facet values.
            </summary>
            <param name="facet">Properties of the new facet to create. Required properties: Source, FacetType, IsHidden, and CategoryId.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.Facet"/>
            </returns>
            <example>
            <code>
              var facet = new Facet();
              var facet = facet.AddFacet( facet);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.FacetResource.UpdateFacet(System.Int32,Mozu.Api.Contracts.ProductAdmin.Facet)">
            <summary>
            Modifies one or more properties of a defined facet.
            </summary>
            <param name="facetId">Unique identifier of the facet to modify.</param>
            <param name="facet">Properties of the defined facet to modify. Required properties: Source, FacetType, IsHidden, and CategoryId.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.Facet"/>
            </returns>
            <example>
            <code>
              var facet = new Facet();
              var facet = facet.UpdateFacet( facetId,  facet);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.FacetResource.DeleteFacetById(System.Int32)">
            <summary>
            Deletes the facet specified by its unique identifier.
            </summary>
            <param name="facetId">Unique identifier of the facet to delete.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var facet = new Facet();
              facet.DeleteFacetById( facetId);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Catalog.Admin.ProductReservationResource">
            <summary>
            Temporarily hold a product from inventory while a shopper is filling out payment information. Create a product reservation when a shopper proceeds to check out and then release the reservation when the order process is complete.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Catalog.Admin.ProductReservationResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.ProductReservationResource.GetProductReservations">
            <summary>
            Retrieves a list of product reservations according to any specified filter criteria and sort options.
            </summary>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductReservationCollection"/>
            </returns>
            <example>
            <code>
              var productreservation = new ProductReservation();
              var productReservationCollection = productreservation.GetProductReservations();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.ProductReservationResource.GetProductReservations(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Retrieves a list of product reservations according to any specified filter criteria and sort options.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductReservationCollection"/>
            </returns>
            <example>
            <code>
              var productreservation = new ProductReservation();
              var productReservationCollection = productreservation.GetProductReservations( filter,  pageSize,  sortBy,  startIndex);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.ProductReservationResource.GetProductReservation(System.Int32)">
            <summary>
            Retrieves the details of a product reservation.
            </summary>
            <param name="productReservationId">Unique identifier of the product reservation.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductReservation"/>
            </returns>
            <example>
            <code>
              var productreservation = new ProductReservation();
              var productReservation = productreservation.GetProductReservation( productReservationId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.ProductReservationResource.AddProductReservation(Mozu.Api.Contracts.ProductAdmin.ProductReservation)">
            <summary>
            Creates a new product reservation for a product. This action places a hold on the product inventory for the quantity specified during the ordering process.
            </summary>
            <param name="productReservation">Properties of the product reservation.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductReservation"/>
            </returns>
            <example>
            <code>
              var productreservation = new ProductReservation();
              var productReservation = productreservation.AddProductReservation( productReservation);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.ProductReservationResource.CommitReservation(System.Int32,System.Int32)">
            <summary>
            Commits a product reservation to decrement the product's inventory by the quantity specified then release the reservation once the order process completed successfully.
            </summary>
            <param name="productReservationId">Unique identifier of the reservation.</param>
            <param name="qty">Number of product items to remove from inventory.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var productreservation = new ProductReservation();
              productreservation.CommitReservation( productReservationId,  qty);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.ProductReservationResource.UpdateProductReservation(System.Int32,Mozu.Api.Contracts.ProductAdmin.ProductReservation)">
            <summary>
            Updates an existing product reservation for a product. 
            </summary>
            <param name="productReservationId">Unique identifier of the product reservation to update. </param>
            <param name="productReservation">Properties of the product reservation to update. </param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductReservation"/>
            </returns>
            <example>
            <code>
              var productreservation = new ProductReservation();
              var productReservation = productreservation.UpdateProductReservation( productReservationId,  productReservation);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.ProductReservationResource.DeleteProductReservation(System.Int32)">
            <summary>
            Deletes a product reservation. For example, delete a reservation when an order is not processed to return the product quantity back to inventory.
            </summary>
            <param name="productReservationId">Unique identifier of the reservation.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var productreservation = new ProductReservation();
              productreservation.DeleteProductReservation( productReservationId);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Catalog.Admin.ProductResource">
            <summary>
            Use this resource to create products, view the attributes associated with existing products, and determine which sites feature a specific product.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Catalog.Admin.ProductResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.ProductResource.GetProducts">
            <summary>
            Retrieves a list of products according to any specified facets, filter criteria, and sort options.
            </summary>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductCollection"/>
            </returns>
            <example>
            <code>
              var product = new Product();
              var productCollection = product.GetProducts();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.ProductResource.GetProducts(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Retrieves a list of products according to any specified facets, filter criteria, and sort options.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="noCount">If true, the operation does not return the TotalCount number of results.</param>
            <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="q">A list of product search terms to use in the query when searching across product code and product name. Separate multiple search terms with a space character.</param>
            <param name="qLimit">The maximum number of search results to return in the response. You can limit any range between 1-100.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductCollection"/>
            </returns>
            <example>
            <code>
              var product = new Product();
              var productCollection = product.GetProducts( filter,  noCount,  pageSize,  q,  qLimit,  sortBy,  startIndex);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.ProductResource.GetProduct(System.String)">
            <summary>
            Retrieves an existing product.
            </summary>
            <param name="productCode">Merchant-created code associated with the product such as a SKU. Max length: 30. Accepts a to z, A to Z, Ãƒâ€¹-ÃƒËœ, 0 to 9, #, semicolon, commas, apostrophes, and Spaces, but no punctuation or other characters.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.Product"/>
            </returns>
            <example>
            <code>
              var product = new Product();
              var product = product.GetProduct( productCode);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.ProductResource.GetProductInSites(System.String)">
            <summary>
            Retrieves a product that is associated with more than one specific site.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductInSiteInfo"/>}
            </returns>
            <example>
            <code>
              var product = new Product();
              var productInSiteInfo = product.GetProductInSites( productCode);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.ProductResource.GetProductInSite(System.String,System.Int32)">
            <summary>
            Retrieves a product that is associated with a specific site ID.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="siteId"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductInSiteInfo"/>
            </returns>
            <example>
            <code>
              var product = new Product();
              var productInSiteInfo = product.GetProductInSite( productCode,  siteId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.ProductResource.AddProduct(Mozu.Api.Contracts.ProductAdmin.Product)">
            <summary>
            Creates a new product. Supply a product name, product code, price and other product characteristics such as its attributes, categories where the product belongs, whether the product has configurable options, stand-alone options, and so on.
            </summary>
            <param name="product">Properties of the new product. Required properties: ProductCode, Content.ProductName, and Price.ListPrice.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.Product"/>
            </returns>
            <example>
            <code>
              var product = new Product();
              var product = product.AddProduct( product);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.ProductResource.AddProductInSite(System.String,Mozu.Api.Contracts.ProductAdmin.ProductInSiteInfo)">
            <summary>
            Creates a new product and assigns it to a specific site.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="productInSiteInfoIn">Creates a new product to associate with a site by updating the properties of that product by product ID.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductInSiteInfo"/>
            </returns>
            <example>
            <code>
              var product = new Product();
              var productInSiteInfo = product.AddProductInSite( productCode,  productInSiteInfoIn);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.ProductResource.UpdateProductStock(System.String,Mozu.Api.Contracts.ProductAdmin.StockOnHandAdjustment)">
            <summary>
            Updates the inventory for an existing product. The inventory or stock adjustment value is either an absolute number (number of items in stock) or Delta (the number to subtract from or add to the current number of items in stock).
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="stockAdjustment">Inventory adjustment for the product. Must supply Type (either Absolute or Delta) and Value (number of items to adjust). If Delta, specify a negative number to subtract inventory.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.Product"/>
            </returns>
            <example>
            <code>
              var product = new Product();
              var product = product.UpdateProductStock( productCode,  stockAdjustment);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.ProductResource.UpdateProduct(System.String,Mozu.Api.Contracts.ProductAdmin.Product)">
            <summary>
            Modifies an existing product.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="product">Properties of the product to update. Required properties: ProductCode, Content.ProductName, and Price.ListPrice.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.Product"/>
            </returns>
            <example>
            <code>
              var product = new Product();
              var product = product.UpdateProduct( productCode,  product);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.ProductResource.UpdateProductInSites(System.String,System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.ProductInSiteInfo})">
            <summary>
            Modifies an existing product that is associated with more than one specific site. For example, to link an existing product that is already associated to a site to another site, use this operation to create that association.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="productInSitesIn">Modifies an existing product associated with more than one site by updating the properties of that product by product ID.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductInSiteInfo"/>}
            </returns>
            <example>
            <code>
              var product = new Product();
              var productInSiteInfo = product.UpdateProductInSites( productCode,  productInSitesIn);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.ProductResource.UpdateProductInSite(System.String,System.Int32,Mozu.Api.Contracts.ProductAdmin.ProductInSiteInfo)">
            <summary>
            Modifies an existing product associated with a specific site ID.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="siteId"></param>
            <param name="productInSiteInfoIn">Modifies an existing product associated with a site by updating the properties of that product by product ID.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductInSiteInfo"/>
            </returns>
            <example>
            <code>
              var product = new Product();
              var productInSiteInfo = product.UpdateProductInSite( productCode,  siteId,  productInSiteInfoIn);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.ProductResource.DeleteProduct(System.String)">
            <summary>
            Deletes the product specified by its product code.
            </summary>
            <param name="productCode">Merchant-created code associated with the product such as a SKU.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var product = new Product();
              product.DeleteProduct( productCode);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.ProductResource.DeleteProductInSite(System.String,System.Int32)">
            <summary>
            Deletes the product specified by its product code and based on the site it has been associated with.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="siteId"></param>
            <returns>
            
            </returns>
            <example>
            <code>
              var product = new Product();
              product.DeleteProductInSite( productCode,  siteId);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductExtraResource">
            <summary>
            Use the Extras resource to configure an extra product attribute for products associated with the product type that uses the extra attribute.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductExtraResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductExtraResource.GetExtras(System.String)">
            <summary>
            Retrieves a list of extras configured for the product according to any defined filter and sort criteria.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductExtra"/>}
            </returns>
            <example>
            <code>
              var productextra = new ProductExtra();
              var productExtra = productextra.GetExtras( productCode);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductExtraResource.GetExtra(System.String,System.String)">
            <summary>
            Retrieves the details of an extra attribute configuration for the product specified in the request.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductExtra"/>
            </returns>
            <example>
            <code>
              var productextra = new ProductExtra();
              var productExtra = productextra.GetExtra( attributeFQN,  productCode);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductExtraResource.AddExtra(System.String,Mozu.Api.Contracts.ProductAdmin.ProductExtra)">
            <summary>
            Configure an extra attribute for the product specified in the request.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="productExtra">Properties of the product extra to configure for the specified product.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductExtra"/>
            </returns>
            <example>
            <code>
              var productextra = new ProductExtra();
              var productExtra = productextra.AddExtra( productCode,  productExtra);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductExtraResource.UpdateExtra(System.String,System.String,Mozu.Api.Contracts.ProductAdmin.ProductExtra)">
            <summary>
            Updates the configuration of an extra attribute for the product specified in the request.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="productExtra">Properties of the extra attribute to update for the specified product.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductExtra"/>
            </returns>
            <example>
            <code>
              var productextra = new ProductExtra();
              var productExtra = productextra.UpdateExtra( attributeFQN,  productCode,  productExtra);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductExtraResource.DeleteExtra(System.String,System.String)">
            <summary>
            Delete a product extra configuration for the product specified in the request.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var productextra = new ProductExtra();
              productextra.DeleteExtra( attributeFQN,  productCode);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductOptionResource">
            <summary>
            Use the Options resource to configure the option attributes and vocabulary values for an individual product associated with the product type that uses the option attribute. Options are used to generate variations of a product.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductOptionResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductOptionResource.GetOptions(System.String)">
            <summary>
            Retrieves a list of all option attributes configured for the product specified in the request.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductOption"/>}
            </returns>
            <example>
            <code>
              var productoption = new ProductOption();
              var productOption = productoption.GetOptions( productCode);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductOptionResource.GetOption(System.String,System.String)">
            <summary>
            Retrieves the details of an option attribute configuration for the specified product.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductOption"/>
            </returns>
            <example>
            <code>
              var productoption = new ProductOption();
              var productOption = productoption.GetOption( attributeFQN,  productCode);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductOptionResource.AddOption(System.String,Mozu.Api.Contracts.ProductAdmin.ProductOption)">
            <summary>
            Configures an option attribute for the product specified in the request.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="productOption">Properties of the option attribute to define for the product.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductOption"/>
            </returns>
            <example>
            <code>
              var productoption = new ProductOption();
              var productOption = productoption.AddOption( productCode,  productOption);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductOptionResource.UpdateOption(System.String,System.String,Mozu.Api.Contracts.ProductAdmin.ProductOption)">
            <summary>
            Updates one or more properties of an option attribute configured for a product.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="productOption">Properties of the product option attribute configuration to update.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductOption"/>
            </returns>
            <example>
            <code>
              var productoption = new ProductOption();
              var productOption = productoption.UpdateOption( attributeFQN,  productCode,  productOption);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductOptionResource.DeleteOption(System.String,System.String)">
            <summary>
            Deletes the configuration of an option attribute for the product specified in the request.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var productoption = new ProductOption();
              productoption.DeleteOption( attributeFQN,  productCode);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductPropertyResource">
            <summary>
            Use the Properties resource to configure a property attribute for an individual product associated with a product type that uses the property attribute, as well as set property values for the product.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductPropertyResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductPropertyResource.GetProperties(System.String)">
            <summary>
            Retrieves a list of the property attributes configured for the product specified in the request.
            </summary>
            <param name="productCode"></param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductProperty"/>}
            </returns>
            <example>
            <code>
              var productproperty = new ProductProperty();
              var productProperty = productproperty.GetProperties( productCode);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductPropertyResource.GetProperty(System.String,System.String)">
            <summary>
            Retrieves the details of a property attribute configuration for the product specified in the request.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productCode"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductProperty"/>
            </returns>
            <example>
            <code>
              var productproperty = new ProductProperty();
              var productProperty = productproperty.GetProperty( attributeFQN,  productCode);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductPropertyResource.AddProperty(System.String,Mozu.Api.Contracts.ProductAdmin.ProductProperty)">
            <summary>
            Configures a property attribute for the product specified in the request.
            </summary>
            <param name="productCode"></param>
            <param name="productProperty">Properties of the property attribute to configure for a product.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductProperty"/>
            </returns>
            <example>
            <code>
              var productproperty = new ProductProperty();
              var productProperty = productproperty.AddProperty( productCode,  productProperty);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductPropertyResource.UpdateProperty(System.String,System.String,Mozu.Api.Contracts.ProductAdmin.ProductProperty)">
            <summary>
            Update one or more details of a property attribute configuration for the product specified in the request.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productCode"></param>
            <param name="productProperty">Details of the property attribute to update for the product configuration.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductProperty"/>
            </returns>
            <example>
            <code>
              var productproperty = new ProductProperty();
              var productProperty = productproperty.UpdateProperty( attributeFQN,  productCode,  productProperty);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductPropertyResource.DeleteProperty(System.String,System.String)">
            <summary>
            Deletes the configuration of a property attribute for the product specified in the request.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productCode"></param>
            <returns>
            
            </returns>
            <example>
            <code>
              var productproperty = new ProductProperty();
              productproperty.DeleteProperty( attributeFQN,  productCode);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductVariationResource">
            <summary>
            Use the product variations sub-resource to manage the variations of a product based on its attributes. For example, a t-shirt product could be offered in six variations: Small Black, Medium Black, Large Black, Small White, Medium White, and Large White.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductVariationResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductVariationResource.GetProductVariation(System.String,System.String)">
            <summary>
            Retrieves the details of a product variation based on the supplied product code and variation key.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="variationKey">System-generated key that represents the attribute values that uniquely identify a specific product variation.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductVariation"/>
            </returns>
            <example>
            <code>
              var productvariation = new ProductVariation();
              var productVariation = productvariation.GetProductVariation( productCode,  variationKey);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductVariationResource.GetProductVariations(System.String)">
            <summary>
            Retrieves a list of the product variations configured for the specified product code.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductVariationPagedCollection"/>
            </returns>
            <example>
            <code>
              var productvariation = new ProductVariation();
              var productVariationPagedCollection = productvariation.GetProductVariations( productCode);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductVariationResource.GetProductVariations(System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Retrieves a list of the product variations configured for the specified product code.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">Indicates the zero-based offset in the complete result set where the returned entities begin, when creating paged results from a query. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductVariationPagedCollection"/>
            </returns>
            <example>
            <code>
              var productvariation = new ProductVariation();
              var productVariationPagedCollection = productvariation.GetProductVariations( filter,  pageSize,  productCode,  sortBy,  startIndex);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductVariationResource.UpdateProductVariations(System.String,Mozu.Api.Contracts.ProductAdmin.ProductVariationCollection)">
            <summary>
            Modifies the collection of variations for the specified product code. Because this PUT replaces the existing resource, supply all information necessary to maintain for the product variation.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="productVariations">Wrapper for the collection of variations configured for the specified product code.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductVariationCollection"/>
            </returns>
            <example>
            <code>
              var productvariation = new ProductVariation();
              var productVariationCollection = productvariation.UpdateProductVariations( productCode,  productVariations);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductVariationResource.UpdateProductVariation(System.String,System.String,Mozu.Api.Contracts.ProductAdmin.ProductVariation)">
            <summary>
            Modifies the details of a variation, based on the supplied variation key, for the specified product code.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="variationKey">System-generated key that represents the attribute values that uniquely identify a specific product variation.</param>
            <param name="productVariation">Wrapper for the properties of the specified product variation.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductVariation"/>
            </returns>
            <example>
            <code>
              var productvariation = new ProductVariation();
              var productVariation = productvariation.UpdateProductVariation( productCode,  variationKey,  productVariation);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductVariationResource.DeleteProductVariation(System.String,System.String)">
            <summary>
            Deletes a variation, based on the supplied variation key, for the specified product code.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="variationKey">System-generated key that represents the attribute values that uniquely identify a specific product variation.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var productvariation = new ProductVariation();
              productvariation.DeleteProductVariation( productCode,  variationKey);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Catalog.Admin.PublishingScopeResource">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Catalog.Admin.PublishingScopeResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.PublishingScopeResource.DiscardDrafts(Mozu.Api.Contracts.ProductAdmin.PublishingScope)">
            <summary>
            
            </summary>
            <param name="publishScope"></param>
            <returns>
            
            </returns>
            <example>
            <code>
              var publishingscope = new PublishingScope();
              publishingscope.DiscardDrafts( publishScope);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.PublishingScopeResource.PublishDrafts(Mozu.Api.Contracts.ProductAdmin.PublishingScope)">
            <summary>
            
            </summary>
            <param name="publishScope"></param>
            <returns>
            
            </returns>
            <example>
            <code>
              var publishingscope = new PublishingScope();
              publishingscope.PublishDrafts( publishScope);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Catalog.Admin.Shipping.Global.GlobalCarrierResource">
            <summary>
            Use the carriers subresource to retrieve shipping service types for shipping carriers.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Catalog.Admin.Shipping.Global.GlobalCarrierResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Shipping.Global.GlobalCarrierResource.GetServiceTypes(System.String,System.String)">
            <summary>
            Retrieve a list of shipping service types for the specified carrier. For example, service types for UPS might include UPS Ground, UPS 2-Day Air, or UPS Overnight Express.
            </summary>
            <param name="carrierId">Unique identifier of the shipping carrier.</param>
            <param name="localeCode">Language used for the entity. Currently, only "en-US" is supported.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ShippingAdmin.ServiceType"/>}
            </returns>
            <example>
            <code>
              var globalcarrier = new GlobalCarrier();
              var serviceType = globalcarrier.GetServiceTypes( carrierId,  localeCode);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Catalog.Admin.Shipping.Instance.InstanceCarrierResource">
            <summary>
            Configure the shipping carrier for the site.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Catalog.Admin.Shipping.Instance.InstanceCarrierResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Shipping.Instance.InstanceCarrierResource.GetConfigurations">
            <summary>
            Retrieves a list of carrier configurations according to any specified filter criteria and sort options.
            </summary>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ShippingAdmin.CarrierConfigurationCollection"/>
            </returns>
            <example>
            <code>
              var instancecarrier = new InstanceCarrier();
              var carrierConfigurationCollection = instancecarrier.GetConfigurations();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Shipping.Instance.InstanceCarrierResource.GetConfigurations(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Retrieves a list of carrier configurations according to any specified filter criteria and sort options.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ShippingAdmin.CarrierConfigurationCollection"/>
            </returns>
            <example>
            <code>
              var instancecarrier = new InstanceCarrier();
              var carrierConfigurationCollection = instancecarrier.GetConfigurations( filter,  pageSize,  sortBy,  startIndex);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Shipping.Instance.InstanceCarrierResource.GetConfiguration(System.String)">
            <summary>
            Retrieves the carrier configuration for a specific site by providing the carrier ID.
            </summary>
            <param name="carrierId">Identifier of the shipping carrier associated with the configuration details to retrieve.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ShippingAdmin.CarrierConfiguration"/>
            </returns>
            <example>
            <code>
              var instancecarrier = new InstanceCarrier();
              var carrierConfiguration = instancecarrier.GetConfiguration( carrierId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Shipping.Instance.InstanceCarrierResource.CreateConfiguration(System.String,Mozu.Api.Contracts.ShippingAdmin.CarrierConfiguration)">
            <summary>
            Create a new carrier configuration for the site.
            </summary>
            <param name="carrierId">Identifier of the carrier configuration being created.</param>
            <param name="carrierConfiguration">The properties of the carrier configuration to create.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ShippingAdmin.CarrierConfiguration"/>
            </returns>
            <example>
            <code>
              var instancecarrier = new InstanceCarrier();
              var carrierConfiguration = instancecarrier.CreateConfiguration( carrierId,  carrierConfiguration);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Shipping.Instance.InstanceCarrierResource.UpdateConfiguration(System.String,Mozu.Api.Contracts.ShippingAdmin.CarrierConfiguration)">
            <summary>
            Update and existing shipping carrier configuration.
            </summary>
            <param name="carrierId">Identifier of the shipping carrier configuration to update.</param>
            <param name="carrierConfiguration">The properties of the shipping carrier configuration to update.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ShippingAdmin.CarrierConfiguration"/>
            </returns>
            <example>
            <code>
              var instancecarrier = new InstanceCarrier();
              var carrierConfiguration = instancecarrier.UpdateConfiguration( carrierId,  carrierConfiguration);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Shipping.Instance.InstanceCarrierResource.DeleteConfiguration(System.String)">
            <summary>
            Delete the shipping carrier for the site.
            </summary>
            <param name="carrierId">Identifier of the specific shipping carrier to delete.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var instancecarrier = new InstanceCarrier();
              instancecarrier.DeleteConfiguration( carrierId);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Catalog.Admin.SiteGroupResource">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Catalog.Admin.SiteGroupResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.SiteGroupResource.GetSiteGroups">
            <summary>
            
            </summary>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.SiteGroupCollection"/>
            </returns>
            <example>
            <code>
              var sitegroup = new SiteGroup();
              var siteGroupCollection = sitegroup.GetSiteGroups();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.SiteGroupResource.GetSiteGroup(System.Int32)">
            <summary>
            
            </summary>
            <param name="siteGroupId"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.SiteGroup"/>
            </returns>
            <example>
            <code>
              var sitegroup = new SiteGroup();
              var siteGroup = sitegroup.GetSiteGroup( siteGroupId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.SiteGroupResource.UpdateSiteGroup(System.Int32,Mozu.Api.Contracts.ProductAdmin.SiteGroup)">
            <summary>
            
            </summary>
            <param name="siteGroupId"></param>
            <param name="siteGroup"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.SiteGroup"/>
            </returns>
            <example>
            <code>
              var sitegroup = new SiteGroup();
              var siteGroup = sitegroup.UpdateSiteGroup( siteGroupId,  siteGroup);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Catalog.Storefront.CategoryResource">
            <summary>
            Get the product category hierarchy as it appears to shoppers who are browsing the storefront. The hierarchy can be returned as a flat list or as a category tree.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Catalog.Storefront.CategoryResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Storefront.CategoryResource.GetCategories">
            <summary>
            Retrieves a list of categories according to any specified filter criteria and sort options.
            </summary>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductRuntime.CategoryPagedCollection"/>
            </returns>
            <example>
            <code>
              var category = new Category();
              var categoryPagedCollection = category.GetCategories();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Storefront.CategoryResource.GetCategories(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Retrieves a list of categories according to any specified filter criteria and sort options.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. You can filter product category search results by any of its properties, including its position in the category hierarchy. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). <b>For example - "filter=IsDisplayed+eq+true"</b></param>
            <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductRuntime.CategoryPagedCollection"/>
            </returns>
            <example>
            <code>
              var category = new Category();
              var categoryPagedCollection = category.GetCategories( filter,  pageSize,  sortBy,  startIndex);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Storefront.CategoryResource.GetCategory(System.Int32)">
            <summary>
            Retrieves the details of a single category.
            </summary>
            <param name="categoryId">Unique identifier for the storefront container used to organize products.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductRuntime.Category"/>
            </returns>
            <example>
            <code>
              var category = new Category();
              var category = category.GetCategory( categoryId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Storefront.CategoryResource.GetCategory(System.Nullable{System.Boolean},System.Int32)">
            <summary>
            Retrieves the details of a single category.
            </summary>
            <param name="allowInactive">If true, allow inactive categories to be retrieved in the category list response. If false, the categories retrieved will not include ones marked inactive.</param>
            <param name="categoryId">Unique identifier for the storefront container used to organize products.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductRuntime.Category"/>
            </returns>
            <example>
            <code>
              var category = new Category();
              var category = category.GetCategory( allowInactive,  categoryId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Storefront.CategoryResource.GetCategoryTree">
            <summary>
            Retrieves the list of product categories that appear on the storefront organized in a hierarchical format. Hidden categories do not appear in the list.
            </summary>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductRuntime.CategoryCollection"/>
            </returns>
            <example>
            <code>
              var category = new Category();
              var categoryCollection = category.GetCategoryTree();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Catalog.Storefront.ProductResource">
            <summary>
            Manage shoppers' product selection process during a visit to the storefront. Update product options as shoppers pick and choose their product choices. A shopper can't add a product to a cart until all of its required options have been selected.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Catalog.Storefront.ProductResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Storefront.ProductResource.GetProducts">
            <summary>
            Retrieves a list of products that appear on the storefront according to any specified filter criteria and sort options. A set of filter expressions representing the search parameters for a query.
            </summary>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductRuntime.ProductCollection"/>
            </returns>
            <example>
            <code>
              var product = new Product();
              var productCollection = product.GetProducts();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Storefront.ProductResource.GetProducts(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Retrieves a list of products that appear on the storefront according to any specified filter criteria and sort options. A set of filter expressions representing the search parameters for a query.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductRuntime.ProductCollection"/>
            </returns>
            <example>
            <code>
              var product = new Product();
              var productCollection = product.GetProducts( filter,  pageSize,  sortBy,  startIndex);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Storefront.ProductResource.GetProduct(System.String)">
            <summary>
            Retrieves information about a single product given its product code.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductRuntime.Product"/>
            </returns>
            <example>
            <code>
              var product = new Product();
              var product = product.GetProduct( productCode);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Storefront.ProductResource.GetProduct(System.Nullable{System.Boolean},System.String,System.String)">
            <summary>
            Retrieves information about a single product given its product code.
            </summary>
            <param name="allowInactive">If true, returns an inactive product as part of the query.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="variationProductCode">Merchant-created code associated with a specific product variation. Variation product codes maintain an association with the base product code.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductRuntime.Product"/>
            </returns>
            <example>
            <code>
              var product = new Product();
              var product = product.GetProduct( allowInactive,  productCode,  variationProductCode);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Storefront.ProductResource.ConfiguredProduct(System.String,Mozu.Api.Contracts.ProductRuntime.ProductOptionSelections)">
            <summary>
            Creates a new product selection. A create occurs each time a shopper selects a product option as they configure a product. Once all the required product options are configured, the product can be added to a cart.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="productOptionSelections">For a product with shopper-configurable options, the properties of the product options selected by the shopper.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductRuntime.ConfiguredProduct"/>
            </returns>
            <example>
            <code>
              var product = new Product();
              var configuredProduct = product.ConfiguredProduct( productCode,  productOptionSelections);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Storefront.ProductResource.ConfiguredProduct(System.Nullable{System.Boolean},System.String,Mozu.Api.Contracts.ProductRuntime.ProductOptionSelections)">
            <summary>
            Creates a new product selection. A create occurs each time a shopper selects a product option as they configure a product. Once all the required product options are configured, the product can be added to a cart.
            </summary>
            <param name="includeOptionDetails">If true, the response returns details about the product. If false, returns a product summary such as the product name, price, and sale price.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="productOptionSelections">For a product with shopper-configurable options, the properties of the product options selected by the shopper.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductRuntime.ConfiguredProduct"/>
            </returns>
            <example>
            <code>
              var product = new Product();
              var configuredProduct = product.ConfiguredProduct( includeOptionDetails,  productCode,  productOptionSelections);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Storefront.ProductResource.ValidateProduct(System.String,Mozu.Api.Contracts.ProductRuntime.ProductOptionSelections)">
            <summary>
            Validate the final state of shopper-selected options.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="productOptionSelections">For a product with shopper-configurable options, the properties of the product options selected by the shopper.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductRuntime.ProductValidationSummary"/>
            </returns>
            <example>
            <code>
              var product = new Product();
              var productValidationSummary = product.ValidateProduct( productCode,  productOptionSelections);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Catalog.Storefront.ProductSearchResultResource">
            <summary>
            Provide dynamic search results to shoppers as they browse and search for products on the storefront. Suggest possible search terms as the shopper enters text.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Catalog.Storefront.ProductSearchResultResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Storefront.ProductSearchResultResource.Search">
            <summary>
            Searches the categories displayed on the storefront for products or product options that the shopper types in a search query.
            </summary>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductRuntime.ProductSearchResult"/>
            </returns>
            <example>
            <code>
              var productsearchresult = new ProductSearchResult();
              var productSearchResult = productsearchresult.Search();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Storefront.ProductSearchResultResource.Search(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Searches the categories displayed on the storefront for products or product options that the shopper types in a search query.
            </summary>
            <param name="facet">Individually list the facet fields you want to display in a storefront product search.</param>
            <param name="facetFieldRangeQuery">Display a range facet not specified in a template in a storefront product search by listing the facet field and the range to display.</param>
            <param name="facetHierDepth">If filtering using category facets in a hierarchy, the number of category hierarchy levels to return for the facet. This option is only available for category facets.</param>
            <param name="facetHierPrefix">If filtering using category facets in a hierarchy, the parent categories you want to skip in the storefront product search. This parameter is only available for category facets.</param>
            <param name="facetHierValue">If filtering using category facets in a hierarchy, the category in the hierarchy to begin faceting on. This parameter is only available for category facets.</param>
            <param name="facetPageSize">The number of facet values to return for one or more facets.</param>
            <param name="facetSettings">Settings reserved for future facet search functionality on a storefront product search.</param>
            <param name="facetStartIndex">When paging through multiple facets, the startIndex value for each facet.</param>
            <param name="facetTemplate">The facet template to use on the storefront. A template displays all facets associated with the template on the storefront product search. Currently, only category-level facet templates are available.</param>
            <param name="facetTemplateSubset">Display a subset of the facets defined in the template specified in facetTemplate parameter.</param>
            <param name="facetValueFilter">The facet values to apply to the filter.</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. You can filter product search results by any of its properties, including product code, type, category, and name. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). <b>For example - "filter=categoryId+eq+12"</b></param>
            <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="query">The terms to search on.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductRuntime.ProductSearchResult"/>
            </returns>
            <example>
            <code>
              var productsearchresult = new ProductSearchResult();
              var productSearchResult = productsearchresult.Search( facet,  facetFieldRangeQuery,  facetHierDepth,  facetHierPrefix,  facetHierValue,  facetPageSize,  facetSettings,  facetStartIndex,  facetTemplate,  facetTemplateSubset,  facetValueFilter,  filter,  pageSize,  query,  sortBy,  startIndex);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Storefront.ProductSearchResultResource.Suggest">
            <summary>
            Suggests possible search terms as the shopper enters search text.
            </summary>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductRuntime.SearchSuggestion"/>
            </returns>
            <example>
            <code>
              var productsearchresult = new ProductSearchResult();
              var searchSuggestion = productsearchresult.Suggest();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Storefront.ProductSearchResultResource.Suggest(System.Nullable{System.Int32},System.String)">
            <summary>
            Suggests possible search terms as the shopper enters search text.
            </summary>
            <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="q">Text that the shopper is currently entering.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductRuntime.SearchSuggestion"/>
            </returns>
            <example>
            <code>
              var productsearchresult = new ProductSearchResult();
              var searchSuggestion = productsearchresult.Suggest( pageSize,  q);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Customer.Accounts.CardResource">
            <summary>
            Use the Cards subresource to manage stored credit cards for customer accounts. Mozu stores limited card data in the Customer service for expedited ordering purposes; however, the complete card data is stored in the Payment service.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Customer.Accounts.CardResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.CardResource.GetAccountCards(System.Int32)">
            <summary>
            Retrieves all stored credit cards for the customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CardCollection"/>
            </returns>
            <example>
            <code>
              var card = new Card();
              var cardCollection = card.GetAccountCards( accountId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.CardResource.AddAccountCard(System.Int32,Mozu.Api.Contracts.Customer.Card)">
            <summary>
            Creates a new credit card record and stores it for the customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="card">Properties of the customer credit card to add to the account.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.Card"/>
            </returns>
            <example>
            <code>
              var card = new Card();
              var card = card.AddAccountCard( accountId,  card);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.CardResource.UpdateAccountCard(System.Int32,Mozu.Api.Contracts.Customer.Card)">
            <summary>
            Update one or more properties of a credit card defined for a customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="card">Properties of the customer account credit card to update.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.Card"/>
            </returns>
            <example>
            <code>
              var card = new Card();
              var card = card.UpdateAccountCard( accountId,  card);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.CardResource.DeleteAccountCard(System.Int32,System.String)">
            <summary>
            Removes a stored credit card from a customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="cardId">Unique identifier of the credit card to delete.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var card = new Card();
              card.DeleteAccountCard( accountId,  cardId);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerAttributeResource">
            <summary>
            Mozu customers and merchants can create, view, update, and delete attributes for a customer account.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerAttributeResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerAttributeResource.GetAccountAttribute(System.Int32,System.Int32)">
            <summary>
            Retrieves the contents of an attribute associated with the specified customer account.
            </summary>
            <param name="accountId">Identifier of the customer account associated with the attribute to retrieve.</param>
            <param name="attributeId">Identifier of the customer account attribute to retrieve.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerAttribute"/>
            </returns>
            <example>
            <code>
              var customerattribute = new CustomerAttribute();
              var customerAttribute = customerattribute.GetAccountAttribute( accountId,  attributeId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerAttributeResource.GetAccountAttributes(System.Int32)">
            <summary>
            Retrieves the list of customer account attributes.
            </summary>
            <param name="accountId">Identifier of the customer account associated with the attributes to retrieve.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerAttributeCollection"/>
            </returns>
            <example>
            <code>
              var customerattribute = new CustomerAttribute();
              var customerAttributeCollection = customerattribute.GetAccountAttributes( accountId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerAttributeResource.GetAccountAttributes(System.Int32,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Retrieves the list of customer account attributes.
            </summary>
            <param name="accountId">Identifier of the customer account associated with the attributes to retrieve.</param>
            <param name="filter"></param>
            <param name="pageSize"></param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerAttributeCollection"/>
            </returns>
            <example>
            <code>
              var customerattribute = new CustomerAttribute();
              var customerAttributeCollection = customerattribute.GetAccountAttributes( accountId,  filter,  pageSize,  sortBy,  startIndex);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerAttributeResource.AddAccountAttributes(System.Int32,System.Collections.Generic.List{Mozu.Api.Contracts.Customer.CustomerAttribute})">
            <summary>
            Adds a new attribute to associate with the specified customer account.
            </summary>
            <param name="accountId">Identifier of the customer account associated with the new attribute.</param>
            <param name="customerAccountAttributes">The properties of the customer account attribute to create.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.Customer.CustomerAttribute"/>}
            </returns>
            <example>
            <code>
              var customerattribute = new CustomerAttribute();
              var customerAttribute = customerattribute.AddAccountAttributes( accountId,  customerAccountAttributes);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerAttributeResource.UpdateAccountAttribute(System.Int32,System.Collections.Generic.List{Mozu.Api.Contracts.Customer.CustomerAttribute})">
            <summary>
            Update a single customer account attribute by providing the customer account ID. This operation can optionally indicate whether or not items missing from the collection should be removed.
            </summary>
            <param name="accountId">Identifier of the customer account associated with the attribute.</param>
            <param name="customerAccountAttribute">The properties of the customer account attribute being updated.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.Customer.CustomerAttribute"/>}
            </returns>
            <example>
            <code>
              var customerattribute = new CustomerAttribute();
              var customerAttribute = customerattribute.UpdateAccountAttribute( accountId,  customerAccountAttribute);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerAttributeResource.UpdateAccountAttribute(System.Int32,System.Nullable{System.Boolean},System.Collections.Generic.List{Mozu.Api.Contracts.Customer.CustomerAttribute})">
            <summary>
            Update a single customer account attribute by providing the customer account ID. This operation can optionally indicate whether or not items missing from the collection should be removed.
            </summary>
            <param name="accountId">Identifier of the customer account associated with the attribute.</param>
            <param name="removeMissing">If true, remove the items missing from the collection. If false, do not remove items missing from the collection.</param>
            <param name="customerAccountAttribute">The properties of the customer account attribute being updated.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.Customer.CustomerAttribute"/>}
            </returns>
            <example>
            <code>
              var customerattribute = new CustomerAttribute();
              var customerAttribute = customerattribute.UpdateAccountAttribute( accountId,  removeMissing,  customerAccountAttribute);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerContactResource">
            <summary>
            Merchants and customers can create, view, update, and delete a contact for a customer account. A customer account may have multiple contacts for billing and shipping addresses.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerContactResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerContactResource.GetAccountContact(System.Int32,System.Int32)">
            <summary>
            Retrieves the specified contact for a customer account such as a billing or shipping contact.
            </summary>
            <param name="accountId">Unique identifier of the customer account whose contact information is being retrieved.</param>
            <param name="contactId">Unique identifier of the customer account contact to retrieve.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerContact"/>
            </returns>
            <example>
            <code>
              var customercontact = new CustomerContact();
              var customerContact = customercontact.GetAccountContact( accountId,  contactId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerContactResource.GetAccountContacts(System.Int32)">
            <summary>
            Retrieves a list of contacts for a customer according to any specified filter criteria and sort options.
            </summary>
            <param name="accountId">Unique identifier of the customer account associated with the contact information to retrieve.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerContactCollection"/>
            </returns>
            <example>
            <code>
              var customercontact = new CustomerContact();
              var customerContactCollection = customercontact.GetAccountContacts( accountId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerContactResource.GetAccountContacts(System.Int32,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Retrieves a list of contacts for a customer according to any specified filter criteria and sort options.
            </summary>
            <param name="accountId">Unique identifier of the customer account associated with the contact information to retrieve.</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerContactCollection"/>
            </returns>
            <example>
            <code>
              var customercontact = new CustomerContact();
              var customerContactCollection = customercontact.GetAccountContacts( accountId,  filter,  pageSize,  sortBy,  startIndex);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerContactResource.AddAccountContact(System.Int32,Mozu.Api.Contracts.Customer.CustomerContact)">
            <summary>
            Creates a new contact for a customer account such as a new shipping address.
            </summary>
            <param name="accountId">Unique identifier of the customer account containing the new contact.</param>
            <param name="contact">Properties of the new contact. Required properties: Contact.Email, ContactType.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerContact"/>
            </returns>
            <example>
            <code>
              var customercontact = new CustomerContact();
              var customerContact = customercontact.AddAccountContact( accountId,  contact);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerContactResource.UpdateAccountContact(System.Int32,System.Int32,Mozu.Api.Contracts.Customer.CustomerContact)">
            <summary>
            Updates a contact for a specified customer account such as to update addresses or change which contact is the primary contact for billing.
            </summary>
            <param name="accountId">Unique identifier of the customer account whose contact information is being updated.</param>
            <param name="contactId">Unique identifer of the customer account contact being updated.</param>
            <param name="contact">All properties the updated contact will have. Required properties: Name and email address.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerContact"/>
            </returns>
            <example>
            <code>
              var customercontact = new CustomerContact();
              var customerContact = customercontact.UpdateAccountContact( accountId,  contactId,  contact);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerContactResource.DeleteAccountContact(System.Int32,System.Int32)">
            <summary>
            Deletes a contact for the specified customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="contactId">Unique identifier of the customer account contact to delete.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var customercontact = new CustomerContact();
              customercontact.DeleteAccountContact( accountId,  contactId);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerGroupResource">
            <summary>
            Use the groups subresource to manage customer accounts in groups. The groups are useful to manage sets of customers. A customer account can belong to several groups or none at all.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerGroupResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerGroupResource.GetAccountGroups(System.Int32)">
            <summary>
            Retrieve a list of customer groups associated with the customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerGroupCollection"/>
            </returns>
            <example>
            <code>
              var customergroup = new CustomerGroup();
              var customerGroupCollection = customergroup.GetAccountGroups( accountId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerGroupResource.GetAccountGroups(System.Int32,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Retrieve a list of customer groups associated with the customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerGroupCollection"/>
            </returns>
            <example>
            <code>
              var customergroup = new CustomerGroup();
              var customerGroupCollection = customergroup.GetAccountGroups( accountId,  filter,  pageSize,  sortBy,  startIndex);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerGroupResource.GetAccountGroup(System.Int32,System.Int32)">
            <summary>
            Retrieves details of a customer account in a group.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="groupId">Unique identifier of the customer group.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerGroup"/>
            </returns>
            <example>
            <code>
              var customergroup = new CustomerGroup();
              var customerGroup = customergroup.GetAccountGroup( accountId,  groupId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerGroupResource.AddAccountGroup(System.Int32,System.Int32)">
            <summary>
            Adds a customer account to a group.
            </summary>
            <param name="accountId">Unique identifier of the customer account to add to a group.</param>
            <param name="groupId">Unique identifier of the customer group to add the customer to.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerGroup"/>
            </returns>
            <example>
            <code>
              var customergroup = new CustomerGroup();
              var customerGroup = customergroup.AddAccountGroup( accountId,  groupId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerGroupResource.DeleteAccountGroup(System.Int32,System.Int32)">
            <summary>
            Removes a customer account from a group.
            </summary>
            <param name="accountId">Unique identifier of the customer account to remove from the group.</param>
            <param name="groupId">Unique identifier of the customer group.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var customergroup = new CustomerGroup();
              customergroup.DeleteAccountGroup( accountId,  groupId);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerNoteResource">
            <summary>
            Merchants can add and view internal notes for a customer account. For example, a merchant can track a customer's interests or complaints. Only merchants can add and view notes. Customers cannot see these notes from their My Account page.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerNoteResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerNoteResource.GetAccountNote(System.Int32,System.Int32)">
            <summary>
            Retrieves the contents of a particular note attached to a specified customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account that contains the note being retrieved.</param>
            <param name="noteId">Unique identifier of a particular note to retrieve.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerNote"/>
            </returns>
            <example>
            <code>
              var customernote = new CustomerNote();
              var customerNote = customernote.GetAccountNote( accountId,  noteId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerNoteResource.GetAccountNotes(System.Int32)">
            <summary>
            Retrieves a list of notes added to a customer account according to any specified filter criteria and sort options.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerNoteCollection"/>
            </returns>
            <example>
            <code>
              var customernote = new CustomerNote();
              var customerNoteCollection = customernote.GetAccountNotes( accountId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerNoteResource.GetAccountNotes(System.Int32,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Retrieves a list of notes added to a customer account according to any specified filter criteria and sort options.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">Indicates the zero-based offset in the complete result set where the returned entities begin, when creating paged results from a query. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerNoteCollection"/>
            </returns>
            <example>
            <code>
              var customernote = new CustomerNote();
              var customerNoteCollection = customernote.GetAccountNotes( accountId,  filter,  pageSize,  sortBy,  startIndex);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerNoteResource.AddAccountNote(System.Int32,Mozu.Api.Contracts.Customer.CustomerNote)">
            <summary>
            Adds a new note to the specified customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account for which to create the note.</param>
            <param name="note"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerNote"/>
            </returns>
            <example>
            <code>
              var customernote = new CustomerNote();
              var customerNote = customernote.AddAccountNote( accountId,  note);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerNoteResource.UpdateAccountNote(System.Int32,System.Int32,Mozu.Api.Contracts.Customer.CustomerNote)">
            <summary>
            Modifies an existing note for a customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account note to modify.</param>
            <param name="noteId">Unique identifier of the note to update.</param>
            <param name="note">The new content to replace the existing note.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerNote"/>
            </returns>
            <example>
            <code>
              var customernote = new CustomerNote();
              var customerNote = customernote.UpdateAccountNote( accountId,  noteId,  note);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerNoteResource.DeleteAccountNote(System.Int32,System.Int32)">
            <summary>
            Removes a note from the specified customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account that contains the note being deleted.</param>
            <param name="noteId">Unique identifier of the customer account note being deleted.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var customernote = new CustomerNote();
              customernote.DeleteAccountNote( accountId,  noteId);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Customer.AddressValidationRequestResource">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Customer.AddressValidationRequestResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.AddressValidationRequestResource.ValidateAddress(Mozu.Api.Contracts.Customer.AddressValidationRequest)">
            <summary>
            
            </summary>
            <param name="addressValidationRequest"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.AddressValidationResponse"/>
            </returns>
            <example>
            <code>
              var addressvalidationrequest = new AddressValidationRequest();
              var addressValidationResponse = addressvalidationrequest.ValidateAddress( addressValidationRequest);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Customer.CustomerAccountResource">
            <summary>
            Create, view, update, and delete a contact in a customer account. A customer account may have multiple contacts for billing or shipping addresses. Each contact may also list any groups to which the contact belongs and whether the contact accepts marketing material such as newsletters or email offers.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Customer.CustomerAccountResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerAccountResource.GetAccounts">
            <summary>
            Retrieves a list of customer accounts.
            </summary>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerAccountCollection"/>
            </returns>
            <example>
            <code>
              var customeraccount = new CustomerAccount();
              var customerAccountCollection = customeraccount.GetAccounts();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerAccountResource.GetAccounts(System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Retrieves a list of customer accounts.
            </summary>
            <param name="fields">The fields to include in the response.</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize"></param>
            <param name="q">A list of customer account search terms to use in the query when searching across customer name and email. Separate multiple search terms with a space character.</param>
            <param name="qLimit">The maximum number of search results to return in the response. You can limit any range between 1-100.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerAccountCollection"/>
            </returns>
            <example>
            <code>
              var customeraccount = new CustomerAccount();
              var customerAccountCollection = customeraccount.GetAccounts( fields,  filter,  pageSize,  q,  qLimit,  sortBy,  startIndex);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerAccountResource.GetAccount(System.Int32)">
            <summary>
            Retrieve details of a customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account to retrieve.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerAccount"/>
            </returns>
            <example>
            <code>
              var customeraccount = new CustomerAccount();
              var customerAccount = customeraccount.GetAccount( accountId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerAccountResource.AddAccount(Mozu.Api.Contracts.Customer.CustomerAccount)">
            <summary>
            Creates a new customer account.
            </summary>
            <param name="account"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerAccount"/>
            </returns>
            <example>
            <code>
              var customeraccount = new CustomerAccount();
              var customerAccount = customeraccount.AddAccount( account);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerAccountResource.UpdateAccount(System.Int32,Mozu.Api.Contracts.Customer.CustomerAccount)">
            <summary>
            Updates a customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="account"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerAccount"/>
            </returns>
            <example>
            <code>
              var customeraccount = new CustomerAccount();
              var customerAccount = customeraccount.UpdateAccount( accountId,  account);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerAccountResource.DeleteAccount(System.Int32)">
            <summary>
            Deletes a customer account. A customer account cannot be deleted if any orders exist, past or present.
            </summary>
            <param name="accountId">Unique identifier of the customer account to delete.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var customeraccount = new CustomerAccount();
              customeraccount.DeleteAccount( accountId);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Customer.CustomerGroupResource">
            <summary>
            Merchants create, view, update and delete groups. Groups are useful to manage sets of customers, for example, to offer discounts to particular groups or assign VIP status to a set of customers. A customer account can have several groups or none at all.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Customer.CustomerGroupResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerGroupResource.GetGroups">
            <summary>
            Retrieves a list of all customer groups defined for the site according to any specified filter criteria and sort options.
            </summary>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerGroupCollection"/>
            </returns>
            <example>
            <code>
              var customergroup = new CustomerGroup();
              var customerGroupCollection = customergroup.GetGroups();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerGroupResource.GetGroups(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Retrieves a list of all customer groups defined for the site according to any specified filter criteria and sort options.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">Indicates the zero-based offset in the complete result set where the returned entities begin, when creating paged results from a query. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerGroupCollection"/>
            </returns>
            <example>
            <code>
              var customergroup = new CustomerGroup();
              var customerGroupCollection = customergroup.GetGroups( filter,  pageSize,  sortBy,  startIndex);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerGroupResource.GetGroup(System.Int32)">
            <summary>
            Retrieves the name of a customer group specified the customer group ID.
            </summary>
            <param name="groupId">Identifier of the customer group to retrieve.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerGroup"/>
            </returns>
            <example>
            <code>
              var customergroup = new CustomerGroup();
              var customerGroup = customergroup.GetGroup( groupId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerGroupResource.AddGroup(Mozu.Api.Contracts.Customer.CustomerGroup)">
            <summary>
            Creates a new customer group. New customer groups do not have any associated customer accounts.
            </summary>
            <param name="group"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerGroup"/>
            </returns>
            <example>
            <code>
              var customergroup = new CustomerGroup();
              var customerGroup = customergroup.AddGroup( group);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerGroupResource.UpdateGroup(System.Int32,Mozu.Api.Contracts.Customer.CustomerGroup)">
            <summary>
            Changes the name of an existing customer group.
            </summary>
            <param name="groupId">Identifier of the customer group to update.</param>
            <param name="group"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerGroup"/>
            </returns>
            <example>
            <code>
              var customergroup = new CustomerGroup();
              var customerGroup = customergroup.UpdateGroup( groupId,  group);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerGroupResource.DeleteGroup(System.Int32)">
            <summary>
            Deletes a customer group specified by its unique identifier. Deleting a group removes any customer account associations, but does not delete the customer account itself.
            </summary>
            <param name="groupId">Identifier of the customer group to delete.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var customergroup = new CustomerGroup();
              customergroup.DeleteGroup( groupId);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Customer.LocationResource">
            <summary>
            List of locations where customer pages exist. Examples: Customer Welcome Page, Customer Information Page.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Customer.LocationResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.LocationResource.GetLocation(System.Int32)">
            <summary>
            Retrieves the location of a customer by providing a location ID.
            </summary>
            <param name="locationId">Identifier of the location being retrieved.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Core.Extensible.Location"/>
            </returns>
            <example>
            <code>
              var location = new Location();
              var location = location.GetLocation( locationId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.LocationResource.GetLocationByName(System.String)">
            <summary>
            Retrieves the location by providing a name to query by.
            </summary>
            <param name="name">The name of the location.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Core.Extensible.Location"/>
            </returns>
            <example>
            <code>
              var location = new Location();
              var location = location.GetLocationByName( name);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.LocationResource.GetLocations">
            <summary>
            Retrieves a list of locations for this particular customer.
            </summary>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Core.Extensible.LocationCollection"/>
            </returns>
            <example>
            <code>
              var location = new Location();
              var locationCollection = location.GetLocations();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.LocationResource.GetLocations(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Retrieves a list of locations for this particular customer.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Core.Extensible.LocationCollection"/>
            </returns>
            <example>
            <code>
              var location = new Location();
              var locationCollection = location.GetLocations( filter,  pageSize,  sortBy,  startIndex);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Customer.VisitResource">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Customer.VisitResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.VisitResource.GetVisit(System.String)">
            <summary>
            
            </summary>
            <param name="visitId"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.Visit"/>
            </returns>
            <example>
            <code>
              var visit = new Visit();
              var visit = visit.GetVisit( visitId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.VisitResource.GetVisits">
            <summary>
            
            </summary>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.VisitCollection"/>
            </returns>
            <example>
            <code>
              var visit = new Visit();
              var visitCollection = visit.GetVisits();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.VisitResource.GetVisits(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            
            </summary>
            <param name="filter"></param>
            <param name="pageSize"></param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.VisitCollection"/>
            </returns>
            <example>
            <code>
              var visit = new Visit();
              var visitCollection = visit.GetVisits( filter,  pageSize,  sortBy,  startIndex);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.VisitResource.AddVisit(Mozu.Api.Contracts.Customer.Visit)">
            <summary>
            
            </summary>
            <param name="visit"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.Visit"/>
            </returns>
            <example>
            <code>
              var visit = new Visit();
              var visit = visit.AddVisit( visit);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.VisitResource.UpdateVisit(System.String,Mozu.Api.Contracts.Customer.Visit)">
            <summary>
            
            </summary>
            <param name="visitId"></param>
            <param name="visit"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.Visit"/>
            </returns>
            <example>
            <code>
              var visit = new Visit();
              var visit = visit.UpdateVisit( visitId,  visit);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.OrderResource">
            <summary>
            Manage order processing, payment, and shipping. Includes getting customer payment details, shipping address and selected shipment method, processing payment transactions, and, once paid, shipping the order to the shopper.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.OrderResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.OrderResource.GetOrders">
            <summary>
            Retrieves a list of orders according to any specified filter criteria and sort options.
            </summary>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderCollection"/>
            </returns>
            <example>
            <code>
              var order = new Order();
              var orderCollection = order.GetOrders();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.OrderResource.GetOrders(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Retrieves a list of orders according to any specified filter criteria and sort options.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. You can filter an order's search results by any of its properties, including status, contact information, or total. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). <b>For example - "filter=Status+eq+Submitted"</b></param>
            <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="q">A list of order search terms to use in the query when searching across order number and the name or email of the billing contact. Separate multiple search terms with a space character.</param>
            <param name="qLimit">The maximum number of search results to return in the response. You can limit any range between 1-100.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderCollection"/>
            </returns>
            <example>
            <code>
              var order = new Order();
              var orderCollection = order.GetOrders( filter,  pageSize,  q,  qLimit,  sortBy,  startIndex);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.OrderResource.GetAvailableActions(System.String)">
            <summary>
            Retrieves available order actions which depends on the status of the order. Actions are "CreateOrder," "SubmitOrder," "SetOrderAsProcessing," "CloseOrder," or "CancelOrder."
            </summary>
            <param name="orderId">Unique identifier of the available order actions to get.</param>
            <returns>
            List{string}
            </returns>
            <example>
            <code>
              var order = new Order();
              var string = order.GetAvailableActions( orderId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.OrderResource.GetOrder(System.String)">
            <summary>
            Retrieves the details of an order specified by the order ID.
            </summary>
            <param name="orderId">Unique identifier of the order details to get.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var order = new Order();
              var order = order.GetOrder( orderId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.OrderResource.GetOrder(System.Nullable{System.Boolean},System.String)">
            <summary>
            Retrieves the details of an order specified by the order ID.
            </summary>
            <param name="draft">If true, retrieve the draft version of the order, which might include uncommitted changes to the order or its components.</param>
            <param name="orderId">Unique identifier of the order details to get.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var order = new Order();
              var order = order.GetOrder( draft,  orderId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.OrderResource.CreateOrder(Mozu.Api.Contracts.CommerceRuntime.Orders.Order)">
            <summary>
            Creates a new order for no-cart quick-ordering scenarios.
            </summary>
            <param name="order">All properties of the order to place.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var order = new Order();
              var order = order.CreateOrder( order);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.OrderResource.CreateOrderFromCart(System.String)">
            <summary>
            Creates a new order from an existing cart when the customer chooses to proceed to checkout.
            </summary>
            <param name="cartId">Unique identifier of the cart. This is the original cart ID expressed as a GUID.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var order = new Order();
              var order = order.CreateOrderFromCart( cartId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.OrderResource.PerformOrderAction(System.String,Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAction)">
            <summary>
            Perform the specified action for an order. Available actions depend on the current status of the order. When in doubt, first get a list of available order actions.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="action">Action to perform, which can be "CreateOrder," "SubmitOrder," "SetOrderAsProcessing," "CloseOrder," or "CancelOrder."</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var order = new Order();
              var order = order.PerformOrderAction( orderId,  action);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.OrderResource.UpdateOrderDiscount(System.Int32,System.String,Mozu.Api.Contracts.CommerceRuntime.Discounts.AppliedDiscount)">
            <summary>
            Update the properties of a discount applied to an order.
            </summary>
            <param name="discountId">Unique identifier of the discount. System-supplied and read only.</param>
            <param name="orderId">Unique identifier of the order discount. System-supplied and read only.</param>
            <param name="discount">Properties of the order discount to update.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var order = new Order();
              var order = order.UpdateOrderDiscount( discountId,  orderId,  discount);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.OrderResource.UpdateOrderDiscount(System.Int32,System.String,System.String,System.String,Mozu.Api.Contracts.CommerceRuntime.Discounts.AppliedDiscount)">
            <summary>
            Update the properties of a discount applied to an order.
            </summary>
            <param name="discountId">Unique identifier of the discount. System-supplied and read only.</param>
            <param name="orderId">Unique identifier of the order discount. System-supplied and read only.</param>
            <param name="updateMode">Specifies whether to modify the discount by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal", "ApplyToDraft", or "ApplyAndCommit".</param>
            <param name="version">If applicable, the version of the order or draft for which to update the discount.</param>
            <param name="discount">Properties of the order discount to update.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var order = new Order();
              var order = order.UpdateOrderDiscount( discountId,  orderId,  updateMode,  version,  discount);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.OrderResource.DeleteOrderDraft(System.String)">
            <summary>
            Deletes the current draft version of the order, which also deletes any uncommitted changes made to the order in draft mode.
            </summary>
            <param name="orderId">Unique identifier of the order associated with the draft to delete.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var order = new Order();
              order.DeleteOrderDraft( orderId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.OrderResource.DeleteOrderDraft(System.String,System.String)">
            <summary>
            Deletes the current draft version of the order, which also deletes any uncommitted changes made to the order in draft mode.
            </summary>
            <param name="orderId">Unique identifier of the order associated with the draft to delete.</param>
            <param name="version">If applicable, the version of the order draft to delete.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var order = new Order();
              order.DeleteOrderDraft( orderId,  version);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.OrderResource.ChangeOrderUserId(System.String)">
            <summary>
            
            </summary>
            <param name="orderId"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var order = new Order();
              var order = order.ChangeOrderUserId( orderId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.OrderResource.UpdateOrder(System.String,Mozu.Api.Contracts.CommerceRuntime.Orders.Order)">
            <summary>
            Updates the specified order when additional order information, such as shipping or billing information, is modified during the checkout process.
            </summary>
            <param name="orderId">Unique identifier of the order to update.</param>
            <param name="order">The properties of the order to update.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var order = new Order();
              var order = order.UpdateOrder( orderId,  order);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.OrderResource.UpdateOrder(System.String,System.String,System.String,Mozu.Api.Contracts.CommerceRuntime.Orders.Order)">
            <summary>
            Updates the specified order when additional order information, such as shipping or billing information, is modified during the checkout process.
            </summary>
            <param name="orderId">Unique identifier of the order to update.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal", "ApplyToDraft", or "ApplyAndCommit".</param>
            <param name="version">If applicable, the version of the order or draft to update.</param>
            <param name="order">The properties of the order to update.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var order = new Order();
              var order = order.UpdateOrder( orderId,  updateMode,  version,  order);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Orders.AdjustmentResource">
            <summary>
            Use this subresource to manage ad-hoc order level price adjustments.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Orders.AdjustmentResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.AdjustmentResource.ApplyShippingAdjustment(System.String,Mozu.Api.Contracts.CommerceRuntime.Commerce.Adjustment)">
            <summary>
            Modify the amount charged for shipping the specified order.
            </summary>
            <param name="orderId">Unique identifier of the order associated with the shipping adjustment.</param>
            <param name="adjustment">Properties of the shipping adjustment to apply to the order.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var adjustment = new Adjustment();
              var order = adjustment.ApplyShippingAdjustment( orderId,  adjustment);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.AdjustmentResource.ApplyShippingAdjustment(System.String,System.String,System.String,Mozu.Api.Contracts.CommerceRuntime.Commerce.Adjustment)">
            <summary>
            Modify the amount charged for shipping the specified order.
            </summary>
            <param name="orderId">Unique identifier of the order associated with the shipping adjustment.</param>
            <param name="updateMode">Specifies whether to apply the shipping adjustment by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal", "ApplyToDraft", or "ApplyAndCommit".</param>
            <param name="version">If applicable, the version of the order or draft to which to apply the shipping adjustment.</param>
            <param name="adjustment">Properties of the shipping adjustment to apply to the order.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var adjustment = new Adjustment();
              var order = adjustment.ApplyShippingAdjustment( orderId,  updateMode,  version,  adjustment);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.AdjustmentResource.ApplyAdjustment(System.String,Mozu.Api.Contracts.CommerceRuntime.Commerce.Adjustment)">
            <summary>
            Applies a price adjustment to the specified order.
            </summary>
            <param name="orderId">Unique identifier of the order for which to apply the adjustment.</param>
            <param name="adjustment">Properties of the price adjustment to apply to the order.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var adjustment = new Adjustment();
              var order = adjustment.ApplyAdjustment( orderId,  adjustment);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.AdjustmentResource.ApplyAdjustment(System.String,System.String,System.String,Mozu.Api.Contracts.CommerceRuntime.Commerce.Adjustment)">
            <summary>
            Applies a price adjustment to the specified order.
            </summary>
            <param name="orderId">Unique identifier of the order for which to apply the adjustment.</param>
            <param name="updateMode">Specifies whether to apply the adjustment by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal", "ApplyToDraft", or "ApplyAndCommit".</param>
            <param name="version">If applicable, the version of the order or draft for which to apply the adjustment.</param>
            <param name="adjustment">Properties of the price adjustment to apply to the order.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var adjustment = new Adjustment();
              var order = adjustment.ApplyAdjustment( orderId,  updateMode,  version,  adjustment);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.AdjustmentResource.RemoveShippingAdjustment(System.String)">
            <summary>
            Removes a shipping adjustment previously applied to an order or draft.
            </summary>
            <param name="orderId">Unique identifier of the order with the applied shipping adjustment.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var adjustment = new Adjustment();
              var order = adjustment.RemoveShippingAdjustment( orderId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.AdjustmentResource.RemoveShippingAdjustment(System.String,System.String,System.String)">
            <summary>
            Removes a shipping adjustment previously applied to an order or draft.
            </summary>
            <param name="orderId">Unique identifier of the order with the applied shipping adjustment.</param>
            <param name="updateMode">Specifies whether to remove the shipping adjustment by updating the original order, updating the order in draft mode, or updating the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal", "ApplyToDraft", or "ApplyAndCommit".</param>
            <param name="version">If applicable, the version of the order or draft from which to remove the shipping adjustment.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var adjustment = new Adjustment();
              var order = adjustment.RemoveShippingAdjustment( orderId,  updateMode,  version);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.AdjustmentResource.RemoveAdjustment(System.String)">
            <summary>
            Removes a price adjustment from the specified order.
            </summary>
            <param name="orderId">Unique identifier of the order for which to delete the adjustment.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var adjustment = new Adjustment();
              var order = adjustment.RemoveAdjustment( orderId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.AdjustmentResource.RemoveAdjustment(System.String,System.String,System.String)">
            <summary>
            Removes a price adjustment from the specified order.
            </summary>
            <param name="orderId">Unique identifier of the order for which to delete the adjustment.</param>
            <param name="updateMode">Specifies whether to remove the adjustment by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal", "ApplyToDraft", or "ApplyAndCommit".</param>
            <param name="version">If applicable, the version of the order or draft from which to remove the adjustment.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var adjustment = new Adjustment();
              var order = adjustment.RemoveAdjustment( orderId,  updateMode,  version);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Orders.AppliedDiscountResource">
            <summary>
            Use this subresource to apply coupons to or remove coupons from an order based on a supplied coupon code.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Orders.AppliedDiscountResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.AppliedDiscountResource.ApplyCoupon(System.String,System.String)">
            <summary>
            Apply a coupon to the order.
            </summary>
            <param name="couponCode"></param>
            <param name="orderId">Unique identifier of the order to associate the coupon. System-supplied and read-only.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var applieddiscount = new AppliedDiscount();
              var order = applieddiscount.ApplyCoupon( couponCode,  orderId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.AppliedDiscountResource.ApplyCoupon(System.String,System.String,System.String,System.String)">
            <summary>
            Apply a coupon to the order.
            </summary>
            <param name="couponCode"></param>
            <param name="orderId">Unique identifier of the order to associate the coupon. System-supplied and read-only.</param>
            <param name="updateMode">Specifies whether to apply the coupon by updating the original order, updating the order in draft mode, or updating the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal", "ApplyToDraft", or "ApplyAndCommit".</param>
            <param name="version">If applicable, the version of the order or order draft to which to apply the coupon.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var applieddiscount = new AppliedDiscount();
              var order = applieddiscount.ApplyCoupon( couponCode,  orderId,  updateMode,  version);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.AppliedDiscountResource.RemoveCoupon(System.String,System.String)">
            <summary>
            Removes a coupon previously applied to the order.
            </summary>
            <param name="couponCode"></param>
            <param name="orderId">Unique identifier of the order with the coupon to remove.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var applieddiscount = new AppliedDiscount();
              var order = applieddiscount.RemoveCoupon( couponCode,  orderId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.AppliedDiscountResource.RemoveCoupon(System.String,System.String,System.String,System.String)">
            <summary>
            Removes a coupon previously applied to the order.
            </summary>
            <param name="couponCode"></param>
            <param name="orderId">Unique identifier of the order with the coupon to remove.</param>
            <param name="updateMode">Specifies whether to remove the coupon by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal", "ApplyToDraft", or "ApplyAndCommit".</param>
            <param name="version">If applicable, the version of the order or order draft from which to remove the coupon.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var applieddiscount = new AppliedDiscount();
              var order = applieddiscount.RemoveCoupon( couponCode,  orderId,  updateMode,  version);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.AppliedDiscountResource.RemoveCoupons(System.String)">
            <summary>
            Removes all coupons previously applied to the order.
            </summary>
            <param name="orderId">Unique identifier of the order with the coupons to remove.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var applieddiscount = new AppliedDiscount();
              var order = applieddiscount.RemoveCoupons( orderId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.AppliedDiscountResource.RemoveCoupons(System.String,System.String,System.String)">
            <summary>
            Removes all coupons previously applied to the order.
            </summary>
            <param name="orderId">Unique identifier of the order with the coupons to remove.</param>
            <param name="updateMode">Specifies whether to remove coupons by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal", "ApplyToDraft", or "ApplyAndCommit".</param>
            <param name="version">If applicable, the version of the order or order draft from which to remove coupons.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var applieddiscount = new AppliedDiscount();
              var order = applieddiscount.RemoveCoupons( orderId,  updateMode,  version);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Orders.Attributedefinition.AttributeResource">
            <summary>
            Attributes for orders creates extensibility for the way we describe orders.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Orders.Attributedefinition.AttributeResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.Attributedefinition.AttributeResource.GetAttributeByName(System.String)">
            <summary>
            Retrieves an existing order attribute by providing the name and namespace.
            </summary>
            <param name="fqn">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Core.Extensible.Attribute"/>
            </returns>
            <example>
            <code>
              var attribute = new Attribute();
              var attribute = attribute.GetAttributeByName( fqn);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.Attributedefinition.AttributeResource.GetAttributes">
            <summary>
            Retrieves a list of order attributes according to any filter criteria or sort options.
            </summary>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Core.Extensible.AttributeCollection"/>
            </returns>
            <example>
            <code>
              var attribute = new Attribute();
              var attributeCollection = attribute.GetAttributes();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.Attributedefinition.AttributeResource.GetAttributes(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Retrieves a list of order attributes according to any filter criteria or sort options.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">Indicates the zero-based offset in the complete result set where the returned entities begin, when creating paged results from a query. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Core.Extensible.AttributeCollection"/>
            </returns>
            <example>
            <code>
              var attribute = new Attribute();
              var attributeCollection = attribute.GetAttributes( filter,  pageSize,  sortBy,  startIndex);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.Attributedefinition.AttributeResource.GetAttribute(System.Int32)">
            <summary>
            Retrieves a single existing order attribute.
            </summary>
            <param name="attributeId">Identifier of the single order attribute to retrieve.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Core.Extensible.Attribute"/>
            </returns>
            <example>
            <code>
              var attribute = new Attribute();
              var attribute = attribute.GetAttribute( attributeId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.Attributedefinition.AttributeResource.CreateAttribute(Mozu.Api.Contracts.Core.Extensible.Attribute)">
            <summary>
            Create a new attribute to associate with an order.
            </summary>
            <param name="attribute">The properties of the order attribute to create.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Core.Extensible.Attribute"/>
            </returns>
            <example>
            <code>
              var attribute = new Attribute();
              var attribute = attribute.CreateAttribute( attribute);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.Attributedefinition.AttributeResource.UpdateAttribute(System.Int32,Mozu.Api.Contracts.Core.Extensible.Attribute)">
            <summary>
            Update an existing order attribute.
            </summary>
            <param name="attributeId">Unique identifier of the attribute.</param>
            <param name="attribute">The properties of the order attribute being updated.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Core.Extensible.Attribute"/>
            </returns>
            <example>
            <code>
              var attribute = new Attribute();
              var attribute = attribute.UpdateAttribute( attributeId,  attribute);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.Attributedefinition.AttributeResource.DeleteAttribute(System.Int32)">
            <summary>
            Delete an existing order attribute.
            </summary>
            <param name="attributeId">Unique identifier of the attribute.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var attribute = new Attribute();
              attribute.DeleteAttribute( attributeId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.Attributedefinition.AttributeResource.DeleteAttributeByName(System.String)">
            <summary>
            Deletes an order attribute by specifying the fully qualified name of the attribute.
            </summary>
            <param name="fqn">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var attribute = new Attribute();
              attribute.DeleteAttributeByName( fqn);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Orders.Attributedefinition.AttributeSetResource">
            <summary>
            A grouping of related orders attributes.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Orders.Attributedefinition.AttributeSetResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.Attributedefinition.AttributeSetResource.GetAttributeSetByName(System.String)">
            <summary>
            Retrieves the attribute set by providing the name and namespace.
            </summary>
            <param name="fqn">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Core.Extensible.AttributeSet"/>
            </returns>
            <example>
            <code>
              var attributeset = new AttributeSet();
              var attributeSet = attributeset.GetAttributeSetByName( fqn);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.Attributedefinition.AttributeSetResource.GetAttributeSets">
            <summary>
            Retrieves a list of attribute sets according to any filter criteria or sort options.
            </summary>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Core.Extensible.AttributeSetCollection"/>
            </returns>
            <example>
            <code>
              var attributeset = new AttributeSet();
              var attributeSetCollection = attributeset.GetAttributeSets();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.Attributedefinition.AttributeSetResource.GetAttributeSets(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Retrieves a list of attribute sets according to any filter criteria or sort options.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">Indicates the zero-based offset in the complete result set where the returned entities begin, when creating paged results from a query. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Core.Extensible.AttributeSetCollection"/>
            </returns>
            <example>
            <code>
              var attributeset = new AttributeSet();
              var attributeSetCollection = attributeset.GetAttributeSets( filter,  pageSize,  sortBy,  startIndex);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.Attributedefinition.AttributeSetResource.GetAttributeSet(System.Int32)">
            <summary>
            Retrieves a specific attribute set by providing the attribute set ID.
            </summary>
            <param name="attributeSetId">Identifier of the attribute set being retrieved.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Core.Extensible.AttributeSet"/>
            </returns>
            <example>
            <code>
              var attributeset = new AttributeSet();
              var attributeSet = attributeset.GetAttributeSet( attributeSetId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.Attributedefinition.AttributeSetResource.CreateAttributeSet(Mozu.Api.Contracts.Core.Extensible.AttributeSet)">
            <summary>
            Create new attribute set to provide order extensibility.
            </summary>
            <param name="attributeSet">The properties of the orders attribute set being created.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Core.Extensible.AttributeSet"/>
            </returns>
            <example>
            <code>
              var attributeset = new AttributeSet();
              var attributeSet = attributeset.CreateAttributeSet( attributeSet);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.Attributedefinition.AttributeSetResource.UpdateAttributeSet(System.Int32,Mozu.Api.Contracts.Core.Extensible.AttributeSet)">
            <summary>
            Update an existing attribute set by providing the attribute set ID.
            </summary>
            <param name="attributeSetId">Identifier of the attribute set being updated.</param>
            <param name="attributeSet">The properties of the attribute set being updated.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Core.Extensible.AttributeSet"/>
            </returns>
            <example>
            <code>
              var attributeset = new AttributeSet();
              var attributeSet = attributeset.UpdateAttributeSet( attributeSetId,  attributeSet);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.Attributedefinition.AttributeSetResource.UpsertAttributeSetAssignment(Mozu.Api.Contracts.Core.Extensible.AttributeSetAssignment)">
            <summary>
            Associate an attribute with an attribute set.
            </summary>
            <param name="assignment">Properties of the attribute set assignment.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var attributeset = new AttributeSet();
              attributeset.UpsertAttributeSetAssignment( assignment);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.Attributedefinition.AttributeSetResource.DeleteAttributeSet(System.Int32)">
            <summary>
            Delete a specific attribute set by providing the attribute set ID.
            </summary>
            <param name="attributeSetId">Identifier of the attribute set being deleted.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var attributeset = new AttributeSet();
              attributeset.DeleteAttributeSet( attributeSetId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.Attributedefinition.AttributeSetResource.RemoveAttributeSetAssignment(System.Int32,System.Int32)">
            <summary>
            Removes the attribute from its assigned attribute set.
            </summary>
            <param name="attributeSetId">Identifier of the attribute set.</param>
            <param name="locationId">Identifier of the location. Locations describe where in the application the attribute set definition will be rendered (such as a page).</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var attributeset = new AttributeSet();
              attributeset.RemoveAttributeSetAssignment( attributeSetId,  locationId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.Attributedefinition.AttributeSetResource.DeleteAttributeSetByName(System.String)">
            <summary>
            Delete a specific attribute set by providing the fully qualified name.
            </summary>
            <param name="fqn">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var attributeset = new AttributeSet();
              attributeset.DeleteAttributeSetByName( fqn);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Orders.BillingInfoResource">
            <summary>
            Use the Billing Info subresource to manage the billing information stored for an order.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Orders.BillingInfoResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.BillingInfoResource.GetBillingInfo(System.String)">
            <summary>
            Retrieves the billing information associated with an order.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Payments.BillingInfo"/>
            </returns>
            <example>
            <code>
              var billinginfo = new BillingInfo();
              var billingInfo = billinginfo.GetBillingInfo( orderId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.BillingInfoResource.GetBillingInfo(System.Nullable{System.Boolean},System.String)">
            <summary>
            Retrieves the billing information associated with an order.
            </summary>
            <param name="draft">If true, retrieve the draft version of the order billing information, which might include uncommitted changes.</param>
            <param name="orderId">Unique identifier of the order.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Payments.BillingInfo"/>
            </returns>
            <example>
            <code>
              var billinginfo = new BillingInfo();
              var billingInfo = billinginfo.GetBillingInfo( draft,  orderId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.BillingInfoResource.SetBillingInfo(System.String,Mozu.Api.Contracts.CommerceRuntime.Payments.BillingInfo)">
            <summary>
            Updates the billing information supplied for an order.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="billingInfo">The properties of the order billing information to update.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Payments.BillingInfo"/>
            </returns>
            <example>
            <code>
              var billinginfo = new BillingInfo();
              var billingInfo = billinginfo.SetBillingInfo( orderId,  billingInfo);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.BillingInfoResource.SetBillingInfo(System.String,System.String,System.String,Mozu.Api.Contracts.CommerceRuntime.Payments.BillingInfo)">
            <summary>
            Updates the billing information supplied for an order.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="updateMode">Specifies whether to set the billing information by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal", "ApplyToDraft", or "ApplyAndCommit".</param>
            <param name="version">If applicable, the version of the order or draft for which to set the billing information.</param>
            <param name="billingInfo">The properties of the order billing information to update.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Payments.BillingInfo"/>
            </returns>
            <example>
            <code>
              var billinginfo = new BillingInfo();
              var billingInfo = billinginfo.SetBillingInfo( orderId,  updateMode,  version,  billingInfo);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Orders.LocationResource">
            <summary>
            Locations associated with orders are geographical and provide context for shipping and taxes.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Orders.LocationResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.LocationResource.GetLocation(System.Int32)">
            <summary>
            Retrieves the order location by providing the location ID.
            </summary>
            <param name="locationId">Identifier of the location specified in the order.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Core.Extensible.Location"/>
            </returns>
            <example>
            <code>
              var location = new Location();
              var location = location.GetLocation( locationId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.LocationResource.GetLocationByName(System.String)">
            <summary>
            Retrieves an order location by providing the name.
            </summary>
            <param name="name">Location name provided in the request.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Core.Extensible.Location"/>
            </returns>
            <example>
            <code>
              var location = new Location();
              var location = location.GetLocationByName( name);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.LocationResource.GetLocations">
            <summary>
            Retrieves a list of locations associated with the orders.
            </summary>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Core.Extensible.LocationCollection"/>
            </returns>
            <example>
            <code>
              var location = new Location();
              var locationCollection = location.GetLocations();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.LocationResource.GetLocations(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Retrieves a list of locations associated with the orders.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Core.Extensible.LocationCollection"/>
            </returns>
            <example>
            <code>
              var location = new Location();
              var locationCollection = location.GetLocations( filter,  pageSize,  sortBy,  startIndex);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Orders.OrderAttributeResource">
            <summary>
            List of attributes that describe an order. An order attribute has content localized to the locale code of the site and several other properties that uniquely identify it to associate with an order.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Orders.OrderAttributeResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.OrderAttributeResource.GetOrderAttributes(System.String)">
            <summary>
            Retrieves a list of order attributes.
            </summary>
            <param name="orderId">Identifier of the order whose order attributes are being retrieved.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAttribute"/>}
            </returns>
            <example>
            <code>
              var orderattribute = new OrderAttribute();
              var orderAttribute = orderattribute.GetOrderAttributes( orderId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.OrderAttributeResource.GetOrderAttributeSet(System.Int32,System.String)">
            <summary>
            Retrieves the order attribute set by providing the attribute set ID.
            </summary>
            <param name="attributeSetId">Identifier of the attribute set whose order attribute set is being retrieved.</param>
            <param name="orderId">Identifier of the order whose order attribute set is being retrieved.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAttribute"/>}
            </returns>
            <example>
            <code>
              var orderattribute = new OrderAttribute();
              var orderAttribute = orderattribute.GetOrderAttributeSet( attributeSetId,  orderId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.OrderAttributeResource.CreateOrderAttributes(System.String,System.Collections.Generic.List{Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAttribute})">
            <summary>
            Create a new list of order attributes by providing the order ID.
            </summary>
            <param name="orderId">Identifier of the order whose attributes are being created.</param>
            <param name="orderAttributes">The attribute properties to create to associate with the order ID.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAttribute"/>}
            </returns>
            <example>
            <code>
              var orderattribute = new OrderAttribute();
              var orderAttribute = orderattribute.CreateOrderAttributes( orderId,  orderAttributes);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.OrderAttributeResource.UpdateOrderAttributes(System.String,System.Collections.Generic.List{Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAttribute})">
            <summary>
            Update the properties of an order's attributes by providing the order ID and by removing any missing properties if removeMissing is set to true.
            </summary>
            <param name="orderId">Identifier of the order whose order attributes are being updated.</param>
            <param name="orderAttributes">List of order attributes being updated.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAttribute"/>}
            </returns>
            <example>
            <code>
              var orderattribute = new OrderAttribute();
              var orderAttribute = orderattribute.UpdateOrderAttributes( orderId,  orderAttributes);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.OrderAttributeResource.UpdateOrderAttributes(System.String,System.Nullable{System.Boolean},System.Collections.Generic.List{Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAttribute})">
            <summary>
            Update the properties of an order's attributes by providing the order ID and by removing any missing properties if removeMissing is set to true.
            </summary>
            <param name="orderId">Identifier of the order whose order attributes are being updated.</param>
            <param name="removeMissing">If true, the operation removes missing properties so that the updated order attributes will not show properties with a null value.</param>
            <param name="orderAttributes">List of order attributes being updated.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAttribute"/>}
            </returns>
            <example>
            <code>
              var orderattribute = new OrderAttribute();
              var orderAttribute = orderattribute.UpdateOrderAttributes( orderId,  removeMissing,  orderAttributes);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Orders.OrderItemResource">
            <summary>
            Use this subresource to retrieve details about items in an active order.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Orders.OrderItemResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.OrderItemResource.GetOrderItem(System.String,System.String)">
            <summary>
            Retrieves the details of a single order item.
            </summary>
            <param name="orderId">Unique identifier of the order item to retrieve.</param>
            <param name="orderItemId">Unique identifier of the order item details to retrieve.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem"/>
            </returns>
            <example>
            <code>
              var orderitem = new OrderItem();
              var orderItem = orderitem.GetOrderItem( orderId,  orderItemId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.OrderItemResource.GetOrderItem(System.Nullable{System.Boolean},System.String,System.String)">
            <summary>
            Retrieves the details of a single order item.
            </summary>
            <param name="draft">If true, retrieve the draft version of this order item, which might include uncommitted changes to the order item, the order, or other order components.</param>
            <param name="orderId">Unique identifier of the order item to retrieve.</param>
            <param name="orderItemId">Unique identifier of the order item details to retrieve.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem"/>
            </returns>
            <example>
            <code>
              var orderitem = new OrderItem();
              var orderItem = orderitem.GetOrderItem( draft,  orderId,  orderItemId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.OrderItemResource.GetOrderItems(System.String)">
            <summary>
            Retrieves the details of all items in an order.
            </summary>
            <param name="orderId">Unique identifier of the order items to retrieve.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItemCollection"/>
            </returns>
            <example>
            <code>
              var orderitem = new OrderItem();
              var orderItemCollection = orderitem.GetOrderItems( orderId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.OrderItemResource.GetOrderItems(System.Nullable{System.Boolean},System.String)">
            <summary>
            Retrieves the details of all items in an order.
            </summary>
            <param name="draft">If true, retrieve the draft version of the order's items, which might include uncommitted changes to one or more order items, the order itself, or other order components.</param>
            <param name="orderId">Unique identifier of the order items to retrieve.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItemCollection"/>
            </returns>
            <example>
            <code>
              var orderitem = new OrderItem();
              var orderItemCollection = orderitem.GetOrderItems( draft,  orderId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.OrderItemResource.CreateOrderItem(System.String,Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem)">
            <summary>
            Adds a new item to an existing order.
            </summary>
            <param name="orderId">Unique identifier of the order for which to add the item.</param>
            <param name="orderItem">The properties of the item to create in the existing order.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var orderitem = new OrderItem();
              var order = orderitem.CreateOrderItem( orderId,  orderItem);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.OrderItemResource.CreateOrderItem(System.String,System.String,System.String,Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem)">
            <summary>
            Adds a new item to an existing order.
            </summary>
            <param name="orderId">Unique identifier of the order for which to add the item.</param>
            <param name="updateMode">Specifies whether to add the item by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal", "ApplyToDraft", or "ApplyAndCommit".</param>
            <param name="version">If applicable, the version of the order or order draft for which to add the item.</param>
            <param name="orderItem">The properties of the item to create in the existing order.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var orderitem = new OrderItem();
              var order = orderitem.CreateOrderItem( orderId,  updateMode,  version,  orderItem);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.OrderItemResource.UpdateOrderItemDiscount(System.Int32,System.String,System.String,Mozu.Api.Contracts.CommerceRuntime.Discounts.AppliedDiscount)">
            <summary>
            Update the discount applied to an item in an order.
            </summary>
            <param name="discountId">Unique identifier of the discount. System-supplied and read only.</param>
            <param name="orderId">Unique identifier of the order associated with the item discount.</param>
            <param name="orderItemId">Unique identifier of the item in the order.</param>
            <param name="discount">Properties of the discount to modify for the order item.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var orderitem = new OrderItem();
              var order = orderitem.UpdateOrderItemDiscount( discountId,  orderId,  orderItemId,  discount);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.OrderItemResource.UpdateOrderItemDiscount(System.Int32,System.String,System.String,System.String,System.String,Mozu.Api.Contracts.CommerceRuntime.Discounts.AppliedDiscount)">
            <summary>
            Update the discount applied to an item in an order.
            </summary>
            <param name="discountId">Unique identifier of the discount. System-supplied and read only.</param>
            <param name="orderId">Unique identifier of the order associated with the item discount.</param>
            <param name="orderItemId">Unique identifier of the item in the order.</param>
            <param name="updateMode">Specifies whether to change the item discount by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal", "ApplyToDraft", or "ApplyAndCommit".</param>
            <param name="version">If applicable, the version of the order or order draft for which to update the item discount.</param>
            <param name="discount">Properties of the discount to modify for the order item.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var orderitem = new OrderItem();
              var order = orderitem.UpdateOrderItemDiscount( discountId,  orderId,  orderItemId,  updateMode,  version,  discount);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.OrderItemResource.UpdateItemProductPrice(System.String,System.String,System.Decimal)">
            <summary>
            Override the price of an individual product in the specified order.
            </summary>
            <param name="orderId">Unique identifier of the order containing the item to price override.</param>
            <param name="orderItemId">Unique identifier of the item in the order to price override.</param>
            <param name="price">The override price to specify for this item in the specified order.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var orderitem = new OrderItem();
              var order = orderitem.UpdateItemProductPrice( orderId,  orderItemId,  price);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.OrderItemResource.UpdateItemProductPrice(System.String,System.String,System.Decimal,System.String,System.String)">
            <summary>
            Override the price of an individual product in the specified order.
            </summary>
            <param name="orderId">Unique identifier of the order containing the item to price override.</param>
            <param name="orderItemId">Unique identifier of the item in the order to price override.</param>
            <param name="price">The override price to specify for this item in the specified order.</param>
            <param name="updateMode">Specifies whether to change the product price by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal", "ApplyToDraft", or "ApplyAndCommit".</param>
            <param name="version">If applicable, the version of the order or order draft for which to update the item price.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var orderitem = new OrderItem();
              var order = orderitem.UpdateItemProductPrice( orderId,  orderItemId,  price,  updateMode,  version);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.OrderItemResource.UpdateItemQuantity(System.String,System.String,System.Int32)">
            <summary>
            Update the quantity of an item in an order.
            </summary>
            <param name="orderId">Unique identifier of the order containing the item to update quantity.</param>
            <param name="orderItemId">Unique identifier of the item in the order to update quantity.</param>
            <param name="quantity">The quantity of the item in the order to update.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var orderitem = new OrderItem();
              var order = orderitem.UpdateItemQuantity( orderId,  orderItemId,  quantity);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.OrderItemResource.UpdateItemQuantity(System.String,System.String,System.Int32,System.String,System.String)">
            <summary>
            Update the quantity of an item in an order.
            </summary>
            <param name="orderId">Unique identifier of the order containing the item to update quantity.</param>
            <param name="orderItemId">Unique identifier of the item in the order to update quantity.</param>
            <param name="quantity">The quantity of the item in the order to update.</param>
            <param name="updateMode">Specifies whether to change the item quantity by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal", "ApplyToDraft", or "ApplyAndCommit".</param>
            <param name="version">If applicable, the version of the order or order draft for which to update the item quantity.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var orderitem = new OrderItem();
              var order = orderitem.UpdateItemQuantity( orderId,  orderItemId,  quantity,  updateMode,  version);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.OrderItemResource.DeleteOrderItem(System.String,System.String)">
            <summary>
            Removes a previously added item from an existing order.
            </summary>
            <param name="orderId">Unique identifier of the order with the item to remove.</param>
            <param name="orderItemId">Unique identifier of the item to remove from the order.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var orderitem = new OrderItem();
              var order = orderitem.DeleteOrderItem( orderId,  orderItemId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.OrderItemResource.DeleteOrderItem(System.String,System.String,System.String,System.String)">
            <summary>
            Removes a previously added item from an existing order.
            </summary>
            <param name="orderId">Unique identifier of the order with the item to remove.</param>
            <param name="orderItemId">Unique identifier of the item to remove from the order.</param>
            <param name="updateMode">Specifies whether to remove the item by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal", "ApplyToDraft", or "ApplyAndCommit".</param>
            <param name="version">If applicable, the version of the order or order draft from which to delete the item.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var orderitem = new OrderItem();
              var order = orderitem.DeleteOrderItem( orderId,  orderItemId,  updateMode,  version);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Orders.OrderNoteResource">
            <summary>
            Use this subresource to manage notes associated with an active order.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Orders.OrderNoteResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.OrderNoteResource.GetOrderNotes(System.String)">
            <summary>
            Retrieves a list of all notes for an order.
            </summary>
            <param name="orderId">Unique identifier of the order whose notes are retrieved.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderNote"/>}
            </returns>
            <example>
            <code>
              var ordernote = new OrderNote();
              var orderNote = ordernote.GetOrderNotes( orderId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.OrderNoteResource.GetOrderNote(System.String,System.String)">
            <summary>
            Retrieves a specific order note from an order.
            </summary>
            <param name="noteId">Unique identifier of the note text to retrieve.</param>
            <param name="orderId">Unique identifier of the order note to retrieve.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderNote"/>
            </returns>
            <example>
            <code>
              var ordernote = new OrderNote();
              var orderNote = ordernote.GetOrderNote( noteId,  orderId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.OrderNoteResource.CreateOrderNote(System.String,Mozu.Api.Contracts.CommerceRuntime.Orders.OrderNote)">
            <summary>
            Adds a note to the order. This is an internal note that the merchant can add to an order.
            </summary>
            <param name="orderId">Unique identifier of the order to add a note.</param>
            <param name="orderNote">The Unicode alphanumeric text contained in the note. Max length: 256 characters.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderNote"/>
            </returns>
            <example>
            <code>
              var ordernote = new OrderNote();
              var orderNote = ordernote.CreateOrderNote( orderId,  orderNote);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.OrderNoteResource.UpdateOrderNote(System.String,System.String,Mozu.Api.Contracts.CommerceRuntime.Orders.OrderNote)">
            <summary>
            Updates a specific order note for an order.
            </summary>
            <param name="noteId">Unique identifier of the note whose text is being updated.</param>
            <param name="orderId">Unique identifier of the order whose note is being updated.</param>
            <param name="orderNote">The Unicode alphanumeric text contained in the note.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderNote"/>
            </returns>
            <example>
            <code>
              var ordernote = new OrderNote();
              var orderNote = ordernote.UpdateOrderNote( noteId,  orderId,  orderNote);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.OrderNoteResource.DeleteOrderNote(System.String,System.String)">
            <summary>
            Deletes a specific order note on an order.
            </summary>
            <param name="noteId">Unique identifier of the note text to delete.</param>
            <param name="orderId">Unique identifier of the order note to delete.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var ordernote = new OrderNote();
              ordernote.DeleteOrderNote( noteId,  orderId);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Orders.PackageResource">
            <summary>
            Use the packages subresource to manage the physical packages to ship for an order.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Orders.PackageResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.PackageResource.GetPackage(System.String,System.String)">
            <summary>
            Retrieves the details of a package of order items.
            </summary>
            <param name="orderId">Unique identifier of the order associated with the package to retrieve.</param>
            <param name="packageId">Unique identifier of the package to retrieve.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Shipping.Package"/>
            </returns>
            <example>
            <code>
              var package = new Package();
              var package = package.GetPackage( orderId,  packageId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.PackageResource.GetPackageLabel(System.String,System.String)">
            <summary>
            Retrieves the package label image supplied by the carrier.
            </summary>
            <param name="orderId">Unique identifier of the order associated with the package label to retrieve.</param>
            <param name="packageId">Unique identifier of the package for which to retrieve the label.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var package = new Package();
              package.GetPackageLabel( orderId,  packageId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.PackageResource.CreatePackage(System.String,Mozu.Api.Contracts.CommerceRuntime.Shipping.Package)">
            <summary>
            Creates a new physical package of order items.
            </summary>
            <param name="orderId">Unique identifier of the order associated with this package.</param>
            <param name="package">Properties of the physical package of order items.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Shipping.Package"/>
            </returns>
            <example>
            <code>
              var package = new Package();
              var package = package.CreatePackage( orderId,  pkg);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.PackageResource.UpdatePackage(System.String,System.String,Mozu.Api.Contracts.CommerceRuntime.Shipping.Package)">
            <summary>
            Updates one or more properties of a physical package of order items.
            </summary>
            <param name="orderId">Unique identifier of the order associated with the package to update.</param>
            <param name="packageId">Unique identifier of the package of order items to update.</param>
            <param name="package">Wrapper of properties for the package of order items to update.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Shipping.Package"/>
            </returns>
            <example>
            <code>
              var package = new Package();
              var package = package.UpdatePackage( orderId,  packageId,  pkg);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.PackageResource.DeletePackage(System.String,System.String)">
            <summary>
            Removes a physical package of items from the specified order.
            </summary>
            <param name="orderId">Unique identifier of the order associated with the package to delete.</param>
            <param name="packageId">Unique identifier of the package to delete.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var package = new Package();
              package.DeletePackage( orderId,  packageId);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Orders.PaymentResource">
            <summary>
            Use the Payments subresource to manage payment transactions for orders. Each transaction performed for an order represents an individual payment. For example, if an order totals $75.00 but the shopper has a $50.00 gift certificate, both the gift certificate transaction and the credit card transaction for the remaining $25.00 are recorded as payments for the order.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Orders.PaymentResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.PaymentResource.GetPayments(System.String)">
            <summary>
            Retrieves information about all payment transactions submitted for the specified order.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentCollection"/>
            </returns>
            <example>
            <code>
              var payment = new Payment();
              var paymentCollection = payment.GetPayments( orderId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.PaymentResource.GetPayment(System.String,System.String)">
            <summary>
            Retrieves information about a specific payment transaction submitted for the specified order.
            </summary>
            <param name="orderId">Unique identifier of the order associated with the payment transaction.</param>
            <param name="paymentId">Unique identifier of the payment transaction submitted for the order.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Payments.Payment"/>
            </returns>
            <example>
            <code>
              var payment = new Payment();
              var payment = payment.GetPayment( orderId,  paymentId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.PaymentResource.GetAvailablePaymentActions(System.String,System.String)">
            <summary>
            Retrieves the list of all available payment actions dependent on the order payment status by specifying the order ID.
            </summary>
            <param name="orderId">Unique identifier of the order associated with the payment.</param>
            <param name="paymentId">Unique identifer of the payment for which to retrieve available actions.</param>
            <returns>
            List{string}
            </returns>
            <example>
            <code>
              var payment = new Payment();
              var string = payment.GetAvailablePaymentActions( orderId,  paymentId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.PaymentResource.PerformPaymentAction(System.String,System.String,Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentAction)">
            <summary>
            Performs the specified action for an individual order payment transaction.
            </summary>
            <param name="orderId">Unique identifier of the order associated with the payment.</param>
            <param name="paymentId">Unique identifer of the payment for which to perform the action.</param>
            <param name="action">The action to perform for the payment. Possible values are AuthAndCapture, AuthorizePayment, CapturePayment, VoidPayment, CreditPayment, RequestCheck, ApplyCheck, DeclineCheck.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var payment = new Payment();
              var order = payment.PerformPaymentAction( orderId,  paymentId,  action);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.PaymentResource.CreatePaymentAction(System.String,Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentAction)">
            <summary>
            Creates a new payment transaction for the specified order and performs the specified action.
            </summary>
            <param name="orderId">Unique identifier of the order for which to apply the payment.</param>
            <param name="action">To action to perform for the newly created payment. Possible values are AuthAndCapture, AuthorizePayment, CapturePayment, VoidPayment, CreditPayment, RequestCheck, ApplyCheck, DeclineCheck.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var payment = new Payment();
              var order = payment.CreatePaymentAction( orderId,  action);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Orders.ShipmentResource">
            <summary>
            Use the shipments resource to manage shipments of collections of packages for an order.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Orders.ShipmentResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.ShipmentResource.GetAvailableShipmentActions(System.String,System.String)">
            <summary>
            Retrieves the shipment actions available for the specified order and package.
            </summary>
            <param name="orderId">Unique identifier of the order for which to get a list of available actions.</param>
            <param name="packageId">Unique identifier for the physical package associated with the order for which to get a list of available actions.</param>
            <returns>
            List{string}
            </returns>
            <example>
            <code>
              var shipment = new Shipment();
              var string = shipment.GetAvailableShipmentActions( orderId,  packageId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.ShipmentResource.GetShipment(System.String,System.String)">
            <summary>
            Retrieves the details of the order shipment specified in the request.
            </summary>
            <param name="orderId">Unique identifier of the order associated with the shipment to retrieve.</param>
            <param name="shipmentId">Unique identifier of the shipment to retrieve.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Shipping.Shipment"/>
            </returns>
            <example>
            <code>
              var shipment = new Shipment();
              var shipment = shipment.GetShipment( orderId,  shipmentId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.ShipmentResource.GetAvailableShipmentMethods(System.String)">
            <summary>
            Retrieves the available shipping methods applicable to the order. Typically used to display available shipping method options on the checkout page.
            </summary>
            <param name="orderId">Unique identifier of the order for the available shipment methods being retrieved.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Shipping.ShippingRate"/>}
            </returns>
            <example>
            <code>
              var shipment = new Shipment();
              var shippingRate = shipment.GetAvailableShipmentMethods( orderId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.ShipmentResource.CreatePackageShipments(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Creates a shipment from one or more package associated with an order and assign a label and tracking number to an order shipment.
            </summary>
            <param name="orderId">Unique identifier of the order for this shipment.</param>
            <param name="packageIds">List of unique identifiers for each package associated with this shipment. Not all packages must belong to the same shipment.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Shipping.Package"/>}
            </returns>
            <example>
            <code>
              var shipment = new Shipment();
              var package = shipment.CreatePackageShipments( orderId,  packageIds);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.ShipmentResource.PerformShipmentAction(System.String,Mozu.Api.Contracts.CommerceRuntime.Shipping.ShipmentAction)">
            <summary>
            Sets the shipment action to "Ship." To ship an order, the order must have a customer name, the "Open" or "OpenAndProcessing" status, full shipping address, and shipping method. Shipping all packages associated with shipments for an order will complete a paid order.
            </summary>
            <param name="orderId">Unique identifier of the order associated with the shipment for which to perform the action.</param>
            <param name="action">The action to perform for the order shipment.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var shipment = new Shipment();
              var order = shipment.PerformShipmentAction( orderId,  action);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.ShipmentResource.DeleteShipment(System.String,System.String)">
            <summary>
            Cancels a shipment.
            </summary>
            <param name="orderId">Unique identifier of the order to cancel shipment.</param>
            <param name="shipmentId">Unique identifier of the shipment to cancel.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var shipment = new Shipment();
              shipment.DeleteShipment( orderId,  shipmentId);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Orders.ShippingInfoResource">
            <summary>
            Use this subresource to manage shipping information for orders.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Orders.ShippingInfoResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.ShippingInfoResource.GetShippingInfo(System.String)">
            <summary>
            Retrieve a list of the shipping information for the specified order.
            </summary>
            <param name="orderId">Unique identifier of the order associated with the shipping information to retrieve.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Shipping.ShippingInfo"/>
            </returns>
            <example>
            <code>
              var shippinginfo = new ShippingInfo();
              var shippingInfo = shippinginfo.GetShippingInfo( orderId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.ShippingInfoResource.GetShippingInfo(System.Nullable{System.Boolean},System.String)">
            <summary>
            Retrieve a list of the shipping information for the specified order.
            </summary>
            <param name="draft">If true, retrieve the draft version of the order's shipping information, which might include uncommitted changes.</param>
            <param name="orderId">Unique identifier of the order associated with the shipping information to retrieve.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Shipping.ShippingInfo"/>
            </returns>
            <example>
            <code>
              var shippinginfo = new ShippingInfo();
              var shippingInfo = shippinginfo.GetShippingInfo( draft,  orderId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.ShippingInfoResource.SetShippingInfo(System.String,Mozu.Api.Contracts.CommerceRuntime.Shipping.ShippingInfo)">
            <summary>
            Updates one or more propertes of shipping information for the specified order.
            </summary>
            <param name="orderId">Unique identifier of the order associated with the shipping information to update.</param>
            <param name="shippingInfo">Container for the shipping information associated with an order.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Shipping.ShippingInfo"/>
            </returns>
            <example>
            <code>
              var shippinginfo = new ShippingInfo();
              var shippingInfo = shippinginfo.SetShippingInfo( orderId,  shippingInfo);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.ShippingInfoResource.SetShippingInfo(System.String,System.String,System.String,Mozu.Api.Contracts.CommerceRuntime.Shipping.ShippingInfo)">
            <summary>
            Updates one or more propertes of shipping information for the specified order.
            </summary>
            <param name="orderId">Unique identifier of the order associated with the shipping information to update.</param>
            <param name="updateMode">Specifies whether to set the shipping information by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal", "ApplyToDraft", or "ApplyAndCommit".</param>
            <param name="version">If applicable, the version of the order or draft for which to set the shipping information.</param>
            <param name="shippingInfo">Container for the shipping information associated with an order.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Shipping.ShippingInfo"/>
            </returns>
            <example>
            <code>
              var shippinginfo = new ShippingInfo();
              var shippingInfo = shippinginfo.SetShippingInfo( orderId,  updateMode,  version,  shippingInfo);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.ReturnResource">
            <summary>
            Use the returns subresource to manage returned items for a completed order. Returns can include any number of items associated with the original order.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.ReturnResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ReturnResource.GetReturns">
            <summary>
            Retrieves a list of all returns according to any filter and sort criteria.
            </summary>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnCollection"/>
            </returns>
            <example>
            <code>
              var return = new Return();
              var returnCollection = return.GetReturns();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ReturnResource.GetReturns(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Retrieves a list of all returns according to any filter and sort criteria.
            </summary>
            <param name="filter"></param>
            <param name="pageSize"></param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnCollection"/>
            </returns>
            <example>
            <code>
              var return = new Return();
              var returnCollection = return.GetReturns( filter,  pageSize,  sortBy,  startIndex);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ReturnResource.GetReturn(System.String)">
            <summary>
            Retrieves a list of properties for the specified return.
            </summary>
            <param name="returnId">Returns the properties of the return specified in the request as well as system-supplied information.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Returns.Return"/>
            </returns>
            <example>
            <code>
              var return = new Return();
              var return = return.GetReturn( returnId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ReturnResource.GetAvailableReturnActions(System.String)">
            <summary>
            Retrieves a list of the actions available to perform for the specified return based on its current state.
            </summary>
            <param name="returnId">Retrieves a list of the actions available to perform for the specified return based on its current state.</param>
            <returns>
            List{string}
            </returns>
            <example>
            <code>
              var return = new Return();
              var string = return.GetAvailableReturnActions( returnId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ReturnResource.GetPayments(System.String)">
            <summary>
            Retrieves a list of all payments submitted as part of a refund associated with a customer return.
            </summary>
            <param name="returnId">Returns the details of the refund payment associated with the return specified in the request.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentCollection"/>
            </returns>
            <example>
            <code>
              var return = new Return();
              var paymentCollection = return.GetPayments( returnId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ReturnResource.GetPayment(System.String,System.String)">
            <summary>
            Retrieves the details of a payment submitted as part of a refund associated with a customer return.
            </summary>
            <param name="paymentId">Unique identifier of the return payment to retrieve.</param>
            <param name="returnId">Unique identifier of the return associated with the payment.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Payments.Payment"/>
            </returns>
            <example>
            <code>
              var return = new Return();
              var payment = return.GetPayment( paymentId,  returnId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ReturnResource.GetAvailablePaymentActionsForReturn(System.String,System.String)">
            <summary>
            Retrieves a list of the payment actions available to perform for the specified return when a return results in a refund to the customer.
            </summary>
            <param name="paymentId">Unique identifier of the payment for which to perform the action.</param>
            <param name="returnId">Unique identifier of the return associated with the payment.</param>
            <returns>
            List{string}
            </returns>
            <example>
            <code>
              var return = new Return();
              var string = return.GetAvailablePaymentActionsForReturn( paymentId,  returnId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ReturnResource.CreateReturn(Mozu.Api.Contracts.CommerceRuntime.Returns.Return)">
            <summary>
            Creates a return for items previously shipped in a completed order.
            </summary>
            <param name="ret">Wrapper for the properties of the return to create.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Returns.Return"/>
            </returns>
            <example>
            <code>
              var return = new Return();
              var return = return.CreateReturn( ret);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ReturnResource.PerformPaymentActionForReturn(System.String,System.String,Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentAction)">
            <summary>
            Updates a refund payment associated with a customer return by performing the specified action.
            </summary>
            <param name="paymentId">Unique identifier of the return payment to update.</param>
            <param name="returnId">Unique identifier of the return associated with the refund payment.</param>
            <param name="action">The payment action to perform for the refund payment.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Returns.Return"/>
            </returns>
            <example>
            <code>
              var return = new Return();
              var return = return.PerformPaymentActionForReturn( paymentId,  returnId,  action);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ReturnResource.CreatePaymentActionForReturn(System.String,Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentAction)">
            <summary>
            Creates a new payment for a return that results in a refund to the customer.
            </summary>
            <param name="returnId">Unique identifier of the return associated with the payment action.</param>
            <param name="action">The payment action to perform for the customer return.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Returns.Return"/>
            </returns>
            <example>
            <code>
              var return = new Return();
              var return = return.CreatePaymentActionForReturn( returnId,  action);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ReturnResource.PerformReturnActions(Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnAction)">
            <summary>
            Updates the return by performing the specified action.
            </summary>
            <param name="action">The name of the return action to perform, such as "Refund" or "Replace".</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnCollection"/>
            </returns>
            <example>
            <code>
              var return = new Return();
              var returnCollection = return.PerformReturnActions( action);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ReturnResource.UpdateReturn(System.String,Mozu.Api.Contracts.CommerceRuntime.Returns.Return)">
            <summary>
            Updates one or more properties of a return for items previously shipped in a completed order.
            </summary>
            <param name="returnId">Unique identifier of the return.</param>
            <param name="ret">Wrapper for the array of properties to update for the return.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Returns.Return"/>
            </returns>
            <example>
            <code>
              var return = new Return();
              var return = return.UpdateReturn( returnId,  ret);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ReturnResource.DeleteReturn(System.String)">
            <summary>
            Deletes a return previously configured for the specified order.
            </summary>
            <param name="returnId">Unique identifier of the return to delete from the order.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var return = new Return();
              return.DeleteReturn( returnId);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Returns.PackageResource">
            <summary>
            Use the return packages subresource to manage packages used to ship return replacement items.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Returns.PackageResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Returns.PackageResource.GetPackage(System.String,System.String)">
            <summary>
            Retrieves the details of a package of return replacement items.
            </summary>
            <param name="packageId">Unique identifier of the return replacement package to retrieve.</param>
            <param name="returnId">Unique identifier of the return associated with the replacement package to retrieve.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Shipping.Package"/>
            </returns>
            <example>
            <code>
              var package = new Package();
              var package = package.GetPackage( packageId,  returnId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Returns.PackageResource.GetPackageLabel(System.String,System.String)">
            <summary>
            Retrieves the package label image supplied by the carrier for a return replacement.
            </summary>
            <param name="packageId">Unique identifier of the return replacement package for which to retrieve the label.</param>
            <param name="returnId">Unique identifier of the return associated with the replacement package label to retrieve.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var package = new Package();
              package.GetPackageLabel( packageId,  returnId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Returns.PackageResource.CreatePackage(System.String,Mozu.Api.Contracts.CommerceRuntime.Shipping.Package)">
            <summary>
            Creates a new physical package of return replacement items.
            </summary>
            <param name="returnId">Unique identifier of the return for which to create a replacement package.</param>
            <param name="package">Properties of the physical package for a return replacement.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Shipping.Package"/>
            </returns>
            <example>
            <code>
              var package = new Package();
              var package = package.CreatePackage( returnId,  pkg);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Returns.PackageResource.UpdatePackage(System.String,System.String,Mozu.Api.Contracts.CommerceRuntime.Shipping.Package)">
            <summary>
            Updates one or more properties of a package associated with a return replacement.
            </summary>
            <param name="packageId">Unique identifier of the return replacement package to update.</param>
            <param name="returnId">Unique identifier of the return associated with the replacement package to update.</param>
            <param name="package">Properties of the return replacement package to update.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Shipping.Package"/>
            </returns>
            <example>
            <code>
              var package = new Package();
              var package = package.UpdatePackage( packageId,  returnId,  pkg);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Returns.PackageResource.DeletePackage(System.String,System.String)">
            <summary>
            Deletes a package associated with a return replacement.
            </summary>
            <param name="packageId">Unique identifier of the return replacement package to delete.</param>
            <param name="returnId">Unique identifier of the return associated with the replacement package to delete.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var package = new Package();
              package.DeletePackage( packageId,  returnId);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Returns.ShipmentResource">
            <summary>
            Use the return shipments subresource to manage shipments for a return replacement.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Returns.ShipmentResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Returns.ShipmentResource.GetShipment(System.String,System.String)">
            <summary>
            Retrieves the details of the specified return replacement shipment.
            </summary>
            <param name="returnId">Unique identifier of the return associated with the replacement shipment to retrieve.</param>
            <param name="shipmentId">Unique identifier of the return replacement shipment to retrieve.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Shipping.Shipment"/>
            </returns>
            <example>
            <code>
              var shipment = new Shipment();
              var shipment = shipment.GetShipment( returnId,  shipmentId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Returns.ShipmentResource.CreatePackageShipments(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Creates a shipment from one or more packages associated with a return replacement.
            </summary>
            <param name="returnId">Unique identifier of the return for which to create replacement package shipments.</param>
            <param name="packageIds">List of packages in the return replacement shipment.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Shipping.Package"/>}
            </returns>
            <example>
            <code>
              var shipment = new Shipment();
              var package = shipment.CreatePackageShipments( returnId,  packageIds);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Returns.ShipmentResource.DeleteShipment(System.String,System.String)">
            <summary>
            Deletes a shipment for a return replacement.
            </summary>
            <param name="returnId">Unique identifier of the return associated with the replacement shipment to delete.</param>
            <param name="shipmentId">Unique identifier of the return replacement shipment to delete.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var shipment = new Shipment();
              shipment.DeleteShipment( returnId,  shipmentId);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Settings.ApplicationResource">
            <summary>
            Use the applications subresource to update site settings for installed applications.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Settings.ApplicationResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Settings.ApplicationResource.ThirdPartyUpdateApplication(Mozu.Api.Contracts.SiteSettings.Application.Application)">
            <summary>
            Initializes an application with the necessary configured settings.
            </summary>
            <param name="application">Properties of the application to update.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.SiteSettings.Application.Application"/>
            </returns>
            <example>
            <code>
              var application = new Application();
              var application = application.ThirdPartyUpdateApplication( application);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Settings.CheckoutSettingsResource">
            <summary>
            Specify sitewide settings to determine how checkout and order processing behaves. This service includes payment settings, customer checkout settings, and order processing settings.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Settings.CheckoutSettingsResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Settings.CheckoutSettingsResource.GetCheckoutSettings">
            <summary>
            Retrieves all checkout settings defined for the site including payment settings (payment gateway ID and credentials), shopper checkout settings (login requirement or guest mode and custom attributes), and order processing settings (when payment is authorized and captured plus any custom attributes).
            </summary>
            <returns>
            <see cref="T:Mozu.Api.Contracts.SiteSettings.Order.CheckoutSettings"/>
            </returns>
            <example>
            <code>
              var checkoutsettings = new CheckoutSettings();
              var checkoutSettings = checkoutsettings.GetCheckoutSettings();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Settings.Checkout.CustomerCheckoutSettingsResource">
            <summary>
            Settings for the checkout login. Choose whether or not shoppers must first login before a purchase can be processed. Choose the option for guests to purchase without logging in, prompt guests to login, or require them to login before a purchase can be completed.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Settings.Checkout.CustomerCheckoutSettingsResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Settings.Checkout.CustomerCheckoutSettingsResource.GetCustomerCheckoutSettings">
            <summary>
            Retrieves all checkout settings defined for the site: Payment settings, such as the payment gateway ID and credentials, supported credit cards, and more; Customer Checkout settings, such as whether login is required, and any custom attributes; and Order Processing settings, such as when payment is authorized and captured, and any custom attributes.
            </summary>
            <returns>
            <see cref="T:Mozu.Api.Contracts.SiteSettings.Order.CustomerCheckoutSettings"/>
            </returns>
            <example>
            <code>
              var customercheckoutsettings = new CustomerCheckoutSettings();
              var customerCheckoutSettings = customercheckoutsettings.GetCustomerCheckoutSettings();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Settings.Checkout.CustomerCheckoutSettingsResource.UpdateCustomerCheckoutSettings(Mozu.Api.Contracts.SiteSettings.Order.CustomerCheckoutSettings)">
            <summary>
            Modifies existing site checkout settings. Modify Payment, Customer Checkout, and Order Processing settings in one PUT.
            </summary>
            <param name="customerCheckoutSettings">All the properties to update in the checkout settings.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.SiteSettings.Order.CustomerCheckoutSettings"/>
            </returns>
            <example>
            <code>
              var customercheckoutsettings = new CustomerCheckoutSettings();
              var customerCheckoutSettings = customercheckoutsettings.UpdateCustomerCheckoutSettings( customerCheckoutSettings);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Settings.Checkout.OrderProcessingSettingsResource">
            <summary>
            Use the order processing settings resource to define how orders and payments are processed for the site.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Settings.Checkout.OrderProcessingSettingsResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Settings.Checkout.OrderProcessingSettingsResource.GetOrderProcessingSettings">
            <summary>
            Retrieves a list of the order processing settings defined for the site.
            </summary>
            <returns>
            <see cref="T:Mozu.Api.Contracts.SiteSettings.Order.OrderProcessingSettings"/>
            </returns>
            <example>
            <code>
              var orderprocessingsettings = new OrderProcessingSettings();
              var orderProcessingSettings = orderprocessingsettings.GetOrderProcessingSettings();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Settings.Checkout.OrderProcessingSettingsResource.UpdateOrderProcessingSettings(Mozu.Api.Contracts.SiteSettings.Order.OrderProcessingSettings)">
            <summary>
            Updates the order processing settings defined for the site.
            </summary>
            <param name="orderProcessingSettings">List of the order processing settings to define for the site.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.SiteSettings.Order.OrderProcessingSettings"/>
            </returns>
            <example>
            <code>
              var orderprocessingsettings = new OrderProcessingSettings();
              var orderProcessingSettings = orderprocessingsettings.UpdateOrderProcessingSettings( orderProcessingSettings);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Settings.Checkout.PaymentSettingsResource">
            <summary>
            Specify settings when creating payments for order checkout on the site.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Settings.Checkout.PaymentSettingsResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Settings.Checkout.PaymentSettingsResource.GetPaymentSettings">
            <summary>
            Retrieves a list of the payment settings for the specified site.
            </summary>
            <returns>
            <see cref="T:Mozu.Api.Contracts.SiteSettings.Order.PaymentSettings"/>
            </returns>
            <example>
            <code>
              var paymentsettings = new PaymentSettings();
              var paymentSettings = paymentsettings.GetPaymentSettings();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Settings.Checkout.PaymentSettingsResource.GetActiveGatewayForCountry(System.String)">
            <summary>
            
            </summary>
            <param name="countryCode"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.SiteSettings.Order.Gateway"/>
            </returns>
            <example>
            <code>
              var paymentsettings = new PaymentSettings();
              var gateway = paymentsettings.GetActiveGatewayForCountry( countryCode);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Settings.Checkout.PaymentSettingsResource.GetGatewayDefinitions">
            <summary>
            
            </summary>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.PaymentService.GatewayDefinition"/>}
            </returns>
            <example>
            <code>
              var paymentsettings = new PaymentSettings();
              var gatewayDefinition = paymentsettings.GetGatewayDefinitions();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Settings.Checkout.PaymentSettingsResource.GetGateway(System.String)">
            <summary>
            
            </summary>
            <param name="gatewayId"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.SiteSettings.Order.Gateway"/>
            </returns>
            <example>
            <code>
              var paymentsettings = new PaymentSettings();
              var gateway = paymentsettings.GetGateway( gatewayId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Settings.Checkout.PaymentSettingsResource.CreateGateway(Mozu.Api.Contracts.SiteSettings.Order.Gateway)">
            <summary>
            
            </summary>
            <param name="gateway"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.SiteSettings.Order.Gateway"/>
            </returns>
            <example>
            <code>
              var paymentsettings = new PaymentSettings();
              var gateway = paymentsettings.CreateGateway( gateway);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Settings.Checkout.PaymentSettingsResource.UpdatePaymentSettings(Mozu.Api.Contracts.SiteSettings.Order.PaymentSettings)">
            <summary>
            Updates one or more properties in the configured payment settings for a site.
            </summary>
            <param name="paymentSettings">Properties of the payment settings to use for the site.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.SiteSettings.Order.PaymentSettings"/>
            </returns>
            <example>
            <code>
              var paymentsettings = new PaymentSettings();
              var paymentSettings = paymentsettings.UpdatePaymentSettings( paymentSettings);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Settings.Checkout.PaymentSettingsResource.UpdateGateway(System.String,Mozu.Api.Contracts.SiteSettings.Order.Gateway)">
            <summary>
            
            </summary>
            <param name="gatewayId"></param>
            <param name="gateway"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.SiteSettings.Order.Gateway"/>
            </returns>
            <example>
            <code>
              var paymentsettings = new PaymentSettings();
              var gateway = paymentsettings.UpdateGateway( gatewayId,  gateway);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Settings.GeneralSettingsResource">
            <summary>
            Define global site settings such as the site name, shipping and email addresses, and logo images. Block undesirable IP addresses using this resource.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Settings.GeneralSettingsResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Settings.GeneralSettingsResource.GetGeneralSettings">
            <summary>
            Retrieve a site's general global settings.
            </summary>
            <returns>
            <see cref="T:Mozu.Api.Contracts.SiteSettings.General.GeneralSettings"/>
            </returns>
            <example>
            <code>
              var generalsettings = new GeneralSettings();
              var generalSettings = generalsettings.GetGeneralSettings();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Settings.GeneralSettingsResource.UpdateGeneralSettings(Mozu.Api.Contracts.SiteSettings.General.GeneralSettings)">
            <summary>
            Updates a site's general global settings.
            </summary>
            <param name="generalSettings">The properties of the site's general settings to update.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.SiteSettings.General.GeneralSettings"/>
            </returns>
            <example>
            <code>
              var generalsettings = new GeneralSettings();
              var generalSettings = generalsettings.UpdateGeneralSettings( generalSettings);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Settings.General.IPBlockResource">
            <summary>
            General site setting subresource to define global settings for the site such as website name, shipping and email addresses, and logo images. Also, block undesirable IP addresses using this resource.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Settings.General.IPBlockResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Settings.General.IPBlockResource.GetIPBlocks">
            <summary>
            Retrieves a list of IP blocks.
            </summary>
            <returns>
            <see cref="T:Mozu.Api.Contracts.SiteSettings.General.IPBlockCollection"/>
            </returns>
            <example>
            <code>
              var ipblock = new IPBlock();
              var iPBlockCollection = ipblock.GetIPBlocks();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Settings.General.IPBlockResource.GetIPBlock(System.Int32)">
            <summary>
            Retrieve the details of a single IP block by providing the IP block ID.
            </summary>
            <param name="ipBlockId">Unique identifier of the IP block.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.SiteSettings.General.IPBlock"/>
            </returns>
            <example>
            <code>
              var ipblock = new IPBlock();
              var iPBlock = ipblock.GetIPBlock( ipBlockId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Settings.General.IPBlockResource.CreateIPBlock(Mozu.Api.Contracts.SiteSettings.General.IPBlock)">
            <summary>
            Create a new IP block to deny server access. Prevents undesirable connections such as brute force attacks. Block access to the storefront, admin area, or both.
            </summary>
            <param name="ipBlock">Properties of the IP block.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.SiteSettings.General.IPBlock"/>
            </returns>
            <example>
            <code>
              var ipblock = new IPBlock();
              var iPBlock = ipblock.CreateIPBlock( ipBlock);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Settings.General.IPBlockResource.UpdateIPBlock(System.Int32,Mozu.Api.Contracts.SiteSettings.General.IPBlock)">
            <summary>
            Modifies an IP block.
            </summary>
            <param name="ipBlockId">Identifier of the IP block.</param>
            <param name="ipBlock">Properties of the IP block.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.SiteSettings.General.IPBlock"/>
            </returns>
            <example>
            <code>
              var ipblock = new IPBlock();
              var iPBlock = ipblock.UpdateIPBlock( ipBlockId,  ipBlock);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Settings.General.IPBlockResource.DeleteIPBlock(System.Int32)">
            <summary>
            Delete the IP block specified by the IP block ID.
            </summary>
            <param name="ipBlockId">Unique identifier of the IP block.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var ipblock = new IPBlock();
              ipblock.DeleteIPBlock( ipBlockId);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Settings.General.TaxableTerritoryResource">
            <summary>
            Use the taxable territories subresource to manage the regional territories for this site that are subejct to sales tax.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Settings.General.TaxableTerritoryResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Settings.General.TaxableTerritoryResource.GetTaxableTerritories">
            <summary>
            Retrieves a list of the taxable territories configured for the site.
            </summary>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.SiteSettings.General.TaxableTerritory"/>}
            </returns>
            <example>
            <code>
              var taxableterritory = new TaxableTerritory();
              var taxableTerritory = taxableterritory.GetTaxableTerritories();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Settings.General.TaxableTerritoryResource.AddTaxableTerritory(Mozu.Api.Contracts.SiteSettings.General.TaxableTerritory)">
            <summary>
            Creates a new territory for which to calculate sales tax.
            </summary>
            <param name="taxableTerritory">Properties of the taxable territory to create.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.SiteSettings.General.TaxableTerritory"/>
            </returns>
            <example>
            <code>
              var taxableterritory = new TaxableTerritory();
              var taxableTerritory = taxableterritory.AddTaxableTerritory( taxableTerritory);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Settings.General.TaxableTerritoryResource.UpdateTaxableTerritories(System.Collections.Generic.List{Mozu.Api.Contracts.SiteSettings.General.TaxableTerritory})">
            <summary>
            Updates one or more taxable territories configured for a site.
            </summary>
            <param name="taxableterritories">Properties of the taxable territories to update.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.SiteSettings.General.TaxableTerritory"/>}
            </returns>
            <example>
            <code>
              var taxableterritory = new TaxableTerritory();
              var taxableTerritory = taxableterritory.UpdateTaxableTerritories( taxableterritories);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Settings.Shipping.ContactResource">
            <summary>
            Use this subresource to manage the physical address from which shipments for this site will originate.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Settings.Shipping.ContactResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Settings.Shipping.ContactResource.GetShippingOriginAddress">
            <summary>
            Retrieves the physical address from which shipments originate from the site's shipping settings.
            </summary>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Core.Contact"/>
            </returns>
            <example>
            <code>
              var contact = new Contact();
              var contact = contact.GetShippingOriginAddress();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Settings.Shipping.ContactResource.CreateShippingOriginAddress(Mozu.Api.Contracts.Core.Contact)">
            <summary>
            Creates the site's shipping origin address as it appears in shipping settings.
            </summary>
            <param name="siteShippingOriginAddress">New shipping origin address to create. Required properties: SiteShippingOriginAddress.Sender Name, .Address1, .CityOrTown, .StateOrProvince, .PostalOrZipCode, .Country.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Core.Contact"/>
            </returns>
            <example>
            <code>
              var contact = new Contact();
              var contact = contact.CreateShippingOriginAddress( siteShippingOriginAddress);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Settings.Shipping.ContactResource.UpdateShippingOriginAddress(Mozu.Api.Contracts.Core.Contact)">
            <summary>
            Updates the site's shipping origin address as it appears in shipping settings.
            </summary>
            <param name="siteShippingOriginAddress">Properties of the site's shipping origin address. Required properties: SiteShippingOriginAddress.Sender Name, .Address1, .CityOrTown, .StateOrProvince, .PostalOrZipCode, .Country.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Core.Contact"/>
            </returns>
            <example>
            <code>
              var contact = new Contact();
              var contact = contact.UpdateShippingOriginAddress( siteShippingOriginAddress);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Settings.Shipping.FeatureResource">
            <summary>
            Use the active rate providers subresource to manage entities that provide estimated shipping rate calculations. Active rate providers represent carrier configurations set up in the shipping admin service.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Settings.Shipping.FeatureResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Settings.Shipping.FeatureResource.GetActiveRateProviders">
            <summary>
            Retrieves a list of the active rate providers configured for the site.
            </summary>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.Core.Feature"/>}
            </returns>
            <example>
            <code>
              var feature = new Feature();
              var feature = feature.GetActiveRateProviders();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Settings.Shipping.FeatureResource.AddActiveRateProvider(Mozu.Api.Contracts.Core.Feature)">
            <summary>
            Creates a new active rate provider for the site.
            </summary>
            <param name="activeRateProvider">Properties of the active rate provider to create.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Core.Feature"/>
            </returns>
            <example>
            <code>
              var feature = new Feature();
              var feature = feature.AddActiveRateProvider( activeRateProvider);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Settings.Shipping.FeatureResource.UpdateActiveRateProviders(System.Collections.Generic.List{Mozu.Api.Contracts.Core.Feature})">
            <summary>
            Updates the active rate providers configured for the site.
            </summary>
            <param name="activeRateProviders">Properties of the active rate provider to update.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.Core.Feature"/>}
            </returns>
            <example>
            <code>
              var feature = new Feature();
              var feature = feature.UpdateActiveRateProviders( activeRateProviders);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Settings.Shipping.SiteShippingHandlingFeeResource">
            <summary>
            Use the Order Handling Fee subresource to configure any shipping and handling fees to apply to orders for this site.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Settings.Shipping.SiteShippingHandlingFeeResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Settings.Shipping.SiteShippingHandlingFeeResource.GetOrderHandlingFee">
            <summary>
            Retrieves the details of the order handling fee configured for the site.
            </summary>
            <returns>
            <see cref="T:Mozu.Api.Contracts.SiteSettings.Shipping.SiteShippingHandlingFee"/>
            </returns>
            <example>
            <code>
              var siteshippinghandlingfee = new SiteShippingHandlingFee();
              var siteShippingHandlingFee = siteshippinghandlingfee.GetOrderHandlingFee();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Settings.Shipping.SiteShippingHandlingFeeResource.CreateOrderHandlingFee(Mozu.Api.Contracts.SiteSettings.Shipping.SiteShippingHandlingFee)">
            <summary>
            Creates a new order handling fee for the site.
            </summary>
            <param name="orderHandlingFee">Properties of the order handling fee to assess for order shipment.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.SiteSettings.Shipping.SiteShippingHandlingFee"/>
            </returns>
            <example>
            <code>
              var siteshippinghandlingfee = new SiteShippingHandlingFee();
              var siteShippingHandlingFee = siteshippinghandlingfee.CreateOrderHandlingFee( orderHandlingFee);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Settings.Shipping.SiteShippingHandlingFeeResource.UpdateOrderHandlingFee(Mozu.Api.Contracts.SiteSettings.Shipping.SiteShippingHandlingFee)">
            <summary>
            Updates the order handling fee amount for the site.
            </summary>
            <param name="orderHandlingFee">The combined price for all items in the order, including all selected options but excluding any discounts.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.SiteSettings.Shipping.SiteShippingHandlingFee"/>
            </returns>
            <example>
            <code>
              var siteshippinghandlingfee = new SiteShippingHandlingFee();
              var siteShippingHandlingFee = siteshippinghandlingfee.UpdateOrderHandlingFee( orderHandlingFee);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Settings.Shipping.SiteShippingRegionResource">
            <summary>
            Use the site shipping regions subresource to manage the territories to which the site will ship products. Currently, only domestic shipping is supported.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Settings.Shipping.SiteShippingRegionResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Settings.Shipping.SiteShippingRegionResource.GetShippingRegions">
            <summary>
            Retrieves a list of the shipping regions configured for the site.
            </summary>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.SiteSettings.Shipping.SiteShippingRegion"/>}
            </returns>
            <example>
            <code>
              var siteshippingregion = new SiteShippingRegion();
              var siteShippingRegion = siteshippingregion.GetShippingRegions();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Settings.Shipping.SiteShippingRegionResource.UpdateShippingRegions(System.Collections.Generic.List{Mozu.Api.Contracts.SiteSettings.Shipping.SiteShippingRegion})">
            <summary>
            Updates the shipping regions configured for a site.
            </summary>
            <param name="siteShippingRegions">Properties of the shipping region configured for this site.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.SiteSettings.Shipping.SiteShippingRegion"/>}
            </returns>
            <example>
            <code>
              var siteshippingregion = new SiteShippingRegion();
              var siteShippingRegion = siteshippingregion.UpdateShippingRegions( siteShippingRegions);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Settings.Shipping.SiteShippingRegionResource.DeleteShippingRegions">
            <summary>
            Deletes the shipping regions configured for this site.
            </summary>
            <returns>
            
            </returns>
            <example>
            <code>
              var siteshippingregion = new SiteShippingRegion();
              siteshippingregion.DeleteShippingRegions();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Settings.SiteShippingSettingsResource">
            <summary>
            Use the shipping subresource to manage settings for the site shipping information, such as origin address information, carrier shipping methods, shipping rate providers, and regions available for shipping.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Settings.SiteShippingSettingsResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Settings.SiteShippingSettingsResource.GetSiteShippingSettings">
            <summary>
            Retrieves a list of the shipping settings configured for a site.
            </summary>
            <returns>
            <see cref="T:Mozu.Api.Contracts.SiteSettings.Shipping.SiteShippingSettings"/>
            </returns>
            <example>
            <code>
              var siteshippingsettings = new SiteShippingSettings();
              var siteShippingSettings = siteshippingsettings.GetSiteShippingSettings();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Content.DocumentDraftSummaryResource">
            <summary>
            Use the document publishing subresource to manage and publish document drafts in the Content service.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Content.DocumentDraftSummaryResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Content.DocumentDraftSummaryResource.ListDocumentDraftSummaries">
            <summary>
            Retrieves a list of the documents currently in draft state, according to any defined filter and sort criteria.
            </summary>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.DocumentDraftSummaryPagedCollection"/>
            </returns>
            <example>
            <code>
              var documentdraftsummary = new DocumentDraftSummary();
              var documentDraftSummaryPagedCollection = documentdraftsummary.ListDocumentDraftSummaries();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.DocumentDraftSummaryResource.ListDocumentDraftSummaries(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Retrieves a list of the documents currently in draft state, according to any defined filter and sort criteria.
            </summary>
            <param name="documentLists">Lists that contain the document drafts.</param>
            <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="startIndex">Indicates the zero-based offset in the complete result set where the returned entities begin, when creating paged results from a query. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.DocumentDraftSummaryPagedCollection"/>
            </returns>
            <example>
            <code>
              var documentdraftsummary = new DocumentDraftSummary();
              var documentDraftSummaryPagedCollection = documentdraftsummary.ListDocumentDraftSummaries( documentLists,  pageSize,  startIndex);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.DocumentDraftSummaryResource.PublishDocuments(System.Collections.Generic.List{System.String})">
            <summary>
            Publish one or more document drafts to live content on the site.
            </summary>
            <param name="documentIds">List of unique identifiers of the document drafts to publish.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var documentdraftsummary = new DocumentDraftSummary();
              documentdraftsummary.PublishDocuments( documentIds);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.DocumentDraftSummaryResource.PublishDocuments(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Publish one or more document drafts to live content on the site.
            </summary>
            <param name="documentLists">List of document lists that contain documents to publish.</param>
            <param name="documentIds">List of unique identifiers of the document drafts to publish.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var documentdraftsummary = new DocumentDraftSummary();
              documentdraftsummary.PublishDocuments( documentLists,  documentIds);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.DocumentDraftSummaryResource.DeleteDocumentDrafts(System.String)">
            <summary>
            Deletes the drafts of the specified documents. Published documents cannot be deleted.
            </summary>
            <param name="documentIds">Unique identifiers of the documents to delete.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var documentdraftsummary = new DocumentDraftSummary();
              documentdraftsummary.DeleteDocumentDrafts( documentIds);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.DocumentDraftSummaryResource.DeleteDocumentDrafts(System.String,System.String)">
            <summary>
            Deletes the drafts of the specified documents. Published documents cannot be deleted.
            </summary>
            <param name="documentIds">Unique identifiers of the documents to delete.</param>
            <param name="documentLists">List of document lists that contain documents to delete.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var documentdraftsummary = new DocumentDraftSummary();
              documentdraftsummary.DeleteDocumentDrafts( documentIds,  documentLists);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Content.DocumentListResource">
            <summary>
            Use the document lists resource to organize your site's documents into a hierarchy. Document lists can contain documents, folders, and complete hierarchies of folders, which contain documents with unique names.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Content.DocumentListResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Content.DocumentListResource.GetDocumentLists">
            <summary>
            Retrieves a collection of document lists.
            </summary>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.DocumentListCollection"/>
            </returns>
            <example>
            <code>
              var documentlist = new DocumentList();
              var documentListCollection = documentlist.GetDocumentLists();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.DocumentListResource.GetDocumentLists(System.Nullable{System.Int64},System.String,System.Nullable{System.Int64})">
            <summary>
            Retrieves a collection of document lists.
            </summary>
            <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="sort"></param>
            <param name="startIndex"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.DocumentListCollection"/>
            </returns>
            <example>
            <code>
              var documentlist = new DocumentList();
              var documentListCollection = documentlist.GetDocumentLists( pageSize,  sort,  startIndex);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.DocumentListResource.GetDocumentList(System.String)">
            <summary>
            Retrieve the details of a document list by providing the list name.
            </summary>
            <param name="documentListName">The name of the document list.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.DocumentList"/>
            </returns>
            <example>
            <code>
              var documentlist = new DocumentList();
              var documentList = documentlist.GetDocumentList( documentListName);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Content.Documentlists.DocumentResource">
            <summary>
            Use this subresource to manage documents in a document list.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Content.Documentlists.DocumentResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Content.Documentlists.DocumentResource.GetDocumentContent(System.String,System.String)">
            <summary>
            Retrieve the content associated with a document, such as a product image or PDF specifications file, by supplying the document ID.
            </summary>
            <param name="documentId">Unique identifier of the document.</param>
            <param name="documentListName">The name of the document list associated with the document.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var document = new Document();
              document.GetDocumentContent( documentId,  documentListName);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.Documentlists.DocumentResource.GetDocumentContent(System.String,System.String,System.String)">
            <summary>
            Retrieve the content associated with a document, such as a product image or PDF specifications file, by supplying the document ID.
            </summary>
            <param name="documentId">Unique identifier of the document.</param>
            <param name="documentListName">The name of the document list associated with the document.</param>
            <param name="publishState">The current state of the document, which is Active, Draft, or Latest. Active documents are published and cannot be deleted. Querying Latest returns the most recent version of the document, regardless of whether it is published or a draft.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var document = new Document();
              document.GetDocumentContent( documentId,  documentListName,  publishState);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.Documentlists.DocumentResource.GetDocument(System.String,System.String)">
            <summary>
            Retrieves a specific document within the specified document list by providing the document ID.
            </summary>
            <param name="documentId">Identifier of the document being retrieved.</param>
            <param name="documentListName">The name of the document list associated with the document to retrieve.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.Document"/>
            </returns>
            <example>
            <code>
              var document = new Document();
              var document = document.GetDocument( documentId,  documentListName);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.Documentlists.DocumentResource.GetDocument(System.String,System.String,System.String)">
            <summary>
            Retrieves a specific document within the specified document list by providing the document ID.
            </summary>
            <param name="documentId">Identifier of the document being retrieved.</param>
            <param name="documentListName">The name of the document list associated with the document to retrieve.</param>
            <param name="publishState">The current state of the document, which is Active, Draft, or Latest. Active documents are published and cannot be deleted. Querying Latest returns the most recent version of the document, regardless of whether it is published or a draft.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.Document"/>
            </returns>
            <example>
            <code>
              var document = new Document();
              var document = document.GetDocument( documentId,  documentListName,  publishState);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.Documentlists.DocumentResource.GetDocuments(System.String)">
            <summary>
            Retrieves a collection of documents according to any filter and sort criteria.
            </summary>
            <param name="documentListName">The name of the document list.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.DocumentCollection"/>
            </returns>
            <example>
            <code>
              var document = new Document();
              var documentCollection = document.GetDocuments( documentListName);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.Documentlists.DocumentResource.GetDocuments(System.String,System.String,System.Nullable{System.Int64},System.String,System.String,System.Nullable{System.Int64})">
            <summary>
            Retrieves a collection of documents according to any filter and sort criteria.
            </summary>
            <param name="documentListName">The name of the document list.</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. You can filter a document's search results by any of its properties, including its name or folder path. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). <b>For example - "filter=Name+sw+Events"</b></param>
            <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="publishState">The current state of the document, which is Active, Draft, or Latest. Active documents are published and cannot be deleted. Querying Latest returns the most recent version of the document, regardless of whether it is published or a draft.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">Indicates the zero-based offset in the complete result set where the returned entities begin, when creating paged results from a query. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.DocumentCollection"/>
            </returns>
            <example>
            <code>
              var document = new Document();
              var documentCollection = document.GetDocuments( documentListName,  filter,  pageSize,  publishState,  sortBy,  startIndex);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.Documentlists.DocumentResource.CreateDocument(System.String,Mozu.Api.Contracts.Content.Document)">
            <summary>
            Creates a new document in an existing list.
            </summary>
            <param name="documentListName">The descriptive alphanumeric document list name being created.</param>
            <param name="document">The descriptive name of the newly created document.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.Document"/>
            </returns>
            <example>
            <code>
              var document = new Document();
              var document = document.CreateDocument( documentListName,  document);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.Documentlists.DocumentResource.CreateDocument(System.String,System.String,Mozu.Api.Contracts.Content.Document)">
            <summary>
            Creates a new document in an existing list.
            </summary>
            <param name="documentListName">The descriptive alphanumeric document list name being created.</param>
            <param name="publishState">The current state of the document, which is Active, Draft, or Latest. Active documents are published and cannot be deleted. Querying Latest returns the most recent version of the document, regardless of whether it is published or a draft.</param>
            <param name="document">The descriptive name of the newly created document.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.Document"/>
            </returns>
            <example>
            <code>
              var document = new Document();
              var document = document.CreateDocument( documentListName,  publishState,  document);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.Documentlists.DocumentResource.UpdateDocumentContent(System.String,System.String)">
            <summary>
            Updates the content associated with a document, such as a product image or PDF specifications file, by supplying the document ID.
            </summary>
            <param name="documentId">Unique identifier of the document.</param>
            <param name="documentListName">The name of the document list associated with the document.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var document = new Document();
              document.UpdateDocumentContent( documentId,  documentListName);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.Documentlists.DocumentResource.UpdateDocument(System.String,System.String,Mozu.Api.Contracts.Content.Document)">
            <summary>
            Updates a document in a document list.
            </summary>
            <param name="documentId">Unique identifier of the document to update.</param>
            <param name="documentListName">Name of the document list associated with the document.</param>
            <param name="document">Properties of the document to update.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.Document"/>
            </returns>
            <example>
            <code>
              var document = new Document();
              var document = document.UpdateDocument( documentId,  documentListName,  document);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.Documentlists.DocumentResource.UpdateDocument(System.String,System.String,System.String,Mozu.Api.Contracts.Content.Document)">
            <summary>
            Updates a document in a document list.
            </summary>
            <param name="documentId">Unique identifier of the document to update.</param>
            <param name="documentListName">Name of the document list associated with the document.</param>
            <param name="publishState">The current state of the document, which is Active, Draft, or Latest. Active documents are published and cannot be deleted. Querying Latest returns the most recent version of the document, regardless of whether it is published or a draft.</param>
            <param name="document">Properties of the document to update.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.Document"/>
            </returns>
            <example>
            <code>
              var document = new Document();
              var document = document.UpdateDocument( documentId,  documentListName,  publishState,  document);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.Documentlists.DocumentResource.DeleteDocumentContent(System.String,System.String)">
            <summary>
            Deletes the content associated with a document, such as a product image or PDF specification, by supplying the document ID.
            </summary>
            <param name="documentId">Unique identifier of the document.</param>
            <param name="documentListName">The name of the document list associated with the document.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var document = new Document();
              document.DeleteDocumentContent( documentId,  documentListName);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.Documentlists.DocumentResource.DeleteDocument(System.String,System.String)">
            <summary>
            Deletes a specific document based on the specified document ID.
            </summary>
            <param name="documentId">Identifier of the document being deleted.</param>
            <param name="documentListName">The name of the document list associated with the document list being deleted.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var document = new Document();
              document.DeleteDocument( documentId,  documentListName);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.Documentlists.DocumentResource.DeleteDocument(System.String,System.String,System.String)">
            <summary>
            Deletes a specific document based on the specified document ID.
            </summary>
            <param name="documentId">Identifier of the document being deleted.</param>
            <param name="documentListName">The name of the document list associated with the document list being deleted.</param>
            <param name="publishState">The current state of the document, which is Active, Draft, or Latest. Active documents are published and cannot be deleted. Querying Latest returns the most recent version of the document, regardless of whether it is published or a draft.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var document = new Document();
              document.DeleteDocument( documentId,  documentListName,  publishState);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Content.Documentlists.DocumentTreeResource">
            <summary>
            Use the document tree subresource to retrieve documents and manage content within the document hierarchy.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Content.Documentlists.DocumentTreeResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Content.Documentlists.DocumentTreeResource.GetTreeDocumentContent(System.String,System.String)">
            <summary>
            Retrieve the content associated with the document, such as a product image or PDF specifications file.
            </summary>
            <param name="documentListName">The name of the document list associated with the document.</param>
            <param name="documentName">The name of the document, which is unique within its folder.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var documenttree = new DocumentTree();
              documenttree.GetTreeDocumentContent( documentListName,  documentName);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.Documentlists.DocumentTreeResource.GetTreeDocumentContent(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Retrieve the content associated with the document, such as a product image or PDF specifications file.
            </summary>
            <param name="documentListName">The name of the document list associated with the document.</param>
            <param name="documentName">The name of the document, which is unique within its folder.</param>
            <param name="folderId">If applicable, the unique identifier of the folder that contains the document.</param>
            <param name="folderPath">If applicable, the path of the folder hierarchy location associated with the document.</param>
            <param name="publishState">The current state of the document, which is Active, Draft, or Latest. Active documents are published and cannot be deleted. Querying Latest returns the most recent version of the document, regardless of whether it is published or a draft.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var documenttree = new DocumentTree();
              documenttree.GetTreeDocumentContent( documentListName,  documentName,  folderId,  folderPath,  publishState);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.Documentlists.DocumentTreeResource.GetTreeDocument(System.String,System.String)">
            <summary>
            Retrieves a document based on its document list and folder path in the document hierarchy.
            </summary>
            <param name="documentListName">The name of the document list associated with the document.</param>
            <param name="documentName">The name of the document, which is unique within its folder.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.Document"/>
            </returns>
            <example>
            <code>
              var documenttree = new DocumentTree();
              var document = documenttree.GetTreeDocument( documentListName,  documentName);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.Documentlists.DocumentTreeResource.GetTreeDocument(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Retrieves a document based on its document list and folder path in the document hierarchy.
            </summary>
            <param name="documentListName">The name of the document list associated with the document.</param>
            <param name="documentName">The name of the document, which is unique within its folder.</param>
            <param name="folderId">If applicable, the unique identifier of the folder that contains the document.</param>
            <param name="folderPath">If applicable, the path of the folder hierarchy location that contains the document.</param>
            <param name="publishState">The current state of the document, which is Active, Draft, or Latest. Active documents are published and cannot be deleted. Querying Latest returns the most recent version of the document, regardless of whether it is published or a draft.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.Document"/>
            </returns>
            <example>
            <code>
              var documenttree = new DocumentTree();
              var document = documenttree.GetTreeDocument( documentListName,  documentName,  folderId,  folderPath,  publishState);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.Documentlists.DocumentTreeResource.UpdateTreeDocumentContent(System.String,System.String)">
            <summary>
            Updates the content associated with a document, such as a product image or PDF specifications file, based on the document's position in the document hierarchy.
            </summary>
            <param name="documentListName">The name of the document list associated with the document.</param>
            <param name="documentName">The name of the document, which is unique within its folder.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var documenttree = new DocumentTree();
              documenttree.UpdateTreeDocumentContent( documentListName,  documentName);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.Documentlists.DocumentTreeResource.UpdateTreeDocumentContent(System.String,System.String,System.String,System.String)">
            <summary>
            Updates the content associated with a document, such as a product image or PDF specifications file, based on the document's position in the document hierarchy.
            </summary>
            <param name="documentListName">The name of the document list associated with the document.</param>
            <param name="documentName">The name of the document, which is unique within its folder.</param>
            <param name="folderId">If applicable, the unique identifier of the folder that contains the document.</param>
            <param name="folderPath">If applicable, the path of the folder hierarchy location associated with the document.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var documenttree = new DocumentTree();
              documenttree.UpdateTreeDocumentContent( documentListName,  documentName,  folderId,  folderPath);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.Documentlists.DocumentTreeResource.DeleteTreeDocumentContent(System.String,System.String)">
            <summary>
            Deletes the content associated with a document, such as a product image or PDF specifications file.
            </summary>
            <param name="documentListName">The name of the document list associated with the document.</param>
            <param name="documentName">The name of the document, which is unique within its folder.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var documenttree = new DocumentTree();
              documenttree.DeleteTreeDocumentContent( documentListName,  documentName);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.Documentlists.DocumentTreeResource.DeleteTreeDocumentContent(System.String,System.String,System.String,System.String)">
            <summary>
            Deletes the content associated with a document, such as a product image or PDF specifications file.
            </summary>
            <param name="documentListName">The name of the document list associated with the document.</param>
            <param name="documentName">The name of the document, which is unique within its folder.</param>
            <param name="folderId">If applicable, the unique identifier of the folder that contains the document.</param>
            <param name="folderPath">If applicable, the path of the folder hierarchy location associated with the document.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var documenttree = new DocumentTree();
              documenttree.DeleteTreeDocumentContent( documentListName,  documentName,  folderId,  folderPath);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Content.Documentlists.FacetResource">
            <summary>
            Use the facets subresource to allow a merchant to add information for product indexing and searching.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Content.Documentlists.FacetResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Content.Documentlists.FacetResource.GetFacets(System.String,System.String)">
            <summary>
            Retrieves the properties of facets that aid in indexing and searching.
            </summary>
            <param name="documentListName">The document list associated with the facets to retrieve.</param>
            <param name="propertyName">The property name associated with the facets to retrieve.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.Content.Facet"/>}
            </returns>
            <example>
            <code>
              var facet = new Facet();
              var facet = facet.GetFacets( documentListName,  propertyName);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.Documentlists.FacetResource.GetFacets(System.String,System.String,System.String)">
            <summary>
            Retrieves the properties of facets that aid in indexing and searching.
            </summary>
            <param name="documentListName">The document list associated with the facets to retrieve.</param>
            <param name="propertyName">The property name associated with the facets to retrieve.</param>
            <param name="publishState">The current state of the document, which is Active, Draft, or Latest. Active documents are published and cannot be deleted. Querying Latest returns the most recent version of the document, regardless of whether it is published or a draft.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.Content.Facet"/>}
            </returns>
            <example>
            <code>
              var facet = new Facet();
              var facet = facet.GetFacets( documentListName,  propertyName,  publishState);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Content.Documentlists.FolderResource">
            <summary>
            Use the folders subresource to organize content into folders.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Content.Documentlists.FolderResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Content.Documentlists.FolderResource.GetFolder(System.String,System.String)">
            <summary>
            Retrieves the properties of an existing folder.
            </summary>
            <param name="documentListName">The name of the document list associated with the folder to retrieve.</param>
            <param name="folderId">The unique identifier of the folder to retrieve.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.Folder"/>
            </returns>
            <example>
            <code>
              var folder = new Folder();
              var folder = folder.GetFolder( documentListName,  folderId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.Documentlists.FolderResource.GetFolders(System.String,System.String)">
            <summary>
            Retrieve a list of content folders according to any filter and sort criteria.
            </summary>
            <param name="documentListName">The name of the document list that contains this folder.</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.FolderCollection"/>
            </returns>
            <example>
            <code>
              var folder = new Folder();
              var folderCollection = folder.GetFolders( documentListName,  filter);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.Documentlists.FolderResource.GetFolders(System.String,System.String,System.Nullable{System.Int64},System.String,System.Nullable{System.Int64})">
            <summary>
            Retrieve a list of content folders according to any filter and sort criteria.
            </summary>
            <param name="documentListName">The name of the document list that contains this folder.</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="sort">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">Indicates the zero-based offset in the complete result set where the returned entities begin, when creating paged results from a query. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.FolderCollection"/>
            </returns>
            <example>
            <code>
              var folder = new Folder();
              var folderCollection = folder.GetFolders( documentListName,  filter,  pageSize,  sort,  startIndex);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.Documentlists.FolderResource.CreateFolder(System.String,Mozu.Api.Contracts.Content.Folder)">
            <summary>
            Creates a new folder.
            </summary>
            <param name="documentListName">The name of the document list for which to create a new folder.</param>
            <param name="folder">The name of the newly created folder.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.Folder"/>
            </returns>
            <example>
            <code>
              var folder = new Folder();
              var folder = folder.CreateFolder( documentListName,  folder);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.Documentlists.FolderResource.UpdateFolder(System.String,System.String,Mozu.Api.Contracts.Content.Folder)">
            <summary>
            Updates an existing content folder in a document list.
            </summary>
            <param name="documentListName">The name of the document list that contains this folder.</param>
            <param name="folderId">Unique identifier of the folder.</param>
            <param name="folder">Properties of the folder to update.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.Folder"/>
            </returns>
            <example>
            <code>
              var folder = new Folder();
              var folder = folder.UpdateFolder( documentListName,  folderId,  folder);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.Documentlists.FolderResource.DeleteFolder(System.String,System.String)">
            <summary>
            Deletes a folder of documents from the specified document list.
            </summary>
            <param name="documentListName">The name of the document list associated with the folder to delete.</param>
            <param name="folderId">The unique identifier of the folder to delete.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var folder = new Folder();
              folder.DeleteFolder( documentListName,  folderId);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Content.Documentlists.FolderTreeResource">
            <summary>
            Use the folder tree subresource to view individual folders in the document hierarchy.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Content.Documentlists.FolderTreeResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Content.Documentlists.FolderTreeResource.GetFolderTree(System.String)">
            <summary>
            Retrieves the folder hierarchy used to organize documents in lists.
            </summary>
            <param name="documentListName">The name of the document list that contains this folder hierarchy.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.FolderTree"/>
            </returns>
            <example>
            <code>
              var foldertree = new FolderTree();
              var folderTree = foldertree.GetFolderTree( documentListName);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.Documentlists.FolderTreeResource.GetFolderTree(System.String,System.Nullable{System.Int64},System.String,System.String)">
            <summary>
            Retrieves the folder hierarchy used to organize documents in lists.
            </summary>
            <param name="documentListName">The name of the document list that contains this folder hierarchy.</param>
            <param name="levels">The number of levels in the folder hierarchy to return.</param>
            <param name="rootFolderId">The unique identifier of the top-level folder in the document list.</param>
            <param name="rootFolderPath">The location in the document hierarchy of the top-level folder in the document list.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.FolderTree"/>
            </returns>
            <example>
            <code>
              var foldertree = new FolderTree();
              var folderTree = foldertree.GetFolderTree( documentListName,  levels,  rootFolderId,  rootFolderPath);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Content.DocumentTypeResource">
            <summary>
            The DocumentTypes resource is a part of the Content Service.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Content.DocumentTypeResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Content.DocumentTypeResource.List">
            <summary>
            Retrieves a paged list of DocumentTypes.
            </summary>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.DocumentTypeCollection"/>
            </returns>
            <example>
            <code>
              var documenttype = new DocumentType();
              var documentTypeCollection = documenttype.List();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.DocumentTypeResource.List(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Retrieves a paged list of DocumentTypes.
            </summary>
            <param name="pageSize"></param>
            <param name="startIndex"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.DocumentTypeCollection"/>
            </returns>
            <example>
            <code>
              var documenttype = new DocumentType();
              var documentTypeCollection = documenttype.List( pageSize,  startIndex);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.DocumentTypeResource.Get(System.String)">
            <summary>
            Retrieves an existing DocumentType.
            </summary>
            <param name="documentTypeName">The documentType name being retrieved.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.DocumentType"/>
            </returns>
            <example>
            <code>
              var documenttype = new DocumentType();
              var documentType = documenttype.Get( documentTypeName);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Content.PropertyTypeResource">
            <summary>
            Use the property types subresource to manage content properties.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Content.PropertyTypeResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Content.PropertyTypeResource.GetList">
            <summary>
            Retrieves a list of the content property types.
            </summary>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.PropertyTypeCollection"/>
            </returns>
            <example>
            <code>
              var propertytype = new PropertyType();
              var propertyTypeCollection = propertytype.GetList();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.PropertyTypeResource.GetList(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Retrieves a list of the content property types.
            </summary>
            <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="startIndex"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.PropertyTypeCollection"/>
            </returns>
            <example>
            <code>
              var propertytype = new PropertyType();
              var propertyTypeCollection = propertytype.GetList( pageSize,  startIndex);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.PropertyTypeResource.Get(System.String)">
            <summary>
            Retrieves the details of the content property type.
            </summary>
            <param name="propertyTypeName">The name of the content property type.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.PropertyType"/>
            </returns>
            <example>
            <code>
              var propertytype = new PropertyType();
              var propertyType = propertytype.Get( propertyTypeName);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.PropertyTypeResource.PropertyValueTypes">
            <summary>
            Retrieves the value types associated with a content property.
            </summary>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.Content.PropertyValueType"/>}
            </returns>
            <example>
            <code>
              var propertytype = new PropertyType();
              var propertyValueType = propertytype.PropertyValueTypes();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Event.EventNotificationResource">
            <summary>
            Use the events resource to retreive events, which are notifications about a create, read, update, or delete operation.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Event.EventNotificationResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Event.EventNotificationResource.GetEvents">
            <summary>
            Retrieves a list of events.
            </summary>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Event.EventCollection"/>
            </returns>
            <example>
            <code>
              var eventnotification = new EventNotification();
              var eventCollection = eventnotification.GetEvents();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Event.EventNotificationResource.GetEvents(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Retrieves a list of events.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Event.EventCollection"/>
            </returns>
            <example>
            <code>
              var eventnotification = new EventNotification();
              var eventCollection = eventnotification.GetEvents( filter,  pageSize,  sortBy,  startIndex);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Event.EventNotificationResource.GetEvent(System.String)">
            <summary>
            Retrieves an event by providing the event ID.
            </summary>
            <param name="eventId">The unique identifier of the event being retrieved. An event is a notification about a create, read, update, or delete on an order, product, discount or category.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Event.Event"/>
            </returns>
            <example>
            <code>
              var eventnotification = new EventNotification();
              var event = eventnotification.GetEvent( eventId);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Platform.Adminuser.AdminUserResource">
            <summary>
            Displays the user accounts and account details associated with a developer or Mozu tenant administrator. Email addresses uniquely identify admin user accounts.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Platform.Adminuser.AdminUserResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Adminuser.AdminUserResource.GetUser(System.String)">
            <summary>
            Retrieves the details of the specified administrator user account.
            </summary>
            <param name="userId">Unique identifier of the administrator account to retrieve.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Core.User"/>
            </returns>
            <example>
            <code>
              var adminuser = new AdminUser();
              var user = adminuser.GetUser( userId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Adminuser.AdminUserResource.GetTenantScopesForUser(System.String)">
            <summary>
            Retrieves a list of the Mozu tenants or development stores for which the specified user has an assigned role.
            </summary>
            <param name="userId">Unique identifier of the user whose tenant scopes you want to retrieve.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Tenant.TenantCollection"/>
            </returns>
            <example>
            <code>
              var adminuser = new AdminUser();
              var tenantCollection = adminuser.GetTenantScopesForUser( userId);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Platform.Adminuser.TenantAdminUserAuthTicketResource">
            <summary>
            Use the Admin user Authtickets resource to generate and refresh authentication tickets for Mozu administrator or developer account users to access tenants or development stores.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Platform.Adminuser.TenantAdminUserAuthTicketResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Adminuser.TenantAdminUserAuthTicketResource.CreateUserAuthTicket(Mozu.Api.Contracts.Core.UserAuthInfo)">
            <summary>
            Creates an authentication ticket for the supplied user to specify in API requests associated with the supplied tenant.
            </summary>
            <param name="userAuthInfo">The user authentication information required to generate the user authentication ticket, which consists of a user name and password.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.AdminUser.TenantAdminUserAuthTicket"/>
            </returns>
            <example>
            <code>
              var tenantadminuserauthticket = new TenantAdminUserAuthTicket();
              var tenantAdminUserAuthTicket = tenantadminuserauthticket.CreateUserAuthTicket( userAuthInfo);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Adminuser.TenantAdminUserAuthTicketResource.CreateUserAuthTicket(System.Nullable{System.Int32},Mozu.Api.Contracts.Core.UserAuthInfo)">
            <summary>
            Creates an authentication ticket for the supplied user to specify in API requests associated with the supplied tenant.
            </summary>
            <param name="tenantId">Unique identifier of the Mozu tenant or development store for which to generate the user authentication ticket.</param>
            <param name="userAuthInfo">The user authentication information required to generate the user authentication ticket, which consists of a user name and password.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.AdminUser.TenantAdminUserAuthTicket"/>
            </returns>
            <example>
            <code>
              var tenantadminuserauthticket = new TenantAdminUserAuthTicket();
              var tenantAdminUserAuthTicket = tenantadminuserauthticket.CreateUserAuthTicket( tenantId,  userAuthInfo);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Adminuser.TenantAdminUserAuthTicketResource.RefreshAuthTicket(Mozu.Api.Contracts.AdminUser.TenantAdminUserAuthTicket)">
            <summary>
            Generates a new user authentication ticket for the specified tenant by supplying the user's existing refresh token information.
            </summary>
            <param name="existingAuthTicket">Properties of the authentication ticket to refresh. The refresh token is required to complete this request.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.AdminUser.TenantAdminUserAuthTicket"/>
            </returns>
            <example>
            <code>
              var tenantadminuserauthticket = new TenantAdminUserAuthTicket();
              var tenantAdminUserAuthTicket = tenantadminuserauthticket.RefreshAuthTicket( existingAuthTicket);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Adminuser.TenantAdminUserAuthTicketResource.RefreshAuthTicket(System.Nullable{System.Int32},Mozu.Api.Contracts.AdminUser.TenantAdminUserAuthTicket)">
            <summary>
            Generates a new user authentication ticket for the specified tenant by supplying the user's existing refresh token information.
            </summary>
            <param name="tenantId">Unique identifier of the Mozu tenant or development store for which to refresh the authentication ticket.</param>
            <param name="existingAuthTicket">Properties of the authentication ticket to refresh. The refresh token is required to complete this request.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.AdminUser.TenantAdminUserAuthTicket"/>
            </returns>
            <example>
            <code>
              var tenantadminuserauthticket = new TenantAdminUserAuthTicket();
              var tenantAdminUserAuthTicket = tenantadminuserauthticket.RefreshAuthTicket( tenantId,  existingAuthTicket);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Adminuser.TenantAdminUserAuthTicketResource.DeleteUserAuthTicket(System.String)">
            <summary>
            Deletes the authentication ticket for the user by supplying the refresh token.
            </summary>
            <param name="refreshToken">Refresh token string associated with the user authentication ticket.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var tenantadminuserauthticket = new TenantAdminUserAuthTicket();
              tenantadminuserauthticket.DeleteUserAuthTicket( refreshToken);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Platform.Appdev.ApplicationResource">
            <summary>
            Use the apps resource to register namespaces for third party applications.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Platform.Appdev.ApplicationResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Appdev.ApplicationResource.RegisterNamespace(Mozu.Api.Contracts.AppDev.NamespaceRegistry)">
            <summary>
            Register the namespace that will prepend all application attributes.
            </summary>
            <param name="namespaceRegistry">Properties of the namespace registry to perform.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.AppDev.NamespaceRegistry"/>
            </returns>
            <example>
            <code>
              var application = new Application();
              var namespaceRegistry = application.RegisterNamespace( namespaceRegistry);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Appdev.ApplicationResource.ReRegisterNamespace(Mozu.Api.Contracts.AppDev.NamespaceRegistry)">
            <summary>
            Re-register the namespace that will prepend all application attributes.
            </summary>
            <param name="namespaceRegistry">Properties of the namespace registry to perform.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.AppDev.NamespaceRegistry"/>
            </returns>
            <example>
            <code>
              var application = new Application();
              var namespaceRegistry = application.ReRegisterNamespace( namespaceRegistry);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Platform.Applications.AuthTicketResource">
            <summary>
            Use this resource to manage authentication tickets for your applications.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Platform.Applications.AuthTicketResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Applications.AuthTicketResource.AuthenticateApp(Mozu.Api.Contracts.AppDev.AppAuthInfo)">
            <summary>
            Generate an authentication ticket for an application.
            </summary>
            <param name="appAuthInfo">Authentication information required to generate an authentication ticket includes the application id and the shared secret.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.AppDev.AuthTicket"/>
            </returns>
            <example>
            <code>
              var authticket = new AuthTicket();
              var authTicket = authticket.AuthenticateApp( appAuthInfo);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Applications.AuthTicketResource.RefreshAppAuthTicket(Mozu.Api.Contracts.AppDev.AuthTicketRequest)">
            <summary>
            Refreshes the application's authentication ticket and generates a new access token by providing the refresh token string.
            </summary>
            <param name="authTicketRequest">The refresh token string required to update the application authentication ticket.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.AppDev.AuthTicket"/>
            </returns>
            <example>
            <code>
              var authticket = new AuthTicket();
              var authTicket = authticket.RefreshAppAuthTicket( authTicketRequest);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Applications.AuthTicketResource.DeleteAppAuthTicket(System.String)">
            <summary>
            Deletes an authentication for an application based on the specified refresh token.
            </summary>
            <param name="refreshToken">The refresh token string from the application's authentication ticket.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var authticket = new AuthTicket();
              authticket.DeleteAppAuthTicket( refreshToken);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Platform.ReferenceDataResource">
            <summary>
            The Reference resource retrieves collections of standards the Mozu system currently supports. This includes content locales, top-level domains, units of measure, countries, currencies, time zones, and shipping or billing address schemas.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Platform.ReferenceDataResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Platform.ReferenceDataResource.GetAddressSchema">
            <summary>
            Retrieves a specific address schema based on the country code provided. This operation allows the creation of custom shipping and billing address fields.
            </summary>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Reference.AddressSchema"/>
            </returns>
            <example>
            <code>
              var referencedata = new ReferenceData();
              var addressSchema = referencedata.GetAddressSchema();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.ReferenceDataResource.GetAddressSchema(System.String)">
            <summary>
            Retrieves a specific address schema based on the country code provided. This operation allows the creation of custom shipping and billing address fields.
            </summary>
            <param name="countryCode">2 letter geographic code representing the country for the physical or mailing address. Currently limited to the US.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Reference.AddressSchema"/>
            </returns>
            <example>
            <code>
              var referencedata = new ReferenceData();
              var addressSchema = referencedata.GetAddressSchema( countryCode);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.ReferenceDataResource.GetAddressSchemas">
            <summary>
            Retrieves the entire list of address schemas that the system supports.
            </summary>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Reference.AddressSchemaCollection"/>
            </returns>
            <example>
            <code>
              var referencedata = new ReferenceData();
              var addressSchemaCollection = referencedata.GetAddressSchemas();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.ReferenceDataResource.GetBehavior(System.Int64)">
            <summary>
            ***Always private and should not be published.***
            </summary>
            <param name="behaviorId">***Always private and should not be published.***</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Core.Behavior"/>
            </returns>
            <example>
            <code>
              var referencedata = new ReferenceData();
              var behavior = referencedata.GetBehavior( behaviorId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.ReferenceDataResource.GetBehaviorCategories">
            <summary>
            ***Always private and should not be published.***
            </summary>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Core.BehaviorCategoryCollection"/>
            </returns>
            <example>
            <code>
              var referencedata = new ReferenceData();
              var behaviorCategoryCollection = referencedata.GetBehaviorCategories();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.ReferenceDataResource.GetBehaviorCategory(System.Int64)">
            <summary>
            ***Always private and should not be published.***
            </summary>
            <param name="categoryId">***Always private and should not be published.***</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Core.BehaviorCategory"/>
            </returns>
            <example>
            <code>
              var referencedata = new ReferenceData();
              var behaviorCategory = referencedata.GetBehaviorCategory( categoryId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.ReferenceDataResource.GetBehaviors">
            <summary>
            ***Always private and should not be published.***
            </summary>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Core.BehaviorCollection"/>
            </returns>
            <example>
            <code>
              var referencedata = new ReferenceData();
              var behaviorCollection = referencedata.GetBehaviors();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.ReferenceDataResource.GetBehaviors(System.String)">
            <summary>
            ***Always private and should not be published.***
            </summary>
            <param name="userType"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Core.BehaviorCollection"/>
            </returns>
            <example>
            <code>
              var referencedata = new ReferenceData();
              var behaviorCollection = referencedata.GetBehaviors( userType);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.ReferenceDataResource.GetContentLocales">
            <summary>
            Retrieves the entire list of content locales that the system supports. The content locales indicate the language used and the country where the language is used. Just because the system supports the content locale does not mean that the site or site group supports the language. For example,currently only "en-US" is supported.
            </summary>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Reference.ContentLocaleCollection"/>
            </returns>
            <example>
            <code>
              var referencedata = new ReferenceData();
              var contentLocaleCollection = referencedata.GetContentLocales();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.ReferenceDataResource.GetCountries">
            <summary>
            Retrieves the entire list of countries that the system supports.
            </summary>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Reference.CountryCollection"/>
            </returns>
            <example>
            <code>
              var referencedata = new ReferenceData();
              var countryCollection = referencedata.GetCountries();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.ReferenceDataResource.GetCurrencies">
            <summary>
            Retrieves the entire list of currencies that the system supports.
            </summary>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Reference.CurrencyCollection"/>
            </returns>
            <example>
            <code>
              var referencedata = new ReferenceData();
              var currencyCollection = referencedata.GetCurrencies();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.ReferenceDataResource.GetTimeZones">
            <summary>
            Retrieves the entire list of time zones that the system supports.
            </summary>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Reference.TimeZoneCollection"/>
            </returns>
            <example>
            <code>
              var referencedata = new ReferenceData();
              var timeZoneCollection = referencedata.GetTimeZones();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.ReferenceDataResource.GetTopLevelDomains">
            <summary>
            Retrieves the entire list of top-level Internet domains that the system supports.
            </summary>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Reference.TopLevelDomainCollection"/>
            </returns>
            <example>
            <code>
              var referencedata = new ReferenceData();
              var topLevelDomainCollection = referencedata.GetTopLevelDomains();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.ReferenceDataResource.GetUnitsOfMeasure">
            <summary>
            Retrieves the entire list of units of measure that the system supports.
            </summary>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Reference.UnitOfMeasureCollection"/>
            </returns>
            <example>
            <code>
              var referencedata = new ReferenceData();
              var unitOfMeasureCollection = referencedata.GetUnitsOfMeasure();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.ReferenceDataResource.GetUnitsOfMeasure(System.String)">
            <summary>
            Retrieves the entire list of units of measure that the system supports.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Reference.UnitOfMeasureCollection"/>
            </returns>
            <example>
            <code>
              var referencedata = new ReferenceData();
              var unitOfMeasureCollection = referencedata.GetUnitsOfMeasure( filter);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Platform.SiteDataResource">
            <summary>
            Use the site data resource to store site-level information required for a third-party application in the Mozu database.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Platform.SiteDataResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Platform.SiteDataResource.GetDBValue(System.String)">
            <summary>
            Retrieves the value of a record in the Mozu database.
            </summary>
            <param name="dbEntryQuery">The database entry query string used to retrieve the record information.</param>
            <returns>
            string
            </returns>
            <example>
            <code>
              var sitedata = new SiteData();
              var string = sitedata.GetDBValue( dbEntryQuery);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.SiteDataResource.CreateDBValue(System.String,System.String)">
            <summary>
            Creates a new record in the Mozu database based on the information supplied in the request.
            </summary>
            <param name="dbEntryQuery">The database entry string to create.</param>
            <param name="value">The value string to create.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var sitedata = new SiteData();
              sitedata.CreateDBValue( dbEntryQuery,  value);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.SiteDataResource.UpdateDBValue(System.String,System.String)">
            <summary>
            Updates a record in the Mozu database based on the information supplied in the request.
            </summary>
            <param name="dbEntryQuery">The database entry query string used to update the record information.</param>
            <param name="value">The database value to update.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var sitedata = new SiteData();
              sitedata.UpdateDBValue( dbEntryQuery,  value);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.SiteDataResource.DeleteDBValue(System.String)">
            <summary>
            Removes a previously defined record in the Mozu database.
            </summary>
            <param name="dbEntryQuery">The database entry string to delete.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var sitedata = new SiteData();
              sitedata.DeleteDBValue( dbEntryQuery);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Platform.TenantDataResource">
            <summary>
            Use the tenant data resource to store tenant-level information required for a third-party application in the Mozu database.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Platform.TenantDataResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Platform.TenantDataResource.GetDBValue(System.String)">
            <summary>
            Retrieves the value of a record in the Mozu database.
            </summary>
            <param name="dbEntryQuery">The database entry query string used to retrieve the record information.</param>
            <returns>
            string
            </returns>
            <example>
            <code>
              var tenantdata = new TenantData();
              var string = tenantdata.GetDBValue( dbEntryQuery);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.TenantDataResource.CreateDBValue(System.String,System.String)">
            <summary>
            Creates a new record in the Mozu database based on the information supplied in the request.
            </summary>
            <param name="dbEntryQuery">The database entry string to create.</param>
            <param name="value">The value string to create.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var tenantdata = new TenantData();
              tenantdata.CreateDBValue( dbEntryQuery,  value);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.TenantDataResource.UpdateDBValue(System.String,System.String)">
            <summary>
            Updates a record in the Mozu database based on the information supplied in the request.
            </summary>
            <param name="dbEntryQuery">The database entry query string used to update the record information.</param>
            <param name="value">The database value to update.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var tenantdata = new TenantData();
              tenantdata.UpdateDBValue( dbEntryQuery,  value);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.TenantDataResource.DeleteDBValue(System.String)">
            <summary>
            Removes a previously defined record in the Mozu database.
            </summary>
            <param name="dbEntryQuery">The database entry string to delete.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var tenantdata = new TenantData();
              tenantdata.DeleteDBValue( dbEntryQuery);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Platform.TenantResource">
            <summary>
            Use the tenants resource to manage information about a Mozu tenant.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Platform.TenantResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Platform.TenantResource.GetTenant(System.Int32)">
            <summary>
            Retrieve details about a specific tenant by providing the tenant ID.
            </summary>
            <param name="tenantId">Unique identifier of the Mozu tenant.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Tenant.Tenant"/>
            </returns>
            <example>
            <code>
              var tenant = new Tenant();
              var tenant = tenant.GetTenant( tenantId);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Platform.UserDataResource">
            <summary>
            Use the user data subresource to store user-level data required for a third-party application in the Mozu database.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Platform.UserDataResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Platform.UserDataResource.GetDBValue(System.String)">
            <summary>
            Retrieves the value of a record in the Mozu database.
            </summary>
            <param name="dbEntryQuery">The database entry query string used to retrieve the record information.</param>
            <returns>
            string
            </returns>
            <example>
            <code>
              var userdata = new UserData();
              var string = userdata.GetDBValue( dbEntryQuery);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.UserDataResource.CreateDBValue(System.String,System.String)">
            <summary>
            Creates a new record in the Mozu database based on the information supplied in the request.
            </summary>
            <param name="dbEntryQuery">The database entry string to create.</param>
            <param name="value">The value string to create.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var userdata = new UserData();
              userdata.CreateDBValue( dbEntryQuery,  value);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.UserDataResource.UpdateDBValue(System.String,System.String)">
            <summary>
            Updates a record in the Mozu database based on the information supplied in the request.
            </summary>
            <param name="dbEntryQuery">The database entry query string used to update the record information.</param>
            <param name="value">The database value to update.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var userdata = new UserData();
              userdata.UpdateDBValue( dbEntryQuery,  value);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.UserDataResource.DeleteDBValue(System.String)">
            <summary>
            Removes a previously defined record in the Mozu database.
            </summary>
            <param name="dbEntryQuery">The database entry string to delete.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var userdata = new UserData();
              userdata.DeleteDBValue( dbEntryQuery);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Platform.User.UserAuthTicketResource">
            <summary>
            Manage the user authentication tickets used to perform operations in the Mozu API.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Platform.User.UserAuthTicketResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Platform.User.UserAuthTicketResource.CreateUserAuthTicket(Mozu.Api.Contracts.Core.UserAuthInfo)">
            <summary>
            Generates an authentication ticket for a user.
            </summary>
            <param name="userAuthInfo">The user authentication information, which consists of email address and password.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Core.UserAuthTicket"/>
            </returns>
            <example>
            <code>
              var userauthticket = new UserAuthTicket();
              var userAuthTicket = userauthticket.CreateUserAuthTicket( userAuthInfo);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.User.UserAuthTicketResource.CreateAuthTicketForSite(Mozu.Api.Contracts.Core.UserTokenInfo)">
            <summary>
            Generates an authentication ticket for a user that can be used for an individual site.
            </summary>
            <param name="userAuthInfo">The user authentication information, which consists of email address and password.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Core.UserAuthTicket"/>
            </returns>
            <example>
            <code>
              var userauthticket = new UserAuthTicket();
              var userAuthTicket = userauthticket.CreateAuthTicketForSite( userAuthInfo);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.User.UserAuthTicketResource.RefreshUserAuthTicket(System.String)">
            <summary>
            Refresh the user authentication ticket by supplying the refresh token.
            </summary>
            <param name="refreshToken">The refresh token generated in the user authentication ticket.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Core.UserAuthTicket"/>
            </returns>
            <example>
            <code>
              var userauthticket = new UserAuthTicket();
              var userAuthTicket = userauthticket.RefreshUserAuthTicket( refreshToken);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Platform.User.UserResource">
            <summary>
            Use this resource to manage shopper accounts for your Mozu tenant.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Platform.User.UserResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Platform.User.UserResource.GetUserByEmail(System.String)">
            <summary>
            Retrieves the details of a user account by supplying the user's email address.
            </summary>
            <param name="emailAddress">The email address of the specified user or the email address associated with the specified entity.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Core.User"/>
            </returns>
            <example>
            <code>
              var user = new User();
              var user = user.GetUserByEmail( emailAddress);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.User.UserResource.GetUser(System.String)">
            <summary>
            Retrieves the details of a user account by supplying the user ID.
            </summary>
            <param name="userId">Unique identifier of the user.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Core.User"/>
            </returns>
            <example>
            <code>
              var user = new User();
              var user = user.GetUser( userId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.User.UserResource.CreateUser(Mozu.Api.Contracts.Core.User)">
            <summary>
            Creates a new shopper user account.
            </summary>
            <param name="shopper">Properties of the new shopper user account to create.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Core.User"/>
            </returns>
            <example>
            <code>
              var user = new User();
              var user = user.CreateUser( shopper);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.User.UserResource.CreateUsers(Mozu.Api.Contracts.Core.UserCollection)">
            <summary>
            Creates a bulk collection of new shopper user accounts.
            </summary>
            <param name="users">Properties of the new shopper user accounts to create.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Core.UserCollection"/>
            </returns>
            <example>
            <code>
              var user = new User();
              var userCollection = user.CreateUsers( users);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.User.UserResource.Login(Mozu.Api.Contracts.Core.UserAuthInfo)">
            <summary>
            Logs a shopper user in to a tenant.
            </summary>
            <param name="userAuthInfo">The authentication information required to log the user in, which consists of email address and password.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.User.UserLoginResult"/>
            </returns>
            <example>
            <code>
              var user = new User();
              var userLoginResult = user.Login( userAuthInfo);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.User.UserResource.ResetPassword(Mozu.Api.Contracts.User.ResetPasswordInfo)">
            <summary>
            Reset the shopper user password by supplying the email address.
            </summary>
            <param name="resetPasswordInfo">The information required to reset the password, which consists of the user email address.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var user = new User();
              user.ResetPassword( resetPasswordInfo);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Security.Authentication">
            <summary>
            This class handles Mozu application authentication.
            </summary>
        </member>
        <member name="F:Mozu.Api.Security.Authentication._apiContext">
            <summary>
            The base URL of the Mozu application authentication service
            </summary>
        </member>
        <member name="F:Mozu.Api.Security.Authentication._appAuthTicket">
            <summary>
            The application authentication ticket
            </summary>
        </member>
        <member name="M:Mozu.Api.Security.Authentication.#ctor(Mozu.Api.Contracts.AppDev.AppAuthInfo,System.String,Mozu.Api.Security.RefreshInterval)">
            <summary>
            This contructor does application authentication and setups up the necessary timers to keep the app auth ticket valid.
            </summary>
            <param name="appId">The application version's app id</param>
            <param name="sharedSecret">The application version's shared secret</param>
            <param name="baseAppAuthUrl">The base URL of the Mozu application authentication service</param>
        </member>
        <member name="M:Mozu.Api.Security.Authentication.AuthenticateApp">
            <summary>
            Do application authentication
            </summary>
        </member>
        <member name="M:Mozu.Api.Security.Authentication.RefreshAppAuthTicket">
            <summary>
            Refresh the application auth ticket using the refresh token
            </summary>
        </member>
        <member name="M:Mozu.Api.Security.Authentication.EnsureAuthTicket">
            <summary>
            Ensure that the auth ticket is valid.  If not, then make it so.  Will be used when not using timers to keep the auth ticket alive (i.e. "on demand" mode).
            </summary>
        </member>
        <member name="M:Mozu.Api.Security.Authentication.AddAuthHeader(System.Net.Http.HttpClient)">
            <summary>
            This method adds the necessary app claims header to a http client to allow authorized calls to Mozu services
            </summary>
            <param name="client">The http client for which to add the header</param>
        </member>
        <member name="P:Mozu.Api.Security.Authentication.AppAuthTicket">
            <summary>
            The application auth ticket
            </summary>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Carts.CartItemUrl.GetCartItemsUrl">
            <summary>
            Get Resource Url for GetCartItems
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Carts.CartItemUrl.GetCartItemUrl(System.String)">
            <summary>
            Get Resource Url for GetCartItem
            </summary>
            <param name="cartItemId">Identifier of the cart item to retrieve.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Carts.CartItemUrl.AddItemToCartUrl">
            <summary>
            Get Resource Url for AddItemToCart
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Carts.CartItemUrl.UpdateCartItemUrl(System.String)">
            <summary>
            Get Resource Url for UpdateCartItem
            </summary>
            <param name="cartItemId">Identifier of the cart item to update.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Carts.CartItemUrl.UpdateCartItemQuantityUrl(System.String,System.Int32)">
            <summary>
            Get Resource Url for UpdateCartItemQuantity
            </summary>
            <param name="cartItemId">Identifier of the cart item to update quantity.</param>
            <param name="quantity">The number of cart items in the shopper's active cart.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Carts.CartItemUrl.RemoveAllCartItemsUrl">
            <summary>
            Get Resource Url for RemoveAllCartItems
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Carts.CartItemUrl.DeleteCartItemUrl(System.String)">
            <summary>
            Get Resource Url for DeleteCartItem
            </summary>
            <param name="cartItemId">Identifier of the cart item to delete.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Carts.ChangeMessageUrl.GetMessagesUrl">
            <summary>
            Get Resource Url for GetMessages
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Carts.ChangeMessageUrl.RemoveAllMessagesUrl">
            <summary>
            Get Resource Url for RemoveAllMessages
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Carts.ChangeMessageUrl.RemoveMessageUrl(System.String)">
            <summary>
            Get Resource Url for RemoveMessage
            </summary>
            <param name="messageId">Identifier of the message to remove from the cart.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.CartUrl.GetCartUrl(System.String)">
            <summary>
            Get Resource Url for GetCart
            </summary>
            <param name="cartId">Identifier of the cart being retrieved.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.CartUrl.GetOrCreateCartUrl">
            <summary>
            Get Resource Url for GetOrCreateCart
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.CartUrl.GetCartSummaryUrl">
            <summary>
            Get Resource Url for GetCartSummary
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.CartUrl.GetUserCartUrl(System.String)">
            <summary>
            Get Resource Url for GetUserCart
            </summary>
            <param name="userId">Unique identifier of the user whose cart you want to retrieve.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.CartUrl.GetUserCartSummaryUrl(System.String)">
            <summary>
            Get Resource Url for GetUserCartSummary
            </summary>
            <param name="userId">Unique identifier of the user whose cart details you want to retrieve.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.CartUrl.UpdateCartUrl">
            <summary>
            Get Resource Url for UpdateCart
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.CartUrl.DeleteCartUrl(System.String)">
            <summary>
            Get Resource Url for DeleteCart
            </summary>
            <param name="cartId">Identifier of the cart being deleted.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.CartUrl.DeleteCurrentCartUrl">
            <summary>
            Get Resource Url for DeleteCurrentCart
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeTypeRuleUrl.GetAttributeTypeRulesUrl(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Get Resource Url for GetAttributeTypeRules
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueUrl.GetAttributeVocabularyValuesUrl(System.String)">
            <summary>
            Get Resource Url for GetAttributeVocabularyValues
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueUrl.GetAttributeVocabularyValueUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetAttributeVocabularyValue
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="value">The actual unique value of the attribute vocabulary to retrieve. A single attribute must have a unique value and match the attribute's data type. If a string value returns null, the system will generate a value. The actual string content displayed shoud be stored as "Content" and actual content is required for string values.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueUrl.AddAttributeVocabularyValueUrl(System.String)">
            <summary>
            Get Resource Url for AddAttributeVocabularyValue
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueUrl.UpdateAttributeVocabularyValuesUrl(System.String)">
            <summary>
            Get Resource Url for UpdateAttributeVocabularyValues
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueUrl.UpdateAttributeVocabularyValueUrl(System.String,System.String)">
            <summary>
            Get Resource Url for UpdateAttributeVocabularyValue
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="value">The actual unique value of the attribute vocabulary value to update. A single attribute must have a unique value and match the attribute's data type. If a string value returns null, the system will generate a value. The actual string content displayed shoud be stored as "Content" and actual content is required for string values.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueUrl.DeleteAttributeVocabularyValueUrl(System.String,System.String)">
            <summary>
            Get Resource Url for DeleteAttributeVocabularyValue
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="value">The actual unique value of the attribute vocabulary to delete. A single attribute must have a unique value and match the attribute's data type. If a string value returns null, the system will generate a value. The actual string content displayed shoud be stored as "Content" and actual content is required for string values.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.AttributeUrl.GetAttributesUrl(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Get Resource Url for GetAttributes
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.AttributeUrl.GetAttributeUrl(System.String)">
            <summary>
            Get Resource Url for GetAttribute
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.AttributeUrl.AddAttributeUrl">
            <summary>
            Get Resource Url for AddAttribute
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.AttributeUrl.UpdateAttributeUrl(System.String)">
            <summary>
            Get Resource Url for UpdateAttribute
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.AttributeUrl.DeleteAttributeUrl(System.String)">
            <summary>
            Get Resource Url for DeleteAttribute
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeExtraUrl.GetExtrasUrl(System.Int32)">
            <summary>
            Get Resource Url for GetExtras
            </summary>
            <param name="productTypeId">Identifier of the product type.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeExtraUrl.GetExtraUrl(System.String,System.Int32)">
            <summary>
            Get Resource Url for GetExtra
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productTypeId">Identifier of the product type whose extra is being retrieved.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeExtraUrl.AddExtraUrl(System.Int32)">
            <summary>
            Get Resource Url for AddExtra
            </summary>
            <param name="productTypeId">Identifier of the product type.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeExtraUrl.UpdateExtraUrl(System.String,System.Int32)">
            <summary>
            Get Resource Url for UpdateExtra
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productTypeId">Identifier of the product type.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeExtraUrl.DeleteExtraUrl(System.String,System.Int32)">
            <summary>
            Get Resource Url for DeleteExtra
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productTypeId">Identifier of the product type.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeOptionUrl.GetOptionsUrl(System.Int32)">
            <summary>
            Get Resource Url for GetOptions
            </summary>
            <param name="productTypeId">Identifier of the product type to retrieve.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeOptionUrl.GetOptionUrl(System.String,System.Int32)">
            <summary>
            Get Resource Url for GetOption
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productTypeId">The identifier of the product type.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeOptionUrl.AddOptionUrl(System.Int32)">
            <summary>
            Get Resource Url for AddOption
            </summary>
            <param name="productTypeId">Identifier of the product type.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeOptionUrl.UpdateOptionUrl(System.String,System.Int32)">
            <summary>
            Get Resource Url for UpdateOption
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productTypeId">Identifier of the product type.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeOptionUrl.DeleteOptionUrl(System.String,System.Int32)">
            <summary>
            Get Resource Url for DeleteOption
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productTypeId">Identifier of the product type.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypePropertyUrl.GetPropertiesUrl(System.Int32)">
            <summary>
            Get Resource Url for GetProperties
            </summary>
            <param name="productTypeId">Identifier of the product type.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypePropertyUrl.GetPropertyUrl(System.String,System.Int32)">
            <summary>
            Get Resource Url for GetProperty
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productTypeId">Identifier of the product type.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypePropertyUrl.AddPropertyUrl(System.Int32)">
            <summary>
            Get Resource Url for AddProperty
            </summary>
            <param name="productTypeId">Identifier of the product type.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypePropertyUrl.UpdatePropertyUrl(System.String,System.Int32)">
            <summary>
            Get Resource Url for UpdateProperty
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productTypeId">Identifier of the product type.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypePropertyUrl.DeletePropertyUrl(System.String,System.Int32)">
            <summary>
            Get Resource Url for DeleteProperty
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productTypeId">Identifier of the product type.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeVariationUrl.GenerateProductVariationsUrl(System.String,System.Nullable{System.Int32},System.String,System.Int32,System.String,System.Nullable{System.Int32})">
            <summary>
            Get Resource Url for GenerateProductVariations
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="productCode"></param>
            <param name="productTypeId">Unique identifier of the product type.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">Indicates the zero-based offset in the complete result set where the returned entities begin, when creating paged results from a query. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.ProductTypeUrl.GetProductTypesUrl(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Get Resource Url for GetProductTypes
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. You can filter product type search results by any of its properties. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=Name+cont+shoes"</param>
            <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.ProductTypeUrl.GetProductTypeUrl(System.Int32)">
            <summary>
            Get Resource Url for GetProductType
            </summary>
            <param name="productTypeId">Identifier of the product type to retrieve.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.ProductTypeUrl.AddProductTypeUrl">
            <summary>
            Get Resource Url for AddProductType
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.ProductTypeUrl.UpdateProductTypeUrl(System.Int32)">
            <summary>
            Get Resource Url for UpdateProductType
            </summary>
            <param name="productTypeId">Identifier of the product type to update.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.ProductTypeUrl.DeleteProductTypeUrl(System.Int32)">
            <summary>
            Get Resource Url for DeleteProductType
            </summary>
            <param name="productTypeId">Identifier of the product type to delete.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.CategoryUrl.GetCategoriesUrl(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Get Resource Url for GetCategories
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. You can filter product category search results by any of its properties, including its position in the category hierarchy. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.CategoryUrl.GetCategoryUrl(System.Int32)">
            <summary>
            Get Resource Url for GetCategory
            </summary>
            <param name="categoryId">Unique identifier of the category to retrieve.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.CategoryUrl.GetChildCategoriesUrl(System.Int32)">
            <summary>
            Get Resource Url for GetChildCategories
            </summary>
            <param name="categoryId">Unique identifier of the category whose subcategories are retrieved.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.CategoryUrl.AddCategoryUrl">
            <summary>
            Get Resource Url for AddCategory
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.CategoryUrl.UpdateCategoryUrl(System.Nullable{System.Boolean},System.Int32)">
            <summary>
            Get Resource Url for UpdateCategory
            </summary>
            <param name="cascadeVisibility">If true, when changing the display option for the category, change it for all subcategories also. Default: False.</param>
            <param name="categoryId">Unique identifier of the category to modify.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.CategoryUrl.DeleteCategoryByIdUrl(System.Nullable{System.Boolean},System.Int32)">
            <summary>
            Get Resource Url for DeleteCategoryById
            </summary>
            <param name="cascadeDelete">If true, any subcategories of a category are deleted when this category is deleted. Default: False.</param>
            <param name="categoryId">Unique identifier of the category to delete.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Discounts.DiscountTargetUrl.GetDiscountTargetUrl(System.Int32)">
            <summary>
            Get Resource Url for GetDiscountTarget
            </summary>
            <param name="discountId"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Discounts.DiscountTargetUrl.UpdateDiscountTargetUrl(System.Int32)">
            <summary>
            Get Resource Url for UpdateDiscountTarget
            </summary>
            <param name="discountId">Unique identifier of the discount. System-supplied and read-only.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.DiscountUrl.GetDiscountsUrl(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Get Resource Url for GetDiscounts
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.DiscountUrl.GetDiscountUrl(System.Int32)">
            <summary>
            Get Resource Url for GetDiscount
            </summary>
            <param name="discountId">Unique identifier of the discount. System-supplied and read-only.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.DiscountUrl.GetDiscountContentUrl(System.Int32)">
            <summary>
            Get Resource Url for GetDiscountContent
            </summary>
            <param name="discountId">Unique identifier of the discount. System-supplied and read-only.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.DiscountUrl.GenerateRandomCouponUrl">
            <summary>
            Get Resource Url for GenerateRandomCoupon
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.DiscountUrl.CreateDiscountUrl">
            <summary>
            Get Resource Url for CreateDiscount
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.DiscountUrl.RedeemDiscountUrl">
            <summary>
            Get Resource Url for RedeemDiscount
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.DiscountUrl.UpdateDiscountUrl(System.Int32)">
            <summary>
            Get Resource Url for UpdateDiscount
            </summary>
            <param name="discountId">Unique identifier of the discount. System-supplied and read-only.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.DiscountUrl.UpdateDiscountContentUrl(System.Int32)">
            <summary>
            Get Resource Url for UpdateDiscountContent
            </summary>
            <param name="discountId">Unique identifier of the discount. System-supplied and read-only.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.DiscountUrl.DeleteDiscountUrl(System.Int32)">
            <summary>
            Get Resource Url for DeleteDiscount
            </summary>
            <param name="discountId">Unique identifier of the discount. System-supplied and read-only.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.DiscountUrl.UnRedeemDiscountUrl(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get Resource Url for UnRedeemDiscount
            </summary>
            <param name="discountId">Unique identifier of the previously redeemed discount. System-supplied and read only.</param>
            <param name="orderNumber">The number of the order associated with the redeemed product discount.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.FacetUrl.GetFacetUrl(System.Int32,System.Nullable{System.Boolean})">
            <summary>
            Get Resource Url for GetFacet
            </summary>
            <param name="facetId">Unique identifier of the facet to retrieve.</param>
            <param name="validate">Validates that the product category associated with a facet is active. System-supplied and read only.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.FacetUrl.GetFacetCategoryListUrl(System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Get Resource Url for GetFacetCategoryList
            </summary>
            <param name="categoryId">Unique identifier of the category associated with the facets to retrieve.</param>
            <param name="includeAvailable">If true, returns a list of the attributes and categories associated with a product type that have not been defined as a facet for the category.</param>
            <param name="validate">Validates that the product category associated with a facet is active. System-supplied and read only.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.FacetUrl.AddFacetUrl">
            <summary>
            Get Resource Url for AddFacet
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.FacetUrl.UpdateFacetUrl(System.Int32)">
            <summary>
            Get Resource Url for UpdateFacet
            </summary>
            <param name="facetId">Unique identifier of the facet to modify.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.FacetUrl.DeleteFacetByIdUrl(System.Int32)">
            <summary>
            Get Resource Url for DeleteFacetById
            </summary>
            <param name="facetId">Unique identifier of the facet to delete.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.ProductReservationUrl.GetProductReservationsUrl(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Get Resource Url for GetProductReservations
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.ProductReservationUrl.GetProductReservationUrl(System.Int32)">
            <summary>
            Get Resource Url for GetProductReservation
            </summary>
            <param name="productReservationId">Unique identifier of the product reservation.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.ProductReservationUrl.AddProductReservationUrl">
            <summary>
            Get Resource Url for AddProductReservation
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.ProductReservationUrl.CommitReservationUrl(System.Int32,System.Int32)">
            <summary>
            Get Resource Url for CommitReservation
            </summary>
            <param name="productReservationId">Unique identifier of the reservation.</param>
            <param name="qty">Number of product items to remove from inventory.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.ProductReservationUrl.UpdateProductReservationUrl(System.Int32)">
            <summary>
            Get Resource Url for UpdateProductReservation
            </summary>
            <param name="productReservationId">Unique identifier of the product reservation to update. </param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.ProductReservationUrl.DeleteProductReservationUrl(System.Int32)">
            <summary>
            Get Resource Url for DeleteProductReservation
            </summary>
            <param name="productReservationId">Unique identifier of the reservation.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductExtraUrl.GetExtrasUrl(System.String)">
            <summary>
            Get Resource Url for GetExtras
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductExtraUrl.GetExtraUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetExtra
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductExtraUrl.AddExtraUrl(System.String)">
            <summary>
            Get Resource Url for AddExtra
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductExtraUrl.UpdateExtraUrl(System.String,System.String)">
            <summary>
            Get Resource Url for UpdateExtra
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductExtraUrl.DeleteExtraUrl(System.String,System.String)">
            <summary>
            Get Resource Url for DeleteExtra
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductOptionUrl.GetOptionsUrl(System.String)">
            <summary>
            Get Resource Url for GetOptions
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductOptionUrl.GetOptionUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetOption
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductOptionUrl.AddOptionUrl(System.String)">
            <summary>
            Get Resource Url for AddOption
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductOptionUrl.UpdateOptionUrl(System.String,System.String)">
            <summary>
            Get Resource Url for UpdateOption
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductOptionUrl.DeleteOptionUrl(System.String,System.String)">
            <summary>
            Get Resource Url for DeleteOption
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductPropertyUrl.GetPropertiesUrl(System.String)">
            <summary>
            Get Resource Url for GetProperties
            </summary>
            <param name="productCode"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductPropertyUrl.GetPropertyUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetProperty
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productCode"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductPropertyUrl.AddPropertyUrl(System.String)">
            <summary>
            Get Resource Url for AddProperty
            </summary>
            <param name="productCode"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductPropertyUrl.UpdatePropertyUrl(System.String,System.String)">
            <summary>
            Get Resource Url for UpdateProperty
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productCode"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductPropertyUrl.DeletePropertyUrl(System.String,System.String)">
            <summary>
            Get Resource Url for DeleteProperty
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productCode"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductVariationUrl.GetProductVariationUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetProductVariation
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="variationKey">System-generated key that represents the attribute values that uniquely identify a specific product variation.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductVariationUrl.GetProductVariationsUrl(System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Get Resource Url for GetProductVariations
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">Indicates the zero-based offset in the complete result set where the returned entities begin, when creating paged results from a query. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductVariationUrl.UpdateProductVariationsUrl(System.String)">
            <summary>
            Get Resource Url for UpdateProductVariations
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductVariationUrl.UpdateProductVariationUrl(System.String,System.String)">
            <summary>
            Get Resource Url for UpdateProductVariation
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="variationKey">System-generated key that represents the attribute values that uniquely identify a specific product variation.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductVariationUrl.DeleteProductVariationUrl(System.String,System.String)">
            <summary>
            Get Resource Url for DeleteProductVariation
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="variationKey">System-generated key that represents the attribute values that uniquely identify a specific product variation.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.ProductUrl.GetProductsUrl(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Get Resource Url for GetProducts
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="noCount">If true, the operation does not return the TotalCount number of results.</param>
            <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="q">A list of product search terms to use in the query when searching across product code and product name. Separate multiple search terms with a space character.</param>
            <param name="qLimit">The maximum number of search results to return in the response. You can limit any range between 1-100.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.ProductUrl.GetProductUrl(System.String)">
            <summary>
            Get Resource Url for GetProduct
            </summary>
            <param name="productCode">Merchant-created code associated with the product such as a SKU. Max length: 30. Accepts a to z, A to Z, Ãƒâ€¹-ÃƒËœ, 0 to 9, #, semicolon, commas, apostrophes, and Spaces, but no punctuation or other characters.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.ProductUrl.GetProductInSitesUrl(System.String)">
            <summary>
            Get Resource Url for GetProductInSites
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.ProductUrl.GetProductInSiteUrl(System.String,System.Int32)">
            <summary>
            Get Resource Url for GetProductInSite
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="siteId"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.ProductUrl.AddProductUrl">
            <summary>
            Get Resource Url for AddProduct
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.ProductUrl.AddProductInSiteUrl(System.String)">
            <summary>
            Get Resource Url for AddProductInSite
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.ProductUrl.UpdateProductStockUrl(System.String)">
            <summary>
            Get Resource Url for UpdateProductStock
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.ProductUrl.UpdateProductUrl(System.String)">
            <summary>
            Get Resource Url for UpdateProduct
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.ProductUrl.UpdateProductInSitesUrl(System.String)">
            <summary>
            Get Resource Url for UpdateProductInSites
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.ProductUrl.UpdateProductInSiteUrl(System.String,System.Int32)">
            <summary>
            Get Resource Url for UpdateProductInSite
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="siteId"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.ProductUrl.DeleteProductUrl(System.String)">
            <summary>
            Get Resource Url for DeleteProduct
            </summary>
            <param name="productCode">Merchant-created code associated with the product such as a SKU.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.ProductUrl.DeleteProductInSiteUrl(System.String,System.Int32)">
            <summary>
            Get Resource Url for DeleteProductInSite
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="siteId"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.PublishingScopeUrl.DiscardDraftsUrl">
            <summary>
            Get Resource Url for DiscardDrafts
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.PublishingScopeUrl.PublishDraftsUrl">
            <summary>
            Get Resource Url for PublishDrafts
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Shipping.Global.GlobalCarrierUrl.GetServiceTypesUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetServiceTypes
            </summary>
            <param name="carrierId">Unique identifier of the shipping carrier.</param>
            <param name="localeCode">Language used for the entity. Currently, only "en-US" is supported.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Shipping.Instance.InstanceCarrierUrl.GetConfigurationsUrl(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Get Resource Url for GetConfigurations
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Shipping.Instance.InstanceCarrierUrl.GetConfigurationUrl(System.String)">
            <summary>
            Get Resource Url for GetConfiguration
            </summary>
            <param name="carrierId">Identifier of the shipping carrier associated with the configuration details to retrieve.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Shipping.Instance.InstanceCarrierUrl.CreateConfigurationUrl(System.String)">
            <summary>
            Get Resource Url for CreateConfiguration
            </summary>
            <param name="carrierId">Identifier of the carrier configuration being created.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Shipping.Instance.InstanceCarrierUrl.UpdateConfigurationUrl(System.String)">
            <summary>
            Get Resource Url for UpdateConfiguration
            </summary>
            <param name="carrierId">Identifier of the shipping carrier configuration to update.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Shipping.Instance.InstanceCarrierUrl.DeleteConfigurationUrl(System.String)">
            <summary>
            Get Resource Url for DeleteConfiguration
            </summary>
            <param name="carrierId">Identifier of the specific shipping carrier to delete.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.SiteGroupUrl.GetSiteGroupsUrl">
            <summary>
            Get Resource Url for GetSiteGroups
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.SiteGroupUrl.GetSiteGroupUrl(System.Int32)">
            <summary>
            Get Resource Url for GetSiteGroup
            </summary>
            <param name="siteGroupId"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.SiteGroupUrl.UpdateSiteGroupUrl(System.Int32)">
            <summary>
            Get Resource Url for UpdateSiteGroup
            </summary>
            <param name="siteGroupId"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Storefront.CategoryUrl.GetCategoriesUrl(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Get Resource Url for GetCategories
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. You can filter product category search results by any of its properties, including its position in the category hierarchy. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). <b>For example - "filter=IsDisplayed+eq+true"</b></param>
            <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Storefront.CategoryUrl.GetCategoryUrl(System.Nullable{System.Boolean},System.Int32)">
            <summary>
            Get Resource Url for GetCategory
            </summary>
            <param name="allowInactive">If true, allow inactive categories to be retrieved in the category list response. If false, the categories retrieved will not include ones marked inactive.</param>
            <param name="categoryId">Unique identifier for the storefront container used to organize products.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Storefront.CategoryUrl.GetCategoryTreeUrl">
            <summary>
            Get Resource Url for GetCategoryTree
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Storefront.ProductSearchResultUrl.SearchUrl(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Get Resource Url for Search
            </summary>
            <param name="facet">Individually list the facet fields you want to display in a storefront product search.</param>
            <param name="facetFieldRangeQuery">Display a range facet not specified in a template in a storefront product search by listing the facet field and the range to display.</param>
            <param name="facetHierDepth">If filtering using category facets in a hierarchy, the number of category hierarchy levels to return for the facet. This option is only available for category facets.</param>
            <param name="facetHierPrefix">If filtering using category facets in a hierarchy, the parent categories you want to skip in the storefront product search. This parameter is only available for category facets.</param>
            <param name="facetHierValue">If filtering using category facets in a hierarchy, the category in the hierarchy to begin faceting on. This parameter is only available for category facets.</param>
            <param name="facetPageSize">The number of facet values to return for one or more facets.</param>
            <param name="facetSettings">Settings reserved for future facet search functionality on a storefront product search.</param>
            <param name="facetStartIndex">When paging through multiple facets, the startIndex value for each facet.</param>
            <param name="facetTemplate">The facet template to use on the storefront. A template displays all facets associated with the template on the storefront product search. Currently, only category-level facet templates are available.</param>
            <param name="facetTemplateSubset">Display a subset of the facets defined in the template specified in facetTemplate parameter.</param>
            <param name="facetValueFilter">The facet values to apply to the filter.</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. You can filter product search results by any of its properties, including product code, type, category, and name. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). <b>For example - "filter=categoryId+eq+12"</b></param>
            <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="query">The terms to search on.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Storefront.ProductSearchResultUrl.SuggestUrl(System.Nullable{System.Int32},System.String)">
            <summary>
            Get Resource Url for Suggest
            </summary>
            <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="q">Text that the shopper is currently entering.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Storefront.ProductUrl.GetProductsUrl(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Get Resource Url for GetProducts
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Storefront.ProductUrl.GetProductUrl(System.Nullable{System.Boolean},System.String,System.String)">
            <summary>
            Get Resource Url for GetProduct
            </summary>
            <param name="allowInactive">If true, returns an inactive product as part of the query.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="variationProductCode">Merchant-created code associated with a specific product variation. Variation product codes maintain an association with the base product code.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Storefront.ProductUrl.ConfiguredProductUrl(System.Nullable{System.Boolean},System.String)">
            <summary>
            Get Resource Url for ConfiguredProduct
            </summary>
            <param name="includeOptionDetails">If true, the response returns details about the product. If false, returns a product summary such as the product name, price, and sale price.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Storefront.ProductUrl.ValidateProductUrl(System.String)">
            <summary>
            Get Resource Url for ValidateProduct
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.Accounts.CardUrl.GetAccountCardsUrl(System.Int32)">
            <summary>
            Get Resource Url for GetAccountCards
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.Accounts.CardUrl.AddAccountCardUrl(System.Int32)">
            <summary>
            Get Resource Url for AddAccountCard
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.Accounts.CardUrl.UpdateAccountCardUrl(System.Int32)">
            <summary>
            Get Resource Url for UpdateAccountCard
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.Accounts.CardUrl.DeleteAccountCardUrl(System.Int32,System.String)">
            <summary>
            Get Resource Url for DeleteAccountCard
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="cardId">Unique identifier of the credit card to delete.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.Accounts.CustomerAttributeUrl.GetAccountAttributeUrl(System.Int32,System.Int32)">
            <summary>
            Get Resource Url for GetAccountAttribute
            </summary>
            <param name="accountId">Identifier of the customer account associated with the attribute to retrieve.</param>
            <param name="attributeId">Identifier of the customer account attribute to retrieve.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.Accounts.CustomerAttributeUrl.GetAccountAttributesUrl(System.Int32,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Get Resource Url for GetAccountAttributes
            </summary>
            <param name="accountId">Identifier of the customer account associated with the attributes to retrieve.</param>
            <param name="filter"></param>
            <param name="pageSize"></param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.Accounts.CustomerAttributeUrl.AddAccountAttributesUrl(System.Int32)">
            <summary>
            Get Resource Url for AddAccountAttributes
            </summary>
            <param name="accountId">Identifier of the customer account associated with the new attribute.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.Accounts.CustomerAttributeUrl.UpdateAccountAttributeUrl(System.Int32,System.Nullable{System.Boolean})">
            <summary>
            Get Resource Url for UpdateAccountAttribute
            </summary>
            <param name="accountId">Identifier of the customer account associated with the attribute.</param>
            <param name="removeMissing">If true, remove the items missing from the collection. If false, do not remove items missing from the collection.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.Accounts.CustomerContactUrl.GetAccountContactUrl(System.Int32,System.Int32)">
            <summary>
            Get Resource Url for GetAccountContact
            </summary>
            <param name="accountId">Unique identifier of the customer account whose contact information is being retrieved.</param>
            <param name="contactId">Unique identifier of the customer account contact to retrieve.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.Accounts.CustomerContactUrl.GetAccountContactsUrl(System.Int32,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Get Resource Url for GetAccountContacts
            </summary>
            <param name="accountId">Unique identifier of the customer account associated with the contact information to retrieve.</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.Accounts.CustomerContactUrl.AddAccountContactUrl(System.Int32)">
            <summary>
            Get Resource Url for AddAccountContact
            </summary>
            <param name="accountId">Unique identifier of the customer account containing the new contact.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.Accounts.CustomerContactUrl.UpdateAccountContactUrl(System.Int32,System.Int32)">
            <summary>
            Get Resource Url for UpdateAccountContact
            </summary>
            <param name="accountId">Unique identifier of the customer account whose contact information is being updated.</param>
            <param name="contactId">Unique identifer of the customer account contact being updated.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.Accounts.CustomerContactUrl.DeleteAccountContactUrl(System.Int32,System.Int32)">
            <summary>
            Get Resource Url for DeleteAccountContact
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="contactId">Unique identifier of the customer account contact to delete.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.Accounts.CustomerGroupUrl.GetAccountGroupsUrl(System.Int32,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Get Resource Url for GetAccountGroups
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.Accounts.CustomerGroupUrl.GetAccountGroupUrl(System.Int32,System.Int32)">
            <summary>
            Get Resource Url for GetAccountGroup
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="groupId">Unique identifier of the customer group.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.Accounts.CustomerGroupUrl.AddAccountGroupUrl(System.Int32,System.Int32)">
            <summary>
            Get Resource Url for AddAccountGroup
            </summary>
            <param name="accountId">Unique identifier of the customer account to add to a group.</param>
            <param name="groupId">Unique identifier of the customer group to add the customer to.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.Accounts.CustomerGroupUrl.DeleteAccountGroupUrl(System.Int32,System.Int32)">
            <summary>
            Get Resource Url for DeleteAccountGroup
            </summary>
            <param name="accountId">Unique identifier of the customer account to remove from the group.</param>
            <param name="groupId">Unique identifier of the customer group.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.Accounts.CustomerNoteUrl.GetAccountNoteUrl(System.Int32,System.Int32)">
            <summary>
            Get Resource Url for GetAccountNote
            </summary>
            <param name="accountId">Unique identifier of the customer account that contains the note being retrieved.</param>
            <param name="noteId">Unique identifier of a particular note to retrieve.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.Accounts.CustomerNoteUrl.GetAccountNotesUrl(System.Int32,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Get Resource Url for GetAccountNotes
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">Indicates the zero-based offset in the complete result set where the returned entities begin, when creating paged results from a query. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.Accounts.CustomerNoteUrl.AddAccountNoteUrl(System.Int32)">
            <summary>
            Get Resource Url for AddAccountNote
            </summary>
            <param name="accountId">Unique identifier of the customer account for which to create the note.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.Accounts.CustomerNoteUrl.UpdateAccountNoteUrl(System.Int32,System.Int32)">
            <summary>
            Get Resource Url for UpdateAccountNote
            </summary>
            <param name="accountId">Unique identifier of the customer account note to modify.</param>
            <param name="noteId">Unique identifier of the note to update.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.Accounts.CustomerNoteUrl.DeleteAccountNoteUrl(System.Int32,System.Int32)">
            <summary>
            Get Resource Url for DeleteAccountNote
            </summary>
            <param name="accountId">Unique identifier of the customer account that contains the note being deleted.</param>
            <param name="noteId">Unique identifier of the customer account note being deleted.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.AddressValidationRequestUrl.ValidateAddressUrl">
            <summary>
            Get Resource Url for ValidateAddress
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.CustomerAccountUrl.GetAccountsUrl(System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Get Resource Url for GetAccounts
            </summary>
            <param name="fields">The fields to include in the response.</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize"></param>
            <param name="q">A list of customer account search terms to use in the query when searching across customer name and email. Separate multiple search terms with a space character.</param>
            <param name="qLimit">The maximum number of search results to return in the response. You can limit any range between 1-100.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.CustomerAccountUrl.GetAccountUrl(System.Int32)">
            <summary>
            Get Resource Url for GetAccount
            </summary>
            <param name="accountId">Unique identifier of the customer account to retrieve.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.CustomerAccountUrl.AddAccountUrl">
            <summary>
            Get Resource Url for AddAccount
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.CustomerAccountUrl.UpdateAccountUrl(System.Int32)">
            <summary>
            Get Resource Url for UpdateAccount
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.CustomerAccountUrl.DeleteAccountUrl(System.Int32)">
            <summary>
            Get Resource Url for DeleteAccount
            </summary>
            <param name="accountId">Unique identifier of the customer account to delete.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.CustomerGroupUrl.GetGroupsUrl(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Get Resource Url for GetGroups
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">Indicates the zero-based offset in the complete result set where the returned entities begin, when creating paged results from a query. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.CustomerGroupUrl.GetGroupUrl(System.Int32)">
            <summary>
            Get Resource Url for GetGroup
            </summary>
            <param name="groupId">Identifier of the customer group to retrieve.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.CustomerGroupUrl.AddGroupUrl">
            <summary>
            Get Resource Url for AddGroup
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.CustomerGroupUrl.UpdateGroupUrl(System.Int32)">
            <summary>
            Get Resource Url for UpdateGroup
            </summary>
            <param name="groupId">Identifier of the customer group to update.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.CustomerGroupUrl.DeleteGroupUrl(System.Int32)">
            <summary>
            Get Resource Url for DeleteGroup
            </summary>
            <param name="groupId">Identifier of the customer group to delete.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.LocationUrl.GetLocationUrl(System.Int32)">
            <summary>
            Get Resource Url for GetLocation
            </summary>
            <param name="locationId">Identifier of the location being retrieved.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.LocationUrl.GetLocationByNameUrl(System.String)">
            <summary>
            Get Resource Url for GetLocationByName
            </summary>
            <param name="name">The name of the location.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.LocationUrl.GetLocationsUrl(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Get Resource Url for GetLocations
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.VisitUrl.GetVisitUrl(System.String)">
            <summary>
            Get Resource Url for GetVisit
            </summary>
            <param name="visitId"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.VisitUrl.GetVisitsUrl(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Get Resource Url for GetVisits
            </summary>
            <param name="filter"></param>
            <param name="pageSize"></param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.VisitUrl.AddVisitUrl">
            <summary>
            Get Resource Url for AddVisit
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.VisitUrl.UpdateVisitUrl(System.String)">
            <summary>
            Get Resource Url for UpdateVisit
            </summary>
            <param name="visitId"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.AdjustmentUrl.ApplyShippingAdjustmentUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for ApplyShippingAdjustment
            </summary>
            <param name="orderId">Unique identifier of the order associated with the shipping adjustment.</param>
            <param name="updateMode">Specifies whether to apply the shipping adjustment by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal", "ApplyToDraft", or "ApplyAndCommit".</param>
            <param name="version">If applicable, the version of the order or draft to which to apply the shipping adjustment.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.AdjustmentUrl.ApplyAdjustmentUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for ApplyAdjustment
            </summary>
            <param name="orderId">Unique identifier of the order for which to apply the adjustment.</param>
            <param name="updateMode">Specifies whether to apply the adjustment by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal", "ApplyToDraft", or "ApplyAndCommit".</param>
            <param name="version">If applicable, the version of the order or draft for which to apply the adjustment.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.AdjustmentUrl.RemoveShippingAdjustmentUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for RemoveShippingAdjustment
            </summary>
            <param name="orderId">Unique identifier of the order with the applied shipping adjustment.</param>
            <param name="updateMode">Specifies whether to remove the shipping adjustment by updating the original order, updating the order in draft mode, or updating the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal", "ApplyToDraft", or "ApplyAndCommit".</param>
            <param name="version">If applicable, the version of the order or draft from which to remove the shipping adjustment.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.AdjustmentUrl.RemoveAdjustmentUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for RemoveAdjustment
            </summary>
            <param name="orderId">Unique identifier of the order for which to delete the adjustment.</param>
            <param name="updateMode">Specifies whether to remove the adjustment by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal", "ApplyToDraft", or "ApplyAndCommit".</param>
            <param name="version">If applicable, the version of the order or draft from which to remove the adjustment.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.AppliedDiscountUrl.ApplyCouponUrl(System.String,System.String,System.String,System.String)">
            <summary>
            Get Resource Url for ApplyCoupon
            </summary>
            <param name="couponCode"></param>
            <param name="orderId">Unique identifier of the order to associate the coupon. System-supplied and read-only.</param>
            <param name="updateMode">Specifies whether to apply the coupon by updating the original order, updating the order in draft mode, or updating the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal", "ApplyToDraft", or "ApplyAndCommit".</param>
            <param name="version">If applicable, the version of the order or order draft to which to apply the coupon.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.AppliedDiscountUrl.RemoveCouponUrl(System.String,System.String,System.String,System.String)">
            <summary>
            Get Resource Url for RemoveCoupon
            </summary>
            <param name="couponCode"></param>
            <param name="orderId">Unique identifier of the order with the coupon to remove.</param>
            <param name="updateMode">Specifies whether to remove the coupon by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal", "ApplyToDraft", or "ApplyAndCommit".</param>
            <param name="version">If applicable, the version of the order or order draft from which to remove the coupon.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.AppliedDiscountUrl.RemoveCouponsUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for RemoveCoupons
            </summary>
            <param name="orderId">Unique identifier of the order with the coupons to remove.</param>
            <param name="updateMode">Specifies whether to remove coupons by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal", "ApplyToDraft", or "ApplyAndCommit".</param>
            <param name="version">If applicable, the version of the order or order draft from which to remove coupons.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.Attributedefinition.AttributeSetUrl.GetAttributeSetByNameUrl(System.String)">
            <summary>
            Get Resource Url for GetAttributeSetByName
            </summary>
            <param name="fqn">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.Attributedefinition.AttributeSetUrl.GetAttributeSetsUrl(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Get Resource Url for GetAttributeSets
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">Indicates the zero-based offset in the complete result set where the returned entities begin, when creating paged results from a query. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.Attributedefinition.AttributeSetUrl.GetAttributeSetUrl(System.Int32)">
            <summary>
            Get Resource Url for GetAttributeSet
            </summary>
            <param name="attributeSetId">Identifier of the attribute set being retrieved.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.Attributedefinition.AttributeSetUrl.CreateAttributeSetUrl">
            <summary>
            Get Resource Url for CreateAttributeSet
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.Attributedefinition.AttributeSetUrl.UpdateAttributeSetUrl(System.Int32)">
            <summary>
            Get Resource Url for UpdateAttributeSet
            </summary>
            <param name="attributeSetId">Identifier of the attribute set being updated.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.Attributedefinition.AttributeSetUrl.UpsertAttributeSetAssignmentUrl">
            <summary>
            Get Resource Url for UpsertAttributeSetAssignment
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.Attributedefinition.AttributeSetUrl.DeleteAttributeSetUrl(System.Int32)">
            <summary>
            Get Resource Url for DeleteAttributeSet
            </summary>
            <param name="attributeSetId">Identifier of the attribute set being deleted.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.Attributedefinition.AttributeSetUrl.RemoveAttributeSetAssignmentUrl(System.Int32,System.Int32)">
            <summary>
            Get Resource Url for RemoveAttributeSetAssignment
            </summary>
            <param name="attributeSetId">Identifier of the attribute set.</param>
            <param name="locationId">Identifier of the location. Locations describe where in the application the attribute set definition will be rendered (such as a page).</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.Attributedefinition.AttributeSetUrl.DeleteAttributeSetByNameUrl(System.String)">
            <summary>
            Get Resource Url for DeleteAttributeSetByName
            </summary>
            <param name="fqn">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.Attributedefinition.AttributeUrl.GetAttributeByNameUrl(System.String)">
            <summary>
            Get Resource Url for GetAttributeByName
            </summary>
            <param name="fqn">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.Attributedefinition.AttributeUrl.GetAttributesUrl(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Get Resource Url for GetAttributes
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">Indicates the zero-based offset in the complete result set where the returned entities begin, when creating paged results from a query. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.Attributedefinition.AttributeUrl.GetAttributeUrl(System.Int32)">
            <summary>
            Get Resource Url for GetAttribute
            </summary>
            <param name="attributeId">Identifier of the single order attribute to retrieve.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.Attributedefinition.AttributeUrl.CreateAttributeUrl">
            <summary>
            Get Resource Url for CreateAttribute
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.Attributedefinition.AttributeUrl.UpdateAttributeUrl(System.Int32)">
            <summary>
            Get Resource Url for UpdateAttribute
            </summary>
            <param name="attributeId">Unique identifier of the attribute.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.Attributedefinition.AttributeUrl.DeleteAttributeUrl(System.Int32)">
            <summary>
            Get Resource Url for DeleteAttribute
            </summary>
            <param name="attributeId">Unique identifier of the attribute.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.Attributedefinition.AttributeUrl.DeleteAttributeByNameUrl(System.String)">
            <summary>
            Get Resource Url for DeleteAttributeByName
            </summary>
            <param name="fqn">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.BillingInfoUrl.GetBillingInfoUrl(System.Nullable{System.Boolean},System.String)">
            <summary>
            Get Resource Url for GetBillingInfo
            </summary>
            <param name="draft">If true, retrieve the draft version of the order billing information, which might include uncommitted changes.</param>
            <param name="orderId">Unique identifier of the order.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.BillingInfoUrl.SetBillingInfoUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for SetBillingInfo
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="updateMode">Specifies whether to set the billing information by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal", "ApplyToDraft", or "ApplyAndCommit".</param>
            <param name="version">If applicable, the version of the order or draft for which to set the billing information.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.LocationUrl.GetLocationUrl(System.Int32)">
            <summary>
            Get Resource Url for GetLocation
            </summary>
            <param name="locationId">Identifier of the location specified in the order.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.LocationUrl.GetLocationByNameUrl(System.String)">
            <summary>
            Get Resource Url for GetLocationByName
            </summary>
            <param name="name">Location name provided in the request.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.LocationUrl.GetLocationsUrl(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Get Resource Url for GetLocations
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.OrderAttributeUrl.GetOrderAttributesUrl(System.String)">
            <summary>
            Get Resource Url for GetOrderAttributes
            </summary>
            <param name="orderId">Identifier of the order whose order attributes are being retrieved.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.OrderAttributeUrl.GetOrderAttributeSetUrl(System.Int32,System.String)">
            <summary>
            Get Resource Url for GetOrderAttributeSet
            </summary>
            <param name="attributeSetId">Identifier of the attribute set whose order attribute set is being retrieved.</param>
            <param name="orderId">Identifier of the order whose order attribute set is being retrieved.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.OrderAttributeUrl.CreateOrderAttributesUrl(System.String)">
            <summary>
            Get Resource Url for CreateOrderAttributes
            </summary>
            <param name="orderId">Identifier of the order whose attributes are being created.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.OrderAttributeUrl.UpdateOrderAttributesUrl(System.String,System.Nullable{System.Boolean})">
            <summary>
            Get Resource Url for UpdateOrderAttributes
            </summary>
            <param name="orderId">Identifier of the order whose order attributes are being updated.</param>
            <param name="removeMissing">If true, the operation removes missing properties so that the updated order attributes will not show properties with a null value.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.OrderItemUrl.GetOrderItemUrl(System.Nullable{System.Boolean},System.String,System.String)">
            <summary>
            Get Resource Url for GetOrderItem
            </summary>
            <param name="draft">If true, retrieve the draft version of this order item, which might include uncommitted changes to the order item, the order, or other order components.</param>
            <param name="orderId">Unique identifier of the order item to retrieve.</param>
            <param name="orderItemId">Unique identifier of the order item details to retrieve.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.OrderItemUrl.GetOrderItemsUrl(System.Nullable{System.Boolean},System.String)">
            <summary>
            Get Resource Url for GetOrderItems
            </summary>
            <param name="draft">If true, retrieve the draft version of the order's items, which might include uncommitted changes to one or more order items, the order itself, or other order components.</param>
            <param name="orderId">Unique identifier of the order items to retrieve.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.OrderItemUrl.CreateOrderItemUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for CreateOrderItem
            </summary>
            <param name="orderId">Unique identifier of the order for which to add the item.</param>
            <param name="updateMode">Specifies whether to add the item by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal", "ApplyToDraft", or "ApplyAndCommit".</param>
            <param name="version">If applicable, the version of the order or order draft for which to add the item.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.OrderItemUrl.UpdateOrderItemDiscountUrl(System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
            Get Resource Url for UpdateOrderItemDiscount
            </summary>
            <param name="discountId">Unique identifier of the discount. System-supplied and read only.</param>
            <param name="orderId">Unique identifier of the order associated with the item discount.</param>
            <param name="orderItemId">Unique identifier of the item in the order.</param>
            <param name="updateMode">Specifies whether to change the item discount by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal", "ApplyToDraft", or "ApplyAndCommit".</param>
            <param name="version">If applicable, the version of the order or order draft for which to update the item discount.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.OrderItemUrl.UpdateItemProductPriceUrl(System.String,System.String,System.Decimal,System.String,System.String)">
            <summary>
            Get Resource Url for UpdateItemProductPrice
            </summary>
            <param name="orderId">Unique identifier of the order containing the item to price override.</param>
            <param name="orderItemId">Unique identifier of the item in the order to price override.</param>
            <param name="price">The override price to specify for this item in the specified order.</param>
            <param name="updateMode">Specifies whether to change the product price by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal", "ApplyToDraft", or "ApplyAndCommit".</param>
            <param name="version">If applicable, the version of the order or order draft for which to update the item price.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.OrderItemUrl.UpdateItemQuantityUrl(System.String,System.String,System.Int32,System.String,System.String)">
            <summary>
            Get Resource Url for UpdateItemQuantity
            </summary>
            <param name="orderId">Unique identifier of the order containing the item to update quantity.</param>
            <param name="orderItemId">Unique identifier of the item in the order to update quantity.</param>
            <param name="quantity">The quantity of the item in the order to update.</param>
            <param name="updateMode">Specifies whether to change the item quantity by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal", "ApplyToDraft", or "ApplyAndCommit".</param>
            <param name="version">If applicable, the version of the order or order draft for which to update the item quantity.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.OrderItemUrl.DeleteOrderItemUrl(System.String,System.String,System.String,System.String)">
            <summary>
            Get Resource Url for DeleteOrderItem
            </summary>
            <param name="orderId">Unique identifier of the order with the item to remove.</param>
            <param name="orderItemId">Unique identifier of the item to remove from the order.</param>
            <param name="updateMode">Specifies whether to remove the item by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal", "ApplyToDraft", or "ApplyAndCommit".</param>
            <param name="version">If applicable, the version of the order or order draft from which to delete the item.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.OrderNoteUrl.GetOrderNotesUrl(System.String)">
            <summary>
            Get Resource Url for GetOrderNotes
            </summary>
            <param name="orderId">Unique identifier of the order whose notes are retrieved.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.OrderNoteUrl.GetOrderNoteUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetOrderNote
            </summary>
            <param name="noteId">Unique identifier of the note text to retrieve.</param>
            <param name="orderId">Unique identifier of the order note to retrieve.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.OrderNoteUrl.CreateOrderNoteUrl(System.String)">
            <summary>
            Get Resource Url for CreateOrderNote
            </summary>
            <param name="orderId">Unique identifier of the order to add a note.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.OrderNoteUrl.UpdateOrderNoteUrl(System.String,System.String)">
            <summary>
            Get Resource Url for UpdateOrderNote
            </summary>
            <param name="noteId">Unique identifier of the note whose text is being updated.</param>
            <param name="orderId">Unique identifier of the order whose note is being updated.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.OrderNoteUrl.DeleteOrderNoteUrl(System.String,System.String)">
            <summary>
            Get Resource Url for DeleteOrderNote
            </summary>
            <param name="noteId">Unique identifier of the note text to delete.</param>
            <param name="orderId">Unique identifier of the order note to delete.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.PackageUrl.GetPackageUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetPackage
            </summary>
            <param name="orderId">Unique identifier of the order associated with the package to retrieve.</param>
            <param name="packageId">Unique identifier of the package to retrieve.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.PackageUrl.GetPackageLabelUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetPackageLabel
            </summary>
            <param name="orderId">Unique identifier of the order associated with the package label to retrieve.</param>
            <param name="packageId">Unique identifier of the package for which to retrieve the label.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.PackageUrl.CreatePackageUrl(System.String)">
            <summary>
            Get Resource Url for CreatePackage
            </summary>
            <param name="orderId">Unique identifier of the order associated with this package.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.PackageUrl.UpdatePackageUrl(System.String,System.String)">
            <summary>
            Get Resource Url for UpdatePackage
            </summary>
            <param name="orderId">Unique identifier of the order associated with the package to update.</param>
            <param name="packageId">Unique identifier of the package of order items to update.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.PackageUrl.DeletePackageUrl(System.String,System.String)">
            <summary>
            Get Resource Url for DeletePackage
            </summary>
            <param name="orderId">Unique identifier of the order associated with the package to delete.</param>
            <param name="packageId">Unique identifier of the package to delete.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.PaymentUrl.GetPaymentsUrl(System.String)">
            <summary>
            Get Resource Url for GetPayments
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.PaymentUrl.GetPaymentUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetPayment
            </summary>
            <param name="orderId">Unique identifier of the order associated with the payment transaction.</param>
            <param name="paymentId">Unique identifier of the payment transaction submitted for the order.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.PaymentUrl.GetAvailablePaymentActionsUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetAvailablePaymentActions
            </summary>
            <param name="orderId">Unique identifier of the order associated with the payment.</param>
            <param name="paymentId">Unique identifer of the payment for which to retrieve available actions.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.PaymentUrl.PerformPaymentActionUrl(System.String,System.String)">
            <summary>
            Get Resource Url for PerformPaymentAction
            </summary>
            <param name="orderId">Unique identifier of the order associated with the payment.</param>
            <param name="paymentId">Unique identifer of the payment for which to perform the action.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.PaymentUrl.CreatePaymentActionUrl(System.String)">
            <summary>
            Get Resource Url for CreatePaymentAction
            </summary>
            <param name="orderId">Unique identifier of the order for which to apply the payment.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.ShipmentUrl.GetAvailableShipmentActionsUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetAvailableShipmentActions
            </summary>
            <param name="orderId">Unique identifier of the order for which to get a list of available actions.</param>
            <param name="packageId">Unique identifier for the physical package associated with the order for which to get a list of available actions.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.ShipmentUrl.GetShipmentUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetShipment
            </summary>
            <param name="orderId">Unique identifier of the order associated with the shipment to retrieve.</param>
            <param name="shipmentId">Unique identifier of the shipment to retrieve.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.ShipmentUrl.GetAvailableShipmentMethodsUrl(System.String)">
            <summary>
            Get Resource Url for GetAvailableShipmentMethods
            </summary>
            <param name="orderId">Unique identifier of the order for the available shipment methods being retrieved.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.ShipmentUrl.CreatePackageShipmentsUrl(System.String)">
            <summary>
            Get Resource Url for CreatePackageShipments
            </summary>
            <param name="orderId">Unique identifier of the order for this shipment.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.ShipmentUrl.PerformShipmentActionUrl(System.String)">
            <summary>
            Get Resource Url for PerformShipmentAction
            </summary>
            <param name="orderId">Unique identifier of the order associated with the shipment for which to perform the action.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.ShipmentUrl.DeleteShipmentUrl(System.String,System.String)">
            <summary>
            Get Resource Url for DeleteShipment
            </summary>
            <param name="orderId">Unique identifier of the order to cancel shipment.</param>
            <param name="shipmentId">Unique identifier of the shipment to cancel.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.ShippingInfoUrl.GetShippingInfoUrl(System.Nullable{System.Boolean},System.String)">
            <summary>
            Get Resource Url for GetShippingInfo
            </summary>
            <param name="draft">If true, retrieve the draft version of the order's shipping information, which might include uncommitted changes.</param>
            <param name="orderId">Unique identifier of the order associated with the shipping information to retrieve.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.ShippingInfoUrl.SetShippingInfoUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for SetShippingInfo
            </summary>
            <param name="orderId">Unique identifier of the order associated with the shipping information to update.</param>
            <param name="updateMode">Specifies whether to set the shipping information by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal", "ApplyToDraft", or "ApplyAndCommit".</param>
            <param name="version">If applicable, the version of the order or draft for which to set the shipping information.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.OrderUrl.GetOrdersUrl(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Get Resource Url for GetOrders
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. You can filter an order's search results by any of its properties, including status, contact information, or total. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). <b>For example - "filter=Status+eq+Submitted"</b></param>
            <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="q">A list of order search terms to use in the query when searching across order number and the name or email of the billing contact. Separate multiple search terms with a space character.</param>
            <param name="qLimit">The maximum number of search results to return in the response. You can limit any range between 1-100.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.OrderUrl.GetAvailableActionsUrl(System.String)">
            <summary>
            Get Resource Url for GetAvailableActions
            </summary>
            <param name="orderId">Unique identifier of the available order actions to get.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.OrderUrl.GetOrderUrl(System.Nullable{System.Boolean},System.String)">
            <summary>
            Get Resource Url for GetOrder
            </summary>
            <param name="draft">If true, retrieve the draft version of the order, which might include uncommitted changes to the order or its components.</param>
            <param name="orderId">Unique identifier of the order details to get.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.OrderUrl.CreateOrderUrl">
            <summary>
            Get Resource Url for CreateOrder
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.OrderUrl.CreateOrderFromCartUrl(System.String)">
            <summary>
            Get Resource Url for CreateOrderFromCart
            </summary>
            <param name="cartId">Unique identifier of the cart. This is the original cart ID expressed as a GUID.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.OrderUrl.PerformOrderActionUrl(System.String)">
            <summary>
            Get Resource Url for PerformOrderAction
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.OrderUrl.UpdateOrderDiscountUrl(System.Int32,System.String,System.String,System.String)">
            <summary>
            Get Resource Url for UpdateOrderDiscount
            </summary>
            <param name="discountId">Unique identifier of the discount. System-supplied and read only.</param>
            <param name="orderId">Unique identifier of the order discount. System-supplied and read only.</param>
            <param name="updateMode">Specifies whether to modify the discount by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal", "ApplyToDraft", or "ApplyAndCommit".</param>
            <param name="version">If applicable, the version of the order or draft for which to update the discount.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.OrderUrl.DeleteOrderDraftUrl(System.String,System.String)">
            <summary>
            Get Resource Url for DeleteOrderDraft
            </summary>
            <param name="orderId">Unique identifier of the order associated with the draft to delete.</param>
            <param name="version">If applicable, the version of the order draft to delete.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.OrderUrl.ChangeOrderUserIdUrl(System.String)">
            <summary>
            Get Resource Url for ChangeOrderUserId
            </summary>
            <param name="orderId"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.OrderUrl.UpdateOrderUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for UpdateOrder
            </summary>
            <param name="orderId">Unique identifier of the order to update.</param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal", "ApplyToDraft", or "ApplyAndCommit".</param>
            <param name="version">If applicable, the version of the order or draft to update.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Returns.PackageUrl.GetPackageUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetPackage
            </summary>
            <param name="packageId">Unique identifier of the return replacement package to retrieve.</param>
            <param name="returnId">Unique identifier of the return associated with the replacement package to retrieve.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Returns.PackageUrl.GetPackageLabelUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetPackageLabel
            </summary>
            <param name="packageId">Unique identifier of the return replacement package for which to retrieve the label.</param>
            <param name="returnId">Unique identifier of the return associated with the replacement package label to retrieve.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Returns.PackageUrl.CreatePackageUrl(System.String)">
            <summary>
            Get Resource Url for CreatePackage
            </summary>
            <param name="returnId">Unique identifier of the return for which to create a replacement package.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Returns.PackageUrl.UpdatePackageUrl(System.String,System.String)">
            <summary>
            Get Resource Url for UpdatePackage
            </summary>
            <param name="packageId">Unique identifier of the return replacement package to update.</param>
            <param name="returnId">Unique identifier of the return associated with the replacement package to update.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Returns.PackageUrl.DeletePackageUrl(System.String,System.String)">
            <summary>
            Get Resource Url for DeletePackage
            </summary>
            <param name="packageId">Unique identifier of the return replacement package to delete.</param>
            <param name="returnId">Unique identifier of the return associated with the replacement package to delete.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Returns.ShipmentUrl.GetShipmentUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetShipment
            </summary>
            <param name="returnId">Unique identifier of the return associated with the replacement shipment to retrieve.</param>
            <param name="shipmentId">Unique identifier of the return replacement shipment to retrieve.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Returns.ShipmentUrl.CreatePackageShipmentsUrl(System.String)">
            <summary>
            Get Resource Url for CreatePackageShipments
            </summary>
            <param name="returnId">Unique identifier of the return for which to create replacement package shipments.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Returns.ShipmentUrl.DeleteShipmentUrl(System.String,System.String)">
            <summary>
            Get Resource Url for DeleteShipment
            </summary>
            <param name="returnId">Unique identifier of the return associated with the replacement shipment to delete.</param>
            <param name="shipmentId">Unique identifier of the return replacement shipment to delete.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.ReturnUrl.GetReturnsUrl(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Get Resource Url for GetReturns
            </summary>
            <param name="filter"></param>
            <param name="pageSize"></param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.ReturnUrl.GetReturnUrl(System.String)">
            <summary>
            Get Resource Url for GetReturn
            </summary>
            <param name="returnId">Returns the properties of the return specified in the request as well as system-supplied information.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.ReturnUrl.GetAvailableReturnActionsUrl(System.String)">
            <summary>
            Get Resource Url for GetAvailableReturnActions
            </summary>
            <param name="returnId">Retrieves a list of the actions available to perform for the specified return based on its current state.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.ReturnUrl.GetPaymentsUrl(System.String)">
            <summary>
            Get Resource Url for GetPayments
            </summary>
            <param name="returnId">Returns the details of the refund payment associated with the return specified in the request.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.ReturnUrl.GetPaymentUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetPayment
            </summary>
            <param name="paymentId">Unique identifier of the return payment to retrieve.</param>
            <param name="returnId">Unique identifier of the return associated with the payment.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.ReturnUrl.GetAvailablePaymentActionsForReturnUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetAvailablePaymentActionsForReturn
            </summary>
            <param name="paymentId">Unique identifier of the payment for which to perform the action.</param>
            <param name="returnId">Unique identifier of the return associated with the payment.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.ReturnUrl.CreateReturnUrl">
            <summary>
            Get Resource Url for CreateReturn
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.ReturnUrl.PerformPaymentActionForReturnUrl(System.String,System.String)">
            <summary>
            Get Resource Url for PerformPaymentActionForReturn
            </summary>
            <param name="paymentId">Unique identifier of the return payment to update.</param>
            <param name="returnId">Unique identifier of the return associated with the refund payment.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.ReturnUrl.CreatePaymentActionForReturnUrl(System.String)">
            <summary>
            Get Resource Url for CreatePaymentActionForReturn
            </summary>
            <param name="returnId">Unique identifier of the return associated with the payment action.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.ReturnUrl.PerformReturnActionsUrl">
            <summary>
            Get Resource Url for PerformReturnActions
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.ReturnUrl.UpdateReturnUrl(System.String)">
            <summary>
            Get Resource Url for UpdateReturn
            </summary>
            <param name="returnId">Unique identifier of the return.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.ReturnUrl.DeleteReturnUrl(System.String)">
            <summary>
            Get Resource Url for DeleteReturn
            </summary>
            <param name="returnId">Unique identifier of the return to delete from the order.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Settings.ApplicationUrl.ThirdPartyUpdateApplicationUrl">
            <summary>
            Get Resource Url for ThirdPartyUpdateApplication
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Settings.CapabilityUrl.GetCapabilitiesUrl(System.String)">
            <summary>
            Get Resource Url for GetCapabilities
            </summary>
            <param name="filter"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Settings.CheckoutSettingsUrl.GetCheckoutSettingsUrl">
            <summary>
            Get Resource Url for GetCheckoutSettings
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Settings.Checkout.CustomerCheckoutSettingsUrl.GetCustomerCheckoutSettingsUrl">
            <summary>
            Get Resource Url for GetCustomerCheckoutSettings
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Settings.Checkout.CustomerCheckoutSettingsUrl.UpdateCustomerCheckoutSettingsUrl">
            <summary>
            Get Resource Url for UpdateCustomerCheckoutSettings
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Settings.Checkout.OrderProcessingSettingsUrl.GetOrderProcessingSettingsUrl">
            <summary>
            Get Resource Url for GetOrderProcessingSettings
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Settings.Checkout.OrderProcessingSettingsUrl.UpdateOrderProcessingSettingsUrl">
            <summary>
            Get Resource Url for UpdateOrderProcessingSettings
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Settings.Checkout.PaymentSettingsUrl.GetPaymentSettingsUrl">
            <summary>
            Get Resource Url for GetPaymentSettings
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Settings.Checkout.PaymentSettingsUrl.GetActiveGatewayForCountryUrl(System.String)">
            <summary>
            Get Resource Url for GetActiveGatewayForCountry
            </summary>
            <param name="countryCode"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Settings.Checkout.PaymentSettingsUrl.GetGatewayDefinitionsUrl">
            <summary>
            Get Resource Url for GetGatewayDefinitions
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Settings.Checkout.PaymentSettingsUrl.GetGatewayUrl(System.String)">
            <summary>
            Get Resource Url for GetGateway
            </summary>
            <param name="gatewayId"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Settings.Checkout.PaymentSettingsUrl.CreateGatewayUrl">
            <summary>
            Get Resource Url for CreateGateway
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Settings.Checkout.PaymentSettingsUrl.UpdatePaymentSettingsUrl">
            <summary>
            Get Resource Url for UpdatePaymentSettings
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Settings.Checkout.PaymentSettingsUrl.UpdateGatewayUrl(System.String)">
            <summary>
            Get Resource Url for UpdateGateway
            </summary>
            <param name="gatewayId"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Settings.GeneralSettingsUrl.GetGeneralSettingsUrl">
            <summary>
            Get Resource Url for GetGeneralSettings
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Settings.GeneralSettingsUrl.UpdateGeneralSettingsUrl">
            <summary>
            Get Resource Url for UpdateGeneralSettings
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Settings.General.IPBlockUrl.GetIPBlocksUrl">
            <summary>
            Get Resource Url for GetIPBlocks
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Settings.General.IPBlockUrl.GetIPBlockUrl(System.Int32)">
            <summary>
            Get Resource Url for GetIPBlock
            </summary>
            <param name="ipBlockId">Unique identifier of the IP block.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Settings.General.IPBlockUrl.CreateIPBlockUrl">
            <summary>
            Get Resource Url for CreateIPBlock
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Settings.General.IPBlockUrl.UpdateIPBlockUrl(System.Int32)">
            <summary>
            Get Resource Url for UpdateIPBlock
            </summary>
            <param name="ipBlockId">Identifier of the IP block.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Settings.General.IPBlockUrl.DeleteIPBlockUrl(System.Int32)">
            <summary>
            Get Resource Url for DeleteIPBlock
            </summary>
            <param name="ipBlockId">Unique identifier of the IP block.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Settings.General.TaxableTerritoryUrl.GetTaxableTerritoriesUrl">
            <summary>
            Get Resource Url for GetTaxableTerritories
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Settings.General.TaxableTerritoryUrl.AddTaxableTerritoryUrl">
            <summary>
            Get Resource Url for AddTaxableTerritory
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Settings.General.TaxableTerritoryUrl.UpdateTaxableTerritoriesUrl">
            <summary>
            Get Resource Url for UpdateTaxableTerritories
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Settings.Shipping.ContactUrl.GetShippingOriginAddressUrl">
            <summary>
            Get Resource Url for GetShippingOriginAddress
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Settings.Shipping.ContactUrl.CreateShippingOriginAddressUrl">
            <summary>
            Get Resource Url for CreateShippingOriginAddress
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Settings.Shipping.ContactUrl.UpdateShippingOriginAddressUrl">
            <summary>
            Get Resource Url for UpdateShippingOriginAddress
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Settings.Shipping.FeatureUrl.GetActiveRateProvidersUrl">
            <summary>
            Get Resource Url for GetActiveRateProviders
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Settings.Shipping.FeatureUrl.AddActiveRateProviderUrl">
            <summary>
            Get Resource Url for AddActiveRateProvider
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Settings.Shipping.FeatureUrl.UpdateActiveRateProvidersUrl">
            <summary>
            Get Resource Url for UpdateActiveRateProviders
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Settings.Shipping.SiteShippingHandlingFeeUrl.GetOrderHandlingFeeUrl">
            <summary>
            Get Resource Url for GetOrderHandlingFee
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Settings.Shipping.SiteShippingHandlingFeeUrl.CreateOrderHandlingFeeUrl">
            <summary>
            Get Resource Url for CreateOrderHandlingFee
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Settings.Shipping.SiteShippingHandlingFeeUrl.UpdateOrderHandlingFeeUrl">
            <summary>
            Get Resource Url for UpdateOrderHandlingFee
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Settings.Shipping.SiteShippingRegionUrl.GetShippingRegionsUrl">
            <summary>
            Get Resource Url for GetShippingRegions
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Settings.Shipping.SiteShippingRegionUrl.UpdateShippingRegionsUrl">
            <summary>
            Get Resource Url for UpdateShippingRegions
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Settings.Shipping.SiteShippingRegionUrl.DeleteShippingRegionsUrl">
            <summary>
            Get Resource Url for DeleteShippingRegions
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Settings.SiteShippingSettingsUrl.GetSiteShippingSettingsUrl">
            <summary>
            Get Resource Url for GetSiteShippingSettings
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.DocumentDraftSummaryUrl.ListDocumentDraftSummariesUrl(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get Resource Url for ListDocumentDraftSummaries
            </summary>
            <param name="documentLists">Lists that contain the document drafts.</param>
            <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="startIndex">Indicates the zero-based offset in the complete result set where the returned entities begin, when creating paged results from a query. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.DocumentDraftSummaryUrl.PublishDocumentsUrl(System.String)">
            <summary>
            Get Resource Url for PublishDocuments
            </summary>
            <param name="documentLists">List of document lists that contain documents to publish.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.DocumentDraftSummaryUrl.DeleteDocumentDraftsUrl(System.String,System.String)">
            <summary>
            Get Resource Url for DeleteDocumentDrafts
            </summary>
            <param name="documentIds">Unique identifiers of the documents to delete.</param>
            <param name="documentLists">List of document lists that contain documents to delete.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.Documentlists.DocumentTreeUrl.GetTreeDocumentContentUrl(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetTreeDocumentContent
            </summary>
            <param name="documentListName">The name of the document list associated with the document.</param>
            <param name="documentName">The name of the document, which is unique within its folder.</param>
            <param name="folderId">If applicable, the unique identifier of the folder that contains the document.</param>
            <param name="folderPath">If applicable, the path of the folder hierarchy location associated with the document.</param>
            <param name="publishState">The current state of the document, which is Active, Draft, or Latest. Active documents are published and cannot be deleted. Querying Latest returns the most recent version of the document, regardless of whether it is published or a draft.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.Documentlists.DocumentTreeUrl.GetTreeDocumentUrl(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetTreeDocument
            </summary>
            <param name="documentListName">The name of the document list associated with the document.</param>
            <param name="documentName">The name of the document, which is unique within its folder.</param>
            <param name="folderId">If applicable, the unique identifier of the folder that contains the document.</param>
            <param name="folderPath">If applicable, the path of the folder hierarchy location that contains the document.</param>
            <param name="publishState">The current state of the document, which is Active, Draft, or Latest. Active documents are published and cannot be deleted. Querying Latest returns the most recent version of the document, regardless of whether it is published or a draft.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.Documentlists.DocumentTreeUrl.UpdateTreeDocumentContentUrl(System.String,System.String,System.String,System.String)">
            <summary>
            Get Resource Url for UpdateTreeDocumentContent
            </summary>
            <param name="documentListName">The name of the document list associated with the document.</param>
            <param name="documentName">The name of the document, which is unique within its folder.</param>
            <param name="folderId">If applicable, the unique identifier of the folder that contains the document.</param>
            <param name="folderPath">If applicable, the path of the folder hierarchy location associated with the document.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.Documentlists.DocumentTreeUrl.DeleteTreeDocumentContentUrl(System.String,System.String,System.String,System.String)">
            <summary>
            Get Resource Url for DeleteTreeDocumentContent
            </summary>
            <param name="documentListName">The name of the document list associated with the document.</param>
            <param name="documentName">The name of the document, which is unique within its folder.</param>
            <param name="folderId">If applicable, the unique identifier of the folder that contains the document.</param>
            <param name="folderPath">If applicable, the path of the folder hierarchy location associated with the document.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.Documentlists.DocumentUrl.GetDocumentContentUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetDocumentContent
            </summary>
            <param name="documentId">Unique identifier of the document.</param>
            <param name="documentListName">The name of the document list associated with the document.</param>
            <param name="publishState">The current state of the document, which is Active, Draft, or Latest. Active documents are published and cannot be deleted. Querying Latest returns the most recent version of the document, regardless of whether it is published or a draft.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.Documentlists.DocumentUrl.GetDocumentUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetDocument
            </summary>
            <param name="documentId">Identifier of the document being retrieved.</param>
            <param name="documentListName">The name of the document list associated with the document to retrieve.</param>
            <param name="publishState">The current state of the document, which is Active, Draft, or Latest. Active documents are published and cannot be deleted. Querying Latest returns the most recent version of the document, regardless of whether it is published or a draft.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.Documentlists.DocumentUrl.GetDocumentsUrl(System.String,System.String,System.Nullable{System.Int64},System.String,System.String,System.Nullable{System.Int64})">
            <summary>
            Get Resource Url for GetDocuments
            </summary>
            <param name="documentListName">The name of the document list.</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. You can filter a document's search results by any of its properties, including its name or folder path. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). <b>For example - "filter=Name+sw+Events"</b></param>
            <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="publishState">The current state of the document, which is Active, Draft, or Latest. Active documents are published and cannot be deleted. Querying Latest returns the most recent version of the document, regardless of whether it is published or a draft.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">Indicates the zero-based offset in the complete result set where the returned entities begin, when creating paged results from a query. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.Documentlists.DocumentUrl.CreateDocumentUrl(System.String,System.String)">
            <summary>
            Get Resource Url for CreateDocument
            </summary>
            <param name="documentListName">The descriptive alphanumeric document list name being created.</param>
            <param name="publishState">The current state of the document, which is Active, Draft, or Latest. Active documents are published and cannot be deleted. Querying Latest returns the most recent version of the document, regardless of whether it is published or a draft.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.Documentlists.DocumentUrl.UpdateDocumentContentUrl(System.String,System.String)">
            <summary>
            Get Resource Url for UpdateDocumentContent
            </summary>
            <param name="documentId">Unique identifier of the document.</param>
            <param name="documentListName">The name of the document list associated with the document.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.Documentlists.DocumentUrl.UpdateDocumentUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for UpdateDocument
            </summary>
            <param name="documentId">Unique identifier of the document to update.</param>
            <param name="documentListName">Name of the document list associated with the document.</param>
            <param name="publishState">The current state of the document, which is Active, Draft, or Latest. Active documents are published and cannot be deleted. Querying Latest returns the most recent version of the document, regardless of whether it is published or a draft.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.Documentlists.DocumentUrl.DeleteDocumentContentUrl(System.String,System.String)">
            <summary>
            Get Resource Url for DeleteDocumentContent
            </summary>
            <param name="documentId">Unique identifier of the document.</param>
            <param name="documentListName">The name of the document list associated with the document.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.Documentlists.DocumentUrl.DeleteDocumentUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for DeleteDocument
            </summary>
            <param name="documentId">Identifier of the document being deleted.</param>
            <param name="documentListName">The name of the document list associated with the document list being deleted.</param>
            <param name="publishState">The current state of the document, which is Active, Draft, or Latest. Active documents are published and cannot be deleted. Querying Latest returns the most recent version of the document, regardless of whether it is published or a draft.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.Documentlists.FacetUrl.GetFacetsUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetFacets
            </summary>
            <param name="documentListName">The document list associated with the facets to retrieve.</param>
            <param name="propertyName">The property name associated with the facets to retrieve.</param>
            <param name="publishState">The current state of the document, which is Active, Draft, or Latest. Active documents are published and cannot be deleted. Querying Latest returns the most recent version of the document, regardless of whether it is published or a draft.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.Documentlists.FolderTreeUrl.GetFolderTreeUrl(System.String,System.Nullable{System.Int64},System.String,System.String)">
            <summary>
            Get Resource Url for GetFolderTree
            </summary>
            <param name="documentListName">The name of the document list that contains this folder hierarchy.</param>
            <param name="levels">The number of levels in the folder hierarchy to return.</param>
            <param name="rootFolderId">The unique identifier of the top-level folder in the document list.</param>
            <param name="rootFolderPath">The location in the document hierarchy of the top-level folder in the document list.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.Documentlists.FolderUrl.GetFolderUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetFolder
            </summary>
            <param name="documentListName">The name of the document list associated with the folder to retrieve.</param>
            <param name="folderId">The unique identifier of the folder to retrieve.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.Documentlists.FolderUrl.GetFoldersUrl(System.String,System.String,System.Nullable{System.Int64},System.String,System.Nullable{System.Int64})">
            <summary>
            Get Resource Url for GetFolders
            </summary>
            <param name="documentListName">The name of the document list that contains this folder.</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="sort">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">Indicates the zero-based offset in the complete result set where the returned entities begin, when creating paged results from a query. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.Documentlists.FolderUrl.CreateFolderUrl(System.String)">
            <summary>
            Get Resource Url for CreateFolder
            </summary>
            <param name="documentListName">The name of the document list for which to create a new folder.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.Documentlists.FolderUrl.UpdateFolderUrl(System.String,System.String)">
            <summary>
            Get Resource Url for UpdateFolder
            </summary>
            <param name="documentListName">The name of the document list that contains this folder.</param>
            <param name="folderId">Unique identifier of the folder.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.Documentlists.FolderUrl.DeleteFolderUrl(System.String,System.String)">
            <summary>
            Get Resource Url for DeleteFolder
            </summary>
            <param name="documentListName">The name of the document list associated with the folder to delete.</param>
            <param name="folderId">The unique identifier of the folder to delete.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.DocumentListUrl.GetDocumentListsUrl(System.Nullable{System.Int64},System.String,System.Nullable{System.Int64})">
            <summary>
            Get Resource Url for GetDocumentLists
            </summary>
            <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="sort"></param>
            <param name="startIndex"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.DocumentListUrl.GetDocumentListUrl(System.String)">
            <summary>
            Get Resource Url for GetDocumentList
            </summary>
            <param name="documentListName">The name of the document list.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.DocumentTypeUrl.ListUrl(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get Resource Url for List
            </summary>
            <param name="pageSize"></param>
            <param name="startIndex"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.DocumentTypeUrl.GetUrl(System.String)">
            <summary>
            Get Resource Url for Get
            </summary>
            <param name="documentTypeName">The documentType name being retrieved.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.PropertyTypeUrl.GetListUrl(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get Resource Url for GetList
            </summary>
            <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="startIndex"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.PropertyTypeUrl.GetUrl(System.String)">
            <summary>
            Get Resource Url for Get
            </summary>
            <param name="propertyTypeName">The name of the content property type.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.PropertyTypeUrl.PropertyValueTypesUrl">
            <summary>
            Get Resource Url for PropertyValueTypes
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Event.EventNotificationUrl.GetEventsUrl(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Get Resource Url for GetEvents
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Event.EventNotificationUrl.GetEventUrl(System.String)">
            <summary>
            Get Resource Url for GetEvent
            </summary>
            <param name="eventId">The unique identifier of the event being retrieved. An event is a notification about a create, read, update, or delete on an order, product, discount or category.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.Adminuser.AdminUserUrl.GetUserUrl(System.String)">
            <summary>
            Get Resource Url for GetUser
            </summary>
            <param name="userId">Unique identifier of the administrator account to retrieve.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.Adminuser.AdminUserUrl.GetTenantScopesForUserUrl(System.String)">
            <summary>
            Get Resource Url for GetTenantScopesForUser
            </summary>
            <param name="userId">Unique identifier of the user whose tenant scopes you want to retrieve.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.Adminuser.TenantAdminUserAuthTicketUrl.CreateUserAuthTicketUrl(System.Nullable{System.Int32})">
            <summary>
            Get Resource Url for CreateUserAuthTicket
            </summary>
            <param name="tenantId">Unique identifier of the Mozu tenant or development store for which to generate the user authentication ticket.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.Adminuser.TenantAdminUserAuthTicketUrl.RefreshAuthTicketUrl(System.Nullable{System.Int32})">
            <summary>
            Get Resource Url for RefreshAuthTicket
            </summary>
            <param name="tenantId">Unique identifier of the Mozu tenant or development store for which to refresh the authentication ticket.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.Adminuser.TenantAdminUserAuthTicketUrl.DeleteUserAuthTicketUrl(System.String)">
            <summary>
            Get Resource Url for DeleteUserAuthTicket
            </summary>
            <param name="refreshToken">Refresh token string associated with the user authentication ticket.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.Appdev.ApplicationUrl.RegisterNamespaceUrl">
            <summary>
            Get Resource Url for RegisterNamespace
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.Appdev.ApplicationUrl.ReRegisterNamespaceUrl">
            <summary>
            Get Resource Url for ReRegisterNamespace
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.Applications.AuthTicketUrl.AuthenticateAppUrl">
            <summary>
            Get Resource Url for AuthenticateApp
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.Applications.AuthTicketUrl.RefreshAppAuthTicketUrl">
            <summary>
            Get Resource Url for RefreshAppAuthTicket
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.Applications.AuthTicketUrl.DeleteAppAuthTicketUrl(System.String)">
            <summary>
            Get Resource Url for DeleteAppAuthTicket
            </summary>
            <param name="refreshToken">The refresh token string from the application's authentication ticket.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.ReferenceDataUrl.GetAddressSchemaUrl(System.String)">
            <summary>
            Get Resource Url for GetAddressSchema
            </summary>
            <param name="countryCode">2 letter geographic code representing the country for the physical or mailing address. Currently limited to the US.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.ReferenceDataUrl.GetAddressSchemasUrl">
            <summary>
            Get Resource Url for GetAddressSchemas
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.ReferenceDataUrl.GetBehaviorUrl(System.Int64)">
            <summary>
            Get Resource Url for GetBehavior
            </summary>
            <param name="behaviorId">***Always private and should not be published.***</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.ReferenceDataUrl.GetBehaviorCategoriesUrl">
            <summary>
            Get Resource Url for GetBehaviorCategories
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.ReferenceDataUrl.GetBehaviorCategoryUrl(System.Int64)">
            <summary>
            Get Resource Url for GetBehaviorCategory
            </summary>
            <param name="categoryId">***Always private and should not be published.***</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.ReferenceDataUrl.GetBehaviorsUrl(System.String)">
            <summary>
            Get Resource Url for GetBehaviors
            </summary>
            <param name="userType"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.ReferenceDataUrl.GetContentLocalesUrl">
            <summary>
            Get Resource Url for GetContentLocales
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.ReferenceDataUrl.GetCountriesUrl">
            <summary>
            Get Resource Url for GetCountries
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.ReferenceDataUrl.GetCurrenciesUrl">
            <summary>
            Get Resource Url for GetCurrencies
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.ReferenceDataUrl.GetTimeZonesUrl">
            <summary>
            Get Resource Url for GetTimeZones
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.ReferenceDataUrl.GetTopLevelDomainsUrl">
            <summary>
            Get Resource Url for GetTopLevelDomains
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.ReferenceDataUrl.GetUnitsOfMeasureUrl(System.String)">
            <summary>
            Get Resource Url for GetUnitsOfMeasure
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.SiteDataUrl.GetDBValueUrl(System.String)">
            <summary>
            Get Resource Url for GetDBValue
            </summary>
            <param name="dbEntryQuery">The database entry query string used to retrieve the record information.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.SiteDataUrl.CreateDBValueUrl(System.String)">
            <summary>
            Get Resource Url for CreateDBValue
            </summary>
            <param name="dbEntryQuery">The database entry string to create.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.SiteDataUrl.UpdateDBValueUrl(System.String)">
            <summary>
            Get Resource Url for UpdateDBValue
            </summary>
            <param name="dbEntryQuery">The database entry query string used to update the record information.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.SiteDataUrl.DeleteDBValueUrl(System.String)">
            <summary>
            Get Resource Url for DeleteDBValue
            </summary>
            <param name="dbEntryQuery">The database entry string to delete.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.TenantDataUrl.GetDBValueUrl(System.String)">
            <summary>
            Get Resource Url for GetDBValue
            </summary>
            <param name="dbEntryQuery">The database entry query string used to retrieve the record information.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.TenantDataUrl.CreateDBValueUrl(System.String)">
            <summary>
            Get Resource Url for CreateDBValue
            </summary>
            <param name="dbEntryQuery">The database entry string to create.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.TenantDataUrl.UpdateDBValueUrl(System.String)">
            <summary>
            Get Resource Url for UpdateDBValue
            </summary>
            <param name="dbEntryQuery">The database entry query string used to update the record information.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.TenantDataUrl.DeleteDBValueUrl(System.String)">
            <summary>
            Get Resource Url for DeleteDBValue
            </summary>
            <param name="dbEntryQuery">The database entry string to delete.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.TenantUrl.GetTenantUrl(System.Int32)">
            <summary>
            Get Resource Url for GetTenant
            </summary>
            <param name="tenantId">Unique identifier of the Mozu tenant.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.UserDataUrl.GetDBValueUrl(System.String)">
            <summary>
            Get Resource Url for GetDBValue
            </summary>
            <param name="dbEntryQuery">The database entry query string used to retrieve the record information.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.UserDataUrl.CreateDBValueUrl(System.String)">
            <summary>
            Get Resource Url for CreateDBValue
            </summary>
            <param name="dbEntryQuery">The database entry string to create.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.UserDataUrl.UpdateDBValueUrl(System.String)">
            <summary>
            Get Resource Url for UpdateDBValue
            </summary>
            <param name="dbEntryQuery">The database entry query string used to update the record information.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.UserDataUrl.DeleteDBValueUrl(System.String)">
            <summary>
            Get Resource Url for DeleteDBValue
            </summary>
            <param name="dbEntryQuery">The database entry string to delete.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.User.UserAuthTicketUrl.CreateUserAuthTicketUrl">
            <summary>
            Get Resource Url for CreateUserAuthTicket
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.User.UserAuthTicketUrl.CreateAuthTicketForSiteUrl">
            <summary>
            Get Resource Url for CreateAuthTicketForSite
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.User.UserAuthTicketUrl.RefreshUserAuthTicketUrl(System.String)">
            <summary>
            Get Resource Url for RefreshUserAuthTicket
            </summary>
            <param name="refreshToken">The refresh token generated in the user authentication ticket.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.User.UserUrl.GetUserByEmailUrl(System.String)">
            <summary>
            Get Resource Url for GetUserByEmail
            </summary>
            <param name="emailAddress">The email address of the specified user or the email address associated with the specified entity.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.User.UserUrl.GetUserUrl(System.String)">
            <summary>
            Get Resource Url for GetUser
            </summary>
            <param name="userId">Unique identifier of the user.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.User.UserUrl.CreateUserUrl">
            <summary>
            Get Resource Url for CreateUser
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.User.UserUrl.CreateUsersUrl">
            <summary>
            Get Resource Url for CreateUsers
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.User.UserUrl.LoginUrl">
            <summary>
            Get Resource Url for Login
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.User.UserUrl.ResetPasswordUrl">
            <summary>
            Get Resource Url for ResetPassword
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
    </members>
</doc>
