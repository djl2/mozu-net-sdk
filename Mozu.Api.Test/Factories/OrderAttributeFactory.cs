//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.     
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#region Usings Setup

using System;
using System.Collections.Generic;
using System.Globalization;
using System.Net;
using Mozu.Api;
using Mozu.Api.Security;
using Mozu.Api.Test.Helpers;
using Newtonsoft.Json;

#endregion

namespace Mozu.Api.Test.Factories
{
	/// <summary>
	/// List of attributes that describe an order. An order attribute has content localized to the locale code of the site and several other properties that uniquely identify it to associate with an order.
	/// </summary>
	public partial class OrderAttributeFactory : BaseDataFactory
	{

	/// <summary> 
		/// Retrieves a list of order attributes.
		/// OrderAttributeFactory.GetOrderAttributes(handler : handler,  orderId :  orderId,  expectedCode: expectedCode, successCode: successCode); 
		/// var casted = JsonConvert.DeserializeObject<List<OrderAttribute>>(JsonConvert.SerializeObject(result)); 
		/// return casted;
		/// </summary>
		public static List<Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAttribute> GetOrderAttributes(ServiceClientMessageHandler handler, 
 		 string orderId, 
		 int expectedCode = (int)HttpStatusCode.OK, int successCode = (int)HttpStatusCode.OK)
		{
			SetSdKparameters();
			var apiClient = Mozu.Api.Clients.Commerce.Orders.OrderAttributeClient.GetOrderAttributesClient(
				 orderId :  orderId		);
			apiClient.WithContext(handler.ApiContext).Execute();
			return ResponseMessageFactory.CheckResponseCodes(apiClient.HttpResponse.StatusCode, expectedCode, successCode) 
					 ? (apiClient.Result()) 
					 : null;

		}

			/// <summary> 
		/// Create a new list of order attributes by providing the order ID.
		/// OrderAttributeFactory.CreateOrderAttributes(handler : handler,  orderId :  orderId,  orderAttributes :  orderAttributes,  expectedCode: expectedCode, successCode: successCode); 
		/// var casted = JsonConvert.DeserializeObject<List<OrderAttribute>>(JsonConvert.SerializeObject(result)); 
		/// return casted;
		/// </summary>
		public static List<Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAttribute> CreateOrderAttributes(ServiceClientMessageHandler handler, 
 		 string orderId, List<Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAttribute> orderAttributes, 
		 int expectedCode = (int)HttpStatusCode.OK, int successCode = (int)HttpStatusCode.OK)
		{
			SetSdKparameters();
			var apiClient = Mozu.Api.Clients.Commerce.Orders.OrderAttributeClient.CreateOrderAttributesClient(
				 orderId :  orderId,  orderAttributes :  orderAttributes		);
			apiClient.WithContext(handler.ApiContext).Execute();
			return ResponseMessageFactory.CheckResponseCodes(apiClient.HttpResponse.StatusCode, expectedCode, successCode) 
					 ? (apiClient.Result()) 
					 : null;

		}

			/// <summary> 
		/// Update the properties of an order's attributes by providing the order ID and by removing any missing properties if removeMissing is set to true.
		/// OrderAttributeFactory.UpdateOrderAttributes(handler : handler,  orderId :  orderId,  orderAttributes :  orderAttributes,  expectedCode: expectedCode, successCode: successCode);
		/// </summary>
		public static List<Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAttribute> UpdateOrderAttributes(ServiceClientMessageHandler handler, 
 		 string orderId, List<Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAttribute> orderAttributes, 
		 int expectedCode = (int)HttpStatusCode.OK, int successCode = (int)HttpStatusCode.OK)
		{
			return UpdateOrderAttributes(handler : handler,  orderId :  orderId,  removeMissing :  null,  orderAttributes :  orderAttributes, 
				expectedCode: expectedCode, successCode: successCode);
		}

		/// <summary> 
		/// Update the properties of an order's attributes by providing the order ID and by removing any missing properties if removeMissing is set to true.
		/// OrderAttributeFactory.UpdateOrderAttributes(handler : handler,  orderId :  orderId,  removeMissing :  removeMissing,  orderAttributes :  orderAttributes,  expectedCode: expectedCode, successCode: successCode); 
		/// var casted = JsonConvert.DeserializeObject<List<OrderAttribute>>(JsonConvert.SerializeObject(result)); 
		/// return casted;
		/// </summary>
		public static List<Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAttribute> UpdateOrderAttributes(ServiceClientMessageHandler handler, 
 		 string orderId, bool? removeMissing, List<Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAttribute> orderAttributes, 
		 int expectedCode = (int)HttpStatusCode.OK, int successCode = (int)HttpStatusCode.OK)
		{
			SetSdKparameters();
			var apiClient = Mozu.Api.Clients.Commerce.Orders.OrderAttributeClient.UpdateOrderAttributesClient(
				 orderId :  orderId,  removeMissing :  removeMissing,  orderAttributes :  orderAttributes		);
			apiClient.WithContext(handler.ApiContext).Execute();
			return ResponseMessageFactory.CheckResponseCodes(apiClient.HttpResponse.StatusCode, expectedCode, successCode) 
					 ? (apiClient.Result()) 
					 : null;

		}

			
	}

}


