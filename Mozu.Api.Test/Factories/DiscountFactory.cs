//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.     
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#region Usings Setup

using System;
using System.Collections.Generic;
using System.Globalization;
using System.Net;
using Mozu.Api;
using Mozu.Api.Security;
using Mozu.Api.Test.Helpers;
using Newtonsoft.Json;

#endregion

namespace Mozu.Api.Test.Factories
{
	/// <summary>
	/// Define and manage discounts to apply to products, product categories, or orders. The discounts can be a specified amount off the price, percentage off the price, or for free shipping. Create a coupon code that shoppers can use to redeem the discount.
	/// </summary>
	public partial class DiscountFactory : BaseDataFactory
	{

	/// <summary> 
		/// Retrieves a list of discounts according to any specified filter criteria and sort options.
		/// DiscountFactory.GetDiscounts(handler : handler,  dataViewMode: dataViewMode,  expectedCode: expectedCode, successCode: successCode);
		/// </summary>
		public static Mozu.Api.Contracts.ProductAdmin.DiscountCollection GetDiscounts(ServiceClientMessageHandler handler, 
 		 DataViewMode dataViewMode= DataViewMode.Live, 
		 int expectedCode = (int)HttpStatusCode.OK, int successCode = (int)HttpStatusCode.OK)
		{
			return GetDiscounts(handler : handler,  filter :  null,  pageSize :  null,  sortBy :  null,  startIndex :  null, dataViewMode: dataViewMode, 
				expectedCode: expectedCode, successCode: successCode);
		}

		/// <summary> 
		/// Retrieves a list of discounts according to any specified filter criteria and sort options.
		/// DiscountFactory.GetDiscounts(handler : handler,  filter :  filter,  pageSize :  pageSize,  sortBy :  sortBy,  startIndex :  startIndex,  dataViewMode: dataViewMode,  expectedCode: expectedCode, successCode: successCode); 
		/// var casted = JsonConvert.DeserializeObject<DiscountCollection>(JsonConvert.SerializeObject(result)); 
		/// return casted;
		/// </summary>
		public static Mozu.Api.Contracts.ProductAdmin.DiscountCollection GetDiscounts(ServiceClientMessageHandler handler, 
 		 string filter, int? pageSize, string sortBy, int? startIndex, DataViewMode dataViewMode= DataViewMode.Live, 
		 int expectedCode = (int)HttpStatusCode.OK, int successCode = (int)HttpStatusCode.OK)
		{
			SetSdKparameters();
			var apiClient = Mozu.Api.Clients.Commerce.Catalog.Admin.DiscountClient.GetDiscountsClient(
				 filter :  filter,  pageSize :  pageSize,  sortBy :  sortBy,  startIndex :  startIndex, dataViewMode: dataViewMode		);
			apiClient.WithContext(handler.ApiContext).Execute();
			return ResponseMessageFactory.CheckResponseCodes(apiClient.HttpResponse.StatusCode, expectedCode, successCode) 
					 ? (apiClient.Result()) 
					 : null;

		}

		/// <summary> 
		/// Retrieves the details of a single discount.
		/// DiscountFactory.GetDiscount(handler : handler,  discountId :  discountId,  dataViewMode: dataViewMode,  expectedCode: expectedCode, successCode: successCode); 
		/// var casted = JsonConvert.DeserializeObject<Discount>(JsonConvert.SerializeObject(result)); 
		/// return casted;
		/// </summary>
		public static Mozu.Api.Contracts.ProductAdmin.Discount GetDiscount(ServiceClientMessageHandler handler, 
 		 int discountId, DataViewMode dataViewMode= DataViewMode.Live, 
		 int expectedCode = (int)HttpStatusCode.OK, int successCode = (int)HttpStatusCode.OK)
		{
			SetSdKparameters();
			var apiClient = Mozu.Api.Clients.Commerce.Catalog.Admin.DiscountClient.GetDiscountClient(
				 discountId :  discountId, dataViewMode: dataViewMode		);
			apiClient.WithContext(handler.ApiContext).Execute();
			return ResponseMessageFactory.CheckResponseCodes(apiClient.HttpResponse.StatusCode, expectedCode, successCode) 
					 ? (apiClient.Result()) 
					 : null;

		}

		/// <summary> 
		/// Retrieves the localized content specified for the specified discount.
		/// DiscountFactory.GetDiscountContent(handler : handler,  discountId :  discountId,  dataViewMode: dataViewMode,  expectedCode: expectedCode, successCode: successCode); 
		/// var casted = JsonConvert.DeserializeObject<DiscountLocalizedContent>(JsonConvert.SerializeObject(result)); 
		/// return casted;
		/// </summary>
		public static Mozu.Api.Contracts.ProductAdmin.DiscountLocalizedContent GetDiscountContent(ServiceClientMessageHandler handler, 
 		 int discountId, DataViewMode dataViewMode= DataViewMode.Live, 
		 int expectedCode = (int)HttpStatusCode.OK, int successCode = (int)HttpStatusCode.OK)
		{
			SetSdKparameters();
			var apiClient = Mozu.Api.Clients.Commerce.Catalog.Admin.DiscountClient.GetDiscountContentClient(
				 discountId :  discountId, dataViewMode: dataViewMode		);
			apiClient.WithContext(handler.ApiContext).Execute();
			return ResponseMessageFactory.CheckResponseCodes(apiClient.HttpResponse.StatusCode, expectedCode, successCode) 
					 ? (apiClient.Result()) 
					 : null;

		}

		/// <summary> 
		/// Generates a random code for a coupon.
		/// DiscountFactory.GenerateRandomCoupon(handler : handler,  dataViewMode: dataViewMode,  expectedCode: expectedCode, successCode: successCode); 
		/// var casted = JsonConvert.DeserializeObject<string>(JsonConvert.SerializeObject(result)); 
		/// return casted;
		/// </summary>
		public static string GenerateRandomCoupon(ServiceClientMessageHandler handler, 
 		 DataViewMode dataViewMode= DataViewMode.Live, 
		 int expectedCode = (int)HttpStatusCode.OK, int successCode = (int)HttpStatusCode.OK)
		{
			SetSdKparameters();
			var apiClient = Mozu.Api.Clients.Commerce.Catalog.Admin.DiscountClient.GenerateRandomCouponClient(
				 dataViewMode: dataViewMode		);
			apiClient.WithContext(handler.ApiContext).Execute();
			return ResponseMessageFactory.CheckResponseCodes(apiClient.HttpResponse.StatusCode, expectedCode, successCode) 
					 ? (apiClient.Result()) 
					 : null;

		}

			/// <summary> 
		/// Creates a discount.
		/// DiscountFactory.CreateDiscount(handler : handler,  discount :  discount, dataViewMode: dataViewMode,  expectedCode: expectedCode, successCode: successCode); 
		/// var casted = JsonConvert.DeserializeObject<Discount>(JsonConvert.SerializeObject(result)); 
		/// return casted;
		/// </summary>
		public static Mozu.Api.Contracts.ProductAdmin.Discount CreateDiscount(ServiceClientMessageHandler handler, 
 		 Mozu.Api.Contracts.ProductAdmin.Discount discount,DataViewMode dataViewMode= DataViewMode.Live, 
		 int expectedCode = (int)HttpStatusCode.OK, int successCode = (int)HttpStatusCode.OK)
		{
			SetSdKparameters();
			var apiClient = Mozu.Api.Clients.Commerce.Catalog.Admin.DiscountClient.CreateDiscountClient(
				 discount :  discount, dataViewMode: dataViewMode		);
			apiClient.WithContext(handler.ApiContext).Execute();
			return ResponseMessageFactory.CheckResponseCodes(apiClient.HttpResponse.StatusCode, expectedCode, successCode) 
					 ? (apiClient.Result()) 
					 : null;

		}

		/// <summary> 
		/// Redeems a discount configured in the product admin.
		/// DiscountFactory.RedeemDiscount(handler : handler,  redemption :  redemption, dataViewMode: dataViewMode,  expectedCode: expectedCode, successCode: successCode); 
		/// var casted = JsonConvert.DeserializeObject<Redemption>(JsonConvert.SerializeObject(result)); 
		/// return casted;
		/// </summary>
		public static Mozu.Api.Contracts.ProductAdmin.Discounts.Redemption RedeemDiscount(ServiceClientMessageHandler handler, 
 		 Mozu.Api.Contracts.ProductAdmin.Discounts.Redemption redemption,DataViewMode dataViewMode= DataViewMode.Live, 
		 int expectedCode = (int)HttpStatusCode.OK, int successCode = (int)HttpStatusCode.OK)
		{
			SetSdKparameters();
			var apiClient = Mozu.Api.Clients.Commerce.Catalog.Admin.DiscountClient.RedeemDiscountClient(
				 redemption :  redemption, dataViewMode: dataViewMode		);
			apiClient.WithContext(handler.ApiContext).Execute();
			return ResponseMessageFactory.CheckResponseCodes(apiClient.HttpResponse.StatusCode, expectedCode, successCode) 
					 ? (apiClient.Result()) 
					 : null;

		}

			/// <summary> 
		/// Modifies a discount.
		/// DiscountFactory.UpdateDiscount(handler : handler,  discountId :  discountId,  discount :  discount, dataViewMode: dataViewMode,  expectedCode: expectedCode, successCode: successCode); 
		/// var casted = JsonConvert.DeserializeObject<Discount>(JsonConvert.SerializeObject(result)); 
		/// return casted;
		/// </summary>
		public static Mozu.Api.Contracts.ProductAdmin.Discount UpdateDiscount(ServiceClientMessageHandler handler, 
 		 int discountId, Mozu.Api.Contracts.ProductAdmin.Discount discount,DataViewMode dataViewMode= DataViewMode.Live, 
		 int expectedCode = (int)HttpStatusCode.OK, int successCode = (int)HttpStatusCode.OK)
		{
			SetSdKparameters();
			var apiClient = Mozu.Api.Clients.Commerce.Catalog.Admin.DiscountClient.UpdateDiscountClient(
				 discountId :  discountId,  discount :  discount, dataViewMode: dataViewMode		);
			apiClient.WithContext(handler.ApiContext).Execute();
			return ResponseMessageFactory.CheckResponseCodes(apiClient.HttpResponse.StatusCode, expectedCode, successCode) 
					 ? (apiClient.Result()) 
					 : null;

		}

		/// <summary> 
		/// Modifies the localized content for the specified discount. Rename the discount without modifying any other discount properties.
		/// DiscountFactory.UpdateDiscountContent(handler : handler,  discountId :  discountId,  content :  content, dataViewMode: dataViewMode,  expectedCode: expectedCode, successCode: successCode); 
		/// var casted = JsonConvert.DeserializeObject<DiscountLocalizedContent>(JsonConvert.SerializeObject(result)); 
		/// return casted;
		/// </summary>
		public static Mozu.Api.Contracts.ProductAdmin.DiscountLocalizedContent UpdateDiscountContent(ServiceClientMessageHandler handler, 
 		 int discountId, Mozu.Api.Contracts.ProductAdmin.DiscountLocalizedContent content,DataViewMode dataViewMode= DataViewMode.Live, 
		 int expectedCode = (int)HttpStatusCode.OK, int successCode = (int)HttpStatusCode.OK)
		{
			SetSdKparameters();
			var apiClient = Mozu.Api.Clients.Commerce.Catalog.Admin.DiscountClient.UpdateDiscountContentClient(
				 discountId :  discountId,  content :  content, dataViewMode: dataViewMode		);
			apiClient.WithContext(handler.ApiContext).Execute();
			return ResponseMessageFactory.CheckResponseCodes(apiClient.HttpResponse.StatusCode, expectedCode, successCode) 
					 ? (apiClient.Result()) 
					 : null;

		}

			/// <summary> 
		/// Deletes a discount specified by its discount ID.
		/// DiscountFactory.DeleteDiscount(handler : handler,  discountId :  discountId,  dataViewMode: dataViewMode,  expectedCode: expectedCode, successCode: successCode); 
		/// var casted = JsonConvert.DeserializeObject<void>(JsonConvert.SerializeObject(result)); 
		/// return casted;
		/// </summary>
		public static void DeleteDiscount(ServiceClientMessageHandler handler, 
 		int discountId, DataViewMode dataViewMode= DataViewMode.Live, 
		 int expectedCode = (int)HttpStatusCode.NoContent, int successCode = (int)HttpStatusCode.NoContent)
		{
			SetSdKparameters();
			var apiClient = Mozu.Api.Clients.Commerce.Catalog.Admin.DiscountClient.DeleteDiscountClient(
				 discountId :  discountId, dataViewMode: dataViewMode		);
			apiClient.WithContext(handler.ApiContext).Execute();
			var noResponse = ResponseMessageFactory.CheckResponseCodes(apiClient.HttpResponse.StatusCode, expectedCode, successCode) 
					 ? (apiClient.Result()) 
					 : null;

		}

		/// <summary> 
		/// Deletes a previous discount redemption from an order.
		/// DiscountFactory.UnRedeemDiscount(handler : handler,  dataViewMode: dataViewMode,  expectedCode: expectedCode, successCode: successCode);
		/// </summary>
		public static void UnRedeemDiscount(ServiceClientMessageHandler handler, 
 		DataViewMode dataViewMode= DataViewMode.Live, 
		 int expectedCode = (int)HttpStatusCode.NoContent, int successCode = (int)HttpStatusCode.NoContent)
		{
UnRedeemDiscount(handler : handler,  discountId :  null,  orderNumber :  null, dataViewMode: dataViewMode, 
				expectedCode: expectedCode, successCode: successCode);
		}

		/// <summary> 
		/// Deletes a previous discount redemption from an order.
		/// DiscountFactory.UnRedeemDiscount(handler : handler,  discountId :  discountId,  orderNumber :  orderNumber,  dataViewMode: dataViewMode,  expectedCode: expectedCode, successCode: successCode); 
		/// var casted = JsonConvert.DeserializeObject<void>(JsonConvert.SerializeObject(result)); 
		/// return casted;
		/// </summary>
		public static void UnRedeemDiscount(ServiceClientMessageHandler handler, 
 		int? discountId, int? orderNumber, DataViewMode dataViewMode= DataViewMode.Live, 
		 int expectedCode = (int)HttpStatusCode.NoContent, int successCode = (int)HttpStatusCode.NoContent)
		{
			SetSdKparameters();
			var apiClient = Mozu.Api.Clients.Commerce.Catalog.Admin.DiscountClient.UnRedeemDiscountClient(
				 discountId :  discountId,  orderNumber :  orderNumber, dataViewMode: dataViewMode		);
			apiClient.WithContext(handler.ApiContext).Execute();
			var noResponse = ResponseMessageFactory.CheckResponseCodes(apiClient.HttpResponse.StatusCode, expectedCode, successCode) 
					 ? (apiClient.Result()) 
					 : null;

		}

		
	}

}


