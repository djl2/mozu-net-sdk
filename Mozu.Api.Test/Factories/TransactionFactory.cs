//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.     
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#region Usings Setup

using System;
using System.Collections.Generic;
using System.Globalization;
using System.Net;
using Mozu.Api;
using Mozu.Api.Security;
using Mozu.Api.Test.Helpers;
using Newtonsoft.Json;

#endregion

namespace Mozu.Api.Test.Factories
{
	/// <summary>
	/// 
	/// </summary>
	public partial class TransactionFactory : BaseDataFactory
	{

	/// <summary> 
		/// 
		/// TransactionFactory.GetTransactions(handler : handler,  accountId :  accountId,  expectedCode: expectedCode, successCode: successCode); 
		/// var casted = JsonConvert.DeserializeObject<List<Transaction>>(JsonConvert.SerializeObject(result)); 
		/// return casted;
		/// </summary>
		public static List<Mozu.Api.Contracts.Customer.Transaction> GetTransactions(ServiceClientMessageHandler handler, 
 		 int accountId, 
		 int expectedCode = (int)HttpStatusCode.OK, int successCode = (int)HttpStatusCode.OK)
		{
			SetSdKparameters();
			var apiClient = Mozu.Api.Clients.Commerce.Customer.Accounts.TransactionClient.GetTransactionsClient(
				 accountId :  accountId		);
			apiClient.WithContext(handler.ApiContext).Execute();
			return ResponseMessageFactory.CheckResponseCodes(apiClient.HttpResponse.StatusCode, expectedCode, successCode) 
					 ? (apiClient.Result()) 
					 : null;

		}

			/// <summary> 
		/// 
		/// TransactionFactory.AddTransaction(handler : handler,  accountId :  accountId,  transaction :  transaction,  expectedCode: expectedCode, successCode: successCode); 
		/// var casted = JsonConvert.DeserializeObject<Transaction>(JsonConvert.SerializeObject(result)); 
		/// return casted;
		/// </summary>
		public static Mozu.Api.Contracts.Customer.Transaction AddTransaction(ServiceClientMessageHandler handler, 
 		 int accountId, Mozu.Api.Contracts.Customer.Transaction transaction, 
		 int expectedCode = (int)HttpStatusCode.Created, int successCode = (int)HttpStatusCode.Created)
		{
			SetSdKparameters();
			var apiClient = Mozu.Api.Clients.Commerce.Customer.Accounts.TransactionClient.AddTransactionClient(
				 accountId :  accountId,  transaction :  transaction		);
			apiClient.WithContext(handler.ApiContext).Execute();
			return ResponseMessageFactory.CheckResponseCodes(apiClient.HttpResponse.StatusCode, expectedCode, successCode) 
					 ? (apiClient.Result()) 
					 : null;

		}

				/// <summary> 
		/// 
		/// TransactionFactory.RemoveTransaction(handler : handler,  accountId :  accountId,  transactionId :  transactionId,  expectedCode: expectedCode, successCode: successCode); 
		/// var casted = JsonConvert.DeserializeObject<void>(JsonConvert.SerializeObject(result)); 
		/// return casted;
		/// </summary>
		public static void RemoveTransaction(ServiceClientMessageHandler handler, 
 		int accountId, string transactionId, 
		 int expectedCode = (int)HttpStatusCode.NoContent, int successCode = (int)HttpStatusCode.NoContent)
		{
			SetSdKparameters();
			var apiClient = Mozu.Api.Clients.Commerce.Customer.Accounts.TransactionClient.RemoveTransactionClient(
				 accountId :  accountId,  transactionId :  transactionId		);
			apiClient.WithContext(handler.ApiContext).Execute();
			var noResponse = ResponseMessageFactory.CheckResponseCodes(apiClient.HttpResponse.StatusCode, expectedCode, successCode) 
					 ? (apiClient.Result()) 
					 : null;

		}

		
	}

}


