//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.     
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#region Usings Setup

using System;
using System.Collections.Generic;
using System.Globalization;
using System.Net;
using Mozu.Api;
using Mozu.Api.Security;
using Mozu.Api.Test.Helpers;
using Newtonsoft.Json;

#endregion

namespace Mozu.Api.Test.Factories
{
	/// <summary>
	/// Use this subresource to manage the physical address from which shipments for this site will originate.
	/// </summary>
	public partial class ContactFactory : BaseDataFactory
	{

	/// <summary> 
		/// Retrieves the physical address from which shipments originate from the site's shipping settings.
		/// ContactFactory.GetShippingOriginAddress(handler : handler,  expectedCode: expectedCode, successCode: successCode); 
		/// var casted = JsonConvert.DeserializeObject<Contact>(JsonConvert.SerializeObject(result)); 
		/// return casted;
		/// </summary>
		public static Mozu.Api.Contracts.Core.Contact GetShippingOriginAddress(ServiceClientMessageHandler handler, 
 		 
		 int expectedCode = (int)HttpStatusCode.OK, int successCode = (int)HttpStatusCode.OK)
		{
			SetSdKparameters();
			var apiClient = Mozu.Api.Clients.Commerce.Settings.Shipping.ContactClient.GetShippingOriginAddressClient(
						);
			apiClient.WithContext(handler.ApiContext).WithBaseAddress(BaseAuthAppUrl).Execute();
			return ResponseMessageFactory.CheckResponseCodes(apiClient.HttpResponse.StatusCode, expectedCode, successCode) 
					 ? (apiClient.Result()) 
					 : null;

		}

			/// <summary> 
		/// Creates the site's shipping origin address as it appears in shipping settings.
		/// ContactFactory.CreateShippingOriginAddress(handler : handler,  siteShippingOriginAddress :  siteShippingOriginAddress,  expectedCode: expectedCode, successCode: successCode); 
		/// var casted = JsonConvert.DeserializeObject<Contact>(JsonConvert.SerializeObject(result)); 
		/// return casted;
		/// </summary>
		public static Mozu.Api.Contracts.Core.Contact CreateShippingOriginAddress(ServiceClientMessageHandler handler, 
 		 Mozu.Api.Contracts.Core.Contact siteShippingOriginAddress, 
		 int expectedCode = (int)HttpStatusCode.OK, int successCode = (int)HttpStatusCode.OK)
		{
			SetSdKparameters();
			var apiClient = Mozu.Api.Clients.Commerce.Settings.Shipping.ContactClient.CreateShippingOriginAddressClient(
				 siteShippingOriginAddress :  siteShippingOriginAddress		);
			apiClient.WithContext(handler.ApiContext).WithBaseAddress(BaseAuthAppUrl).Execute();
			return ResponseMessageFactory.CheckResponseCodes(apiClient.HttpResponse.StatusCode, expectedCode, successCode) 
					 ? (apiClient.Result()) 
					 : null;

		}

			/// <summary> 
		/// Updates the site's shipping origin address as it appears in shipping settings.
		/// ContactFactory.UpdateShippingOriginAddress(handler : handler,  siteShippingOriginAddress :  siteShippingOriginAddress,  expectedCode: expectedCode, successCode: successCode); 
		/// var casted = JsonConvert.DeserializeObject<Contact>(JsonConvert.SerializeObject(result)); 
		/// return casted;
		/// </summary>
		public static Mozu.Api.Contracts.Core.Contact UpdateShippingOriginAddress(ServiceClientMessageHandler handler, 
 		 Mozu.Api.Contracts.Core.Contact siteShippingOriginAddress, 
		 int expectedCode = (int)HttpStatusCode.OK, int successCode = (int)HttpStatusCode.OK)
		{
			SetSdKparameters();
			var apiClient = Mozu.Api.Clients.Commerce.Settings.Shipping.ContactClient.UpdateShippingOriginAddressClient(
				 siteShippingOriginAddress :  siteShippingOriginAddress		);
			apiClient.WithContext(handler.ApiContext).WithBaseAddress(BaseAuthAppUrl).Execute();
			return ResponseMessageFactory.CheckResponseCodes(apiClient.HttpResponse.StatusCode, expectedCode, successCode) 
					 ? (apiClient.Result()) 
					 : null;

		}

			
	}

}


